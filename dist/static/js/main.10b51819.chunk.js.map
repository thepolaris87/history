{"version":3,"sources":["Router.tsx","slices/test.ts","slices/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Router","path","element","testSlice","createSlice","name","initialState","reducers","test","state","action","payload","actions","rootReducer","combineReducers","store","configureStore","reducer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEe,SAASA,IACpB,OACI,mCACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,QAAQC,QAAS,6C,WCFvCC,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAJyB,OAKzBC,SAAU,CACNC,KADM,SACDC,EAAOC,GACAA,EAAOC,YAMZR,GADYA,EAAUS,QACtBT,EAAf,SCReU,EAJKC,YAAgB,CAAEN,SCKhCO,EAAQC,YAAe,CACzBC,QAASJ,IAaEK,MAVf,WACI,OACI,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAACf,EAAD,SCFDmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.10b51819.chunk.js","sourcesContent":["import { Route, Routes } from 'react-router';\n\nexport default function Router() {\n    return (\n        <>\n            <Routes>\n                <Route path='/test' element={<div>TEST</div>} />\n            </Routes>\n        </>\n    );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst initialState: string = 'test';\n\nconst testSlice = createSlice({\n    name: 'test',\n    initialState,\n    reducers: {\n        test(state, action: PayloadAction<string>) {\n            state = action.payload;\n        }\n    }\n});\n\nexport const testActions = testSlice.actions;\nexport default testSlice.reducer;\n","import { combineReducers } from 'redux';\nimport test from './test';\n\nconst rootReducer = combineReducers({ test });\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\nimport Router from './Router';\nimport rootReducer from './slices';\n\nconst store = configureStore({\n    reducer: rootReducer\n});\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <Router></Router>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}