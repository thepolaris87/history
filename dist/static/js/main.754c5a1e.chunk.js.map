{"version":3,"sources":["assets/data/stockList.js","pages/Main/Main.tsx","pages/Stock/Stock.tsx","Router.tsx","slices/test.ts","slices/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["stockList","Main","console","log","to","map","el","i","date","name","Stock","Router","path","element","replace","testSlice","createSlice","initialState","reducers","test","state","action","payload","actions","rootReducer","combineReducers","store","configureStore","reducer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAaA,EAAY,CAAC,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,4BAAQ,CAAC,KAAO,eAAe,KAAO,SAAS,KAAO,4BAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,6B,OCInK,SAASC,IAGpB,OAFAC,QAAQC,IAAIH,GAGR,gCACI,+CACA,cAAC,IAAD,CAAMI,GAAG,SAAT,sCACCJ,EAAUK,KAAI,SAACC,EAAIC,GAAL,OACX,gCACKD,EAAGE,KADR,MACiBF,EAAGG,OADpB,eAAkBF,UCVnB,SAASG,IAGpB,OAAO,2DCDI,SAASC,IACpB,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,QAAQC,QAAS,cAACZ,EAAD,MAC7B,cAAC,IAAD,CAAOW,KAAK,SAASC,QAAS,cAACH,EAAD,MAC9B,cAAC,IAAD,CAAOE,KAAK,gBAAgBC,QAAS,cAAC,IAAD,CAAUC,SAAO,EAACV,GAAG,iB,WCNpEW,EAAYC,YAAY,CAC1BP,KAAM,OACNQ,aAJyB,OAKzBC,SAAU,CACNC,KADM,SACDC,EAAOC,GACAA,EAAOC,YAMZP,GADYA,EAAUQ,QACtBR,EAAf,SCReS,EAJKC,YAAgB,CAAEN,SCKhCO,EAAQC,YAAe,CACzBC,QAASJ,IAaEK,MAVf,WACI,OACI,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAACf,EAAD,SCFDmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.754c5a1e.chunk.js","sourcesContent":["export const stockList = [{\"date\":\"2021. 12. 2\",\"code\":\"000020\",\"name\":\"동화약품\"},{\"date\":\"2021. 11. 12\",\"code\":\"005930\",\"name\":\"삼성전자\"},{\"date\":\"2021. 12. 2\",\"code\":\"005930\",\"name\":\"삼성전자\"}]","import { Link } from 'react-router-dom';\n\nimport { stockList } from '../../assets/data/stockList';\n\nexport default function Main() {\n    console.log(stockList);\n\n    return (\n        <div>\n            <div>메인</div>\n            <Link to='/stock'>테스트로</Link>\n            {stockList.map((el, i) => (\n                <div key={`test-${i}`}>\n                    {el.date} / {el.name}\n                </div>\n            ))}\n        </div>\n    );\n}\n","import useStockList from './useStockList';\n\nexport default function Stock() {\n    // const aa = useStockList();\n\n    return <div>ㄴ썌ㅒ썠</div>;\n}\n","import { Navigate, Route, Routes } from 'react-router';\nimport Main from './pages/Main';\nimport Stock from './pages/Stock';\n\nexport default function Router() {\n    return (\n        <>\n            <Routes>\n                <Route path='/main' element={<Main />} />\n                <Route path='/stock' element={<Stock />} />\n                <Route path='/history/dist' element={<Navigate replace to='/main' />} />\n            </Routes>\n        </>\n    );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst initialState: string = 'test';\n\nconst testSlice = createSlice({\n    name: 'test',\n    initialState,\n    reducers: {\n        test(state, action: PayloadAction<string>) {\n            state = action.payload;\n        }\n    }\n});\n\nexport const testActions = testSlice.actions;\nexport default testSlice.reducer;\n","import { combineReducers } from 'redux';\nimport test from './test';\n\nconst rootReducer = combineReducers({ test });\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\nimport Router from './Router';\nimport rootReducer from './slices';\n\nconst store = configureStore({\n    reducer: rootReducer\n});\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <Router></Router>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}