{"version":3,"sources":["webpack:///./src/utils/util.js","webpack:///./src/utils/D1Animate.js","webpack:///./src/assets/sounds/LS00000301.mp3","webpack:///./src/assets/sounds/LS00000300.mp3","webpack:///./src/components/D1feedback.js","webpack:///./src/components/D1dimmer.js","webpack:///./src/components/D1Timer.js","webpack:///./src/assets/images/LI00000013.svg","webpack:///./src/assets/images/LI00000009.svg","webpack:///./src/assets/images/D1timer.svg","webpack:///./src/components/D1directive.js","webpack:///./src/assets/images/D1tts.svg"],"names":["getUniquArray","arr","filter","el","i","indexOf","get2dimArray","n","newArray","forEach","q","Math","floor","r","getTransposeArray","tempArr","map","push","length","getPointInMatrixForm","startPoint","x","y","rows","columns","gap","reverse","center","point","offset","j","index","getPointInScatterForm","area","pointNum","neighborhood","points","isPointInsideBBox","bbox","abs","cx","width","cy","height","repeat","getRandomNumber","boundingBox","x2","y2","some","bbox2","bbox1","console","error","wait","delay","Promise","resolve","setTimeout","getRandomArrayElement","shuffle","slice","min","max","random","getRandomNumberArray","isUnique","randArr","uniqueArr","getSumArray","reduce","acc","num","getSimultaneousEquationConstant","x1","y1","a","b","convertToPathStr","line","rect","circle","polygon","_rest","rest","Array","isArray","array","copyArray","k","makeArrayNumber","startNum","endNum","rangeNum","isSameArray","saveImage","svg","canvas","document","createElement","data","XMLSerializer","serializeToString","blob","Blob","type","img","Image","url","URL","createObjectURL","src","onload","getContext","drawImage","revokeObjectURL","uri","toDataURL","replace","log","href","download","click","calculateAnswer","sign","ans","D1Animate","drawPath","path","duration","totalLength","getTotalLength","pathStr","attr","Snap","animate","val","subPath","getSubpath","d","undefined","moveTo","dx","dy","element","transform","onPath","local","easing","startPt","getPointAtLength","blink","interval","opacity","pointerEvents","flip","front","getBBox","matrix","sliding","hiddenTime","remove","rolling","directionAngle","multiple","revolutions","window","mina","linear","dxy","radius","w","radian","PI","cos","sin","diretion","translate","rotate","scale","shake","fadeIn","from","to","opacityNum","Number","zoom","begin","end","D1feedback","SOL","SVG","g","bool","rotation","retouchTime","preventTouchRect","icon","feedbackWrong","feedbackRight","iconNode","loadFragment","key","node","getTBox","iconSize","getAttribute","trans","localSound","LS00000301","LS00000300","sound","loadLocalSound","appendTo","controller","addUserAction","retouchTimeout","play","once","clearTimeout","Dimmer","dimmerG","addClass","visibility","this","show","hide","before","Timer","options","timerData","background","image","timerBg","numberAttrs","fontSize","color","className","progress","strokeWidth","timeout","beforeStopCb","afterStopCb","seconds","timerInterval","isPlaying","progressPath","pathTotalLength","dimmer","animateTimeout","timerGBBox","timerG","cb","t","animateRotation","startInterval","secondTextEl","select","setInterval","stop","text","lengthPerTime","strokeDashoffset","endTime","destroy","clearInterval","reset","strokeDasharray","pause","start","init","backgroundG","bgImg","imgBg","loadImage","use","append","backgroundBBox","timerTextG","toString","fill","textAnchor","textGBBox","h","progressG","progressPathStr","strokeClass","class","module","exports","D1directive","ttsOffet","directiveG","directText","directive","tts","blinkOffset","D1tts"],"mappings":"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","file":"static/js/0.2d65371c.chunk.js","sourcesContent":["import Snap from 'sol-common/snap';\n\nexport const getSVGPoint = event => {\n    const svg = document.querySelector('#frame2d');\n    const pt = svg.createSVGPoint();\n    pt.x = event.clientX;\n    pt.y = event.clientY;\n    return pt.matrixTransform(svg.getScreenCTM().inverse());\n};\nexport const getUniquArray = arr => arr.filter((el, i) => arr.indexOf(el) === i);\nexport const get2dimArray = (arr, n) => {\n    const newArray = [];\n    arr.forEach((el, i) => {\n        const q = Math.floor(i / n);\n        const r = i % n;\n        if (r === 0) newArray[q] = [];\n        newArray[q][r] = el;\n    });\n    return newArray;\n};\nexport const getTransposeArray = arr => {\n    const newArray = [];\n    for (let i = 0; i < arr[0].length; i++) {\n        const tempArr = arr.map(el => el[i]);\n        newArray.push(tempArr);\n    }\n    return newArray;\n};\n\nexport const getClassNames = element => element.node.className.baseVal;\n\nexport const getPointInMatrixForm = ({ startPoint = { x: 0, y: 0 }, rows, columns, gap = { x: 0, y: 0 }, reverse = false, center = true }) => {\n    const point = [];\n    const offset = { x: center ? -gap.x * 0.5 * (columns - 1) : 0, y: center ? -gap.y * 0.5 * (rows - 1) : 0 };\n\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < columns; j++) {\n            const index = i * columns + j;\n            const [x, y] = [startPoint.x + gap.x * j + offset.x, startPoint.y + offset.y + (reverse ? -gap.y * i : gap.y * i)];\n            point[index] = { x, y };\n        }\n    }\n    return point;\n};\nexport const getPointInScatterForm = ({ area, pointNum, neighborhood }) => {\n    const points = [];\n    const isPointInsideBBox = (bbox, x, y) => Math.abs(bbox.cx - x) <= bbox.width / 2 && Math.abs(bbox.cy - y) <= bbox.height / 2;\n    const isBBoxIntersect = (bbox1, bbox2) =>\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2);\n\n    const limit = 1000;\n    let n = 0;\n\n    for (let index = 0; index < pointNum; index++) {\n        let repeat = true;\n        while (repeat && n < limit) {\n            const cx = getRandomNumber(area.x + neighborhood.width / 2, area.x + area.width - neighborhood.width / 2);\n            const cy = getRandomNumber(area.y + neighborhood.height / 2, area.y + area.height - neighborhood.height / 2);\n            const boundingBox = {\n                x: cx - neighborhood.width / 2,\n                x2: cx + neighborhood.width / 2,\n                cx,\n                y: cy - neighborhood.height / 2,\n                y2: cy + neighborhood.height / 2,\n                cy,\n                width: neighborhood.width,\n                height: neighborhood.height\n            };\n            const isOverlap = points.some(el => isBBoxIntersect(el, boundingBox));\n            if (!isOverlap) {\n                points.push(boundingBox);\n                repeat = false;\n            }\n            n += 1;\n        }\n    }\n\n    if (n === limit) console.error('CAN NOT GENERATE!!!');\n    return points;\n};\n\nexport const getCloseElement = (targetElement, elements) =>\n    elements.reduce((a, b) => {\n        const currentPoint = targetElement.getBBox().cx;\n        const beforeDx = Math.abs(a.getBBox().cx - currentPoint);\n        const currentDx = Math.abs(b.getBBox().cx - currentPoint);\n        return beforeDx > currentDx ? b : a;\n    }, elements[0]);\n\nexport const wait = (delay = 300) => new Promise(resolve => setTimeout(resolve, delay));\n\nexport const removeArrayElement = (arr, element) => arr.filter(el => el !== element);\nexport const getRandomArrayElement = (arr, n) => {\n    const newArray = shuffle(arr).slice(0, n);\n    while (newArray.length < n) {\n        newArray.push(shuffle(arr)[0]);\n    }\n    return newArray;\n};\nexport const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const getRandomNumberArray = (min, max, n, isUnique = true) => {\n    let randArr = [];\n    let uniqueArr = [];\n    if (isUnique) {\n        while (uniqueArr.length !== n) {\n            for (let index = 0; index < n; index++) {\n                randArr[index] = getRandomNumber(min, max);\n            }\n            uniqueArr = getUniquArray(randArr);\n        }\n    } else {\n        for (let index = 0; index < n; index++) {\n            randArr[index] = getRandomNumber(min, max);\n        }\n    }\n\n    return randArr;\n};\nexport const getSumArray = (arr) => arr.reduce((acc, num) => acc + num);\n\nexport const getSimultaneousEquationConstant = ([x1, y1], [x2, y2]) => {\n    const a = (y2 - y1) / (x2 - x1);\n    const b = y2 - a * x2;\n    return { a, b };\n};\n\nexport const convertToPathStr = {\n    line: ({ x1 = 0, y1 = 0, x2 = 0, y2 = 0 }) => 'M' + [x1, y1] + ' L' + [x2, y2],\n    rect: ({ x = 0, y = 0, width = 0, height = 0 }) => 'M' + [x, y] + ' l' + [0, height] + ' l' + [width, 0] + ' l' + [0, -height] + ' l' + [-width, 0],\n    circle: ({ cx = 0, cy = 0, r = 0 }) => 'M' + [cx + r, cy - r] + 'm' + [-r, 0] + 'a' + [r, r, 0, 1, 1, 0, r * 2] + 'a' + [r, r, 0, 1, 1, 0, -(r * 2)],\n    polygon: (..._rest) => {\n        const rest = Array.isArray(_rest[0]) ? _rest[0] : _rest;\n        return rest.reduce((a, b, i) => {\n            if (i === 0) return (a += b + ',');\n            else if (i === 1) return (a += b + ' ');\n            else if (i % 2 === 0) return (a += 'L' + b + ',');\n            else return (a += b + ' ');\n        }, 'M');\n    }\n};\n\nexport const shuffle = array => {\n    const copyArray = array.map(el => el);\n    for (let i = copyArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const k = copyArray[i];\n        copyArray[i] = copyArray[j];\n        copyArray[j] = k;\n    }\n    return copyArray;\n};\n\nexport const makeArrayNumber = ({ startNum = 1, endNum }) => {\n    const rangeNum = [];\n    for (let i = startNum; i < endNum + 1; i++) {\n        rangeNum.push(i);\n    }\n    return rangeNum;\n};\n\nexport const isSameArray = (a, b) => {\n    let n;\n    if (a.length === b.length) {\n        n = 0;\n        a.forEach((el, i) => {\n            if (el === b[i]) n += 1;\n        });\n    }\n    return n === a.length;\n};\n\nexport const saveImage = svg => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 800;\n    canvas.height = 800;\n    const data = new XMLSerializer().serializeToString(svg);\n    const blob = new Blob([data], { type: 'image/svg+xml' });\n    const img = new Image();\n    const url = URL.createObjectURL(blob);\n    img.src = url;\n\n    img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        canvas.getContext('2d')?.drawImage(img, 0, 0);\n        URL.revokeObjectURL(url);\n        const uri = canvas.toDataURL('image/png').replace('image/png', 'octet/stream');\n        console.log(uri);\n        const a = document.createElement('a');\n        a.href = uri;\n        a.download = 'myPhoto.png';\n        a.click();\n        URL.revokeObjectURL(uri);\n    };\n};\n\nexport const calculateAnswer = (num, sign) => {\n    let ans;\n    switch (sign) {\n        case '+':\n            ans = 0;\n            num.forEach(el => {\n                ans = ans + el;\n            });\n            break;\n        case '-':\n            num.forEach((el, i) => {\n                ans = i === 0 ? el : ans + el;\n            });\n            break;\n        case '*':\n            ans = 1;\n            num.forEach(el => {\n                ans = ans * el;\n            });\n            break;\n        case '/':\n            ans = {};\n            ans.q = Math.floor(num[0] / num[1]);\n            ans.r = num[0] % num[1];\n            break;\n    }\n    return ans;\n};\n","import Snap from 'sol-common/snap';\n\nconst D1Animate = {\n    drawPath: ({ path, duration }) => {\n        const totalLength = path.getTotalLength();\n        const pathStr = path.attr('d');\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const subPath = Snap.path.getSubpath(pathStr, 0, val * totalLength);\n                    path.attr({ d: subPath });\n                },\n                duration,\n                undefined,\n                resolve\n            );\n        });\n    },\n    moveTo: ({ dx, dy, duration, element, r = '' }) => {\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    element.transform(`t ${dx * val} ${dy * val} ${r && 'r ' + r}`);\n                },\n                duration,\n                undefined,\n                resolve\n            );\n        });\n    },\n\n    onPath: ({ path, duration = 3000, element, local = '', easing }) => {\n        const startPt = Snap.path.getPointAtLength(path, 0);\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const { x, y } = Snap.path.getPointAtLength(path, val * Snap.path.getTotalLength(path));\n                    const transform = local + 't' + [x - startPt.x, y - startPt.y];\n                    element.transform(transform);\n                },\n                duration,\n                easing,\n                resolve\n            );\n        });\n    },\n    blink: ({ interval = 0.5, duration = 500, element, opacity = 1 }) => {\n        element.attr({ pointerEvents: 'none' });\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    element.attr({ opacity: val });\n                },\n                duration,\n                val => {\n                    if (val < interval) return (-(1 / interval) * val + 1) * opacity;\n                    else return (1 / (1 - interval)) * (val - interval) * opacity;\n                },\n                resolve\n            );\n        });\n    },\n    flip: ({ front, duration }) => {\n        const { cx } = front.getBBox();\n        return new Promise(resolve => {\n            Snap.animate(0, 1, val => front.transform(Snap.matrix(1 - val, 0, 0, 1, val * cx, 0)), duration, undefined, resolve);\n        });\n    },\n    sliding: ({ element, dx, dy, hiddenTime, duration }) => {\n        const { local } = element.transform();\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const opacity = val < hiddenTime ? 1 : -(1 / (1 - hiddenTime)) * val + 1 / (1 - hiddenTime);\n                    element.attr({ opacity }).transform(local + 't' + [dx * val * val, dy * val * val]);\n                },\n                duration,\n                undefined,\n                () => {\n                    element.remove();\n                    resolve();\n                }\n            );\n        });\n    },\n    rolling: ({ element, directionAngle, duration, multiple, revolutions, easing = window.mina.linear, dxy }) => {\n        const { local } = element.transform();\n        const radius = element.getBBox().w / 2;\n        const radian = directionAngle * (Math.PI / 180);\n        const [x, y] = dxy\n            ? [dxy.x / revolutions / multiple, dxy.y / revolutions / multiple]\n            : [radius * Math.cos(radian) * Math.PI, -radius * Math.sin(radian) * Math.PI];\n        const sign = Math.cos(radian) < 0 ? -1 : 1;\n        const diretion = Math.abs(Math.sin(radian)) === 1 ? -Math.sin(radian) : sign;\n\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const translate = local + 't' + [revolutions * x * multiple * val, revolutions * y * multiple * val];\n                    const rotate = 'r' + diretion * val * (revolutions * 360);\n                    const scale = 's' + (1 + (multiple - 1) * val);\n                    element.transform(translate + rotate + scale);\n                },\n                duration,\n                easing,\n                resolve\n            );\n        });\n    },\n    shake: ({ duration, rotate, element, reverse = true }) => {\n        const sign = reverse ? 1 : -1;\n        const { local } = element.transform();\n        return new Promise(resolve =>\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    if (val < 0.25) val = 4 * val;\n                    else if (val < 0.75) val = -4 * val + 2;\n                    else val = 4 * val - 4;\n                    element.transform(local + 'r' + sign * rotate * val);\n                },\n                duration,\n                undefined,\n                resolve\n            )\n        );\n    },\n    fadeIn: ({ element, duration, from = 0, to = 1 }) => {\n        return new Promise(resolve => {\n            const opacityNum = Number(element.attr('opacity'));\n            Snap.animate(\n                from,\n                to,\n                val => {\n                    element.attr('opacity', opacityNum + (1 - opacityNum) * val);\n                },\n                duration,\n                null,\n                resolve\n            );\n        });\n    },\n    zoom: ({ type, element, duration, begin, end, local = '', from = 0, to = 1 }) => {\n        return new Promise(resolve => {\n            let scale = 0;\n            !begin && (begin = type === 'in' ? 0 : 1);\n            !end && (end = type === 'in' ? 1 : 0);\n\n            Snap.animate(\n                from,\n                to,\n                val => {\n                    scale = type === 'in' ? begin + (1 - begin) * val + (end - 1) : 1 - val + (begin - 1) * (1 - val) + end * val;\n                    element.transform(`${local}s ${scale}`);\n                },\n                duration,\n                null,\n                resolve\n            );\n        });\n    }\n};\n\nexport default D1Animate;\n","export default __webpack_public_path__ + \"static/media/LS00000301.mp3?d696a4b2\";","export default __webpack_public_path__ + \"static/media/LS00000300.mp3?688e36a7\";","import { loadLocalSound, loadFragment } from 'sol-common';\nimport Snap from 'sol-common/snap';\nimport { SOL } from 'sol-common/util';\nimport feedbackRight from '../assets/images/LI00000013.svg';\nimport feedbackWrong from '../assets/images/LI00000009.svg';\nimport LS00000301 from '../assets/sounds/LS00000301.mp3';\nimport LS00000300 from '../assets/sounds/LS00000300.mp3';\n\nexport default function D1feedback({ canvas = SOL.SVG.g(), el, bool, scale = 1, gap = [0, 0], rotation = 0, retouchTime = 300 }) {\n    return new Promise(resolve => {\n        const preventTouchRect = SOL.SVG.rect(0, 0, 800, 500).attr({ opacity: '0' }); // 추가 터치 방지\n        const index = Number(bool);\n        // 아이콘        \n        const icon = [feedbackWrong, feedbackRight][index];\n        const { node: iconNode } = loadFragment({ src: icon, key: 'feedback' + (index + 1), type: 'svg' });        \n        const { x2, y } = el.getTBox();\n        const iconSize = [iconNode.getAttribute('width'), iconNode.getAttribute('height')].map(el => el * scale);\n        const trans = [x2 - iconSize[0] / 2 + gap[0], y - iconSize[1] + gap[1]];\n        \n        // 사운드\n        const localSound = [LS00000301, LS00000300][index];\n        const sound = loadLocalSound(localSound);\n\n        // 아이콘 그리기\n        canvas.transform('t' + trans + 'r' + rotation + 's' + scale);\n        Snap(iconNode).appendTo(canvas);\n\n        // setUserAction\n        SOL.controller.addUserAction(index);\n\n        const retouchTimeout = setTimeout(() => preventTouchRect.remove(), retouchTime);\n        // 사운드 재생\n        sound.play();\n        sound.once('end', () => {\n            preventTouchRect && preventTouchRect.remove();\n            retouchTimeout && clearTimeout(retouchTimeout);\n            canvas.remove();\n            resolve();\n        });\n    });\n}\n","export default function Dimmer(canvas) {\n  const dimmerG = canvas.g().addClass('dimmer').attr({ visibility: 'hidden' });\n  const createBackground = () => {\n    dimmerG.rect(0, 0, 800, 500).addClass('f01 sno').attr({ opacity: 0.8 });\n  };\n\n  this.show = () => {\n    dimmerG.attr('visibility', 'visible');\n  };\n\n  this.hide = () => {\n    dimmerG.attr('visibility', 'hidden');\n  };\n\n  createBackground();\n  canvas.before(dimmerG);\n\n  return this;\n}\n","import { loadImage } from 'sol-common';\nimport Snap from 'sol-common/snap';\nimport { convertToPathStr } from '../utils/util';\nimport Dimmer from './D1dimmer';\nimport timerBg from '../assets/images/D1timer.svg';\n\nexport default function Timer(canvas, options) {\n    const timerData = {\n        background: {\n            image: {\n                src: timerBg,\n                x: 735,\n                y: 10,\n                scale: 1,\n            },\n        },\n        numberAttrs: {\n            fontSize: 24,\n            color: '#1C233C',\n            offset: { x: 0, y: -3 },\n            className: '',\n        },\n        progress: {\n            strokeWidth: 3,\n            className: 's02',\n            offset: { x: -0.5, y: 2.5 },\n        },\n        timeout: 60 || 999, // TODO: 제한 시간 데어터 연동 추가\n        ...options,\n    };\n    const {\n        background,\n        numberAttrs,\n        progress,\n        timeout,\n        beforeStopCb,\n        afterStopCb,\n    } = timerData;\n\n    let seconds = 0;\n    let timerInterval = null;\n    let isPlaying = false;\n    let progressPath = null;\n    let pathTotalLength = 0;\n    let dimmer = null;\n\n    const animateTimeout = () => {\n        const timerGBBox = this.timerG.getBBox();\n        const duration = 1000;\n        const cx = 400;\n        const cy = 250;\n        const scale = 2;\n\n        const animateRotation = (cb) => {\n            const local = this.timerG.transform().local;\n            Snap.animate(\n                0,\n                100,\n                (val) => {\n                    const t = Math.floor(val / 10) % 2 ? 5 : -5;\n                    this.timerG.transform(`${local} t${t} `);\n                },\n                600,\n                null,\n                () => {\n                    this.timerG.transform(`${local} t0 `);\n                    cb();\n                }\n            );\n        };\n\n        return new Promise((resolve) => {\n            Snap.animate(\n                0,\n                1,\n                (val) => {\n                    this.timerG.transform(\n                        `t ${(cx - timerGBBox.cx) * val} ${\n                            (cy - timerGBBox.cy) * val\n                        } s ${scale * val + 1}`\n                    );\n                },\n                duration,\n                null,\n                () => {\n                    animateRotation(resolve);\n                }\n            );\n        });\n    };\n\n    const startInterval = () => {\n        const textEl = this.timerG.select('.timer-text');\n        const secondTextEl = textEl.select('.number');\n\n        timerInterval = setInterval(() => {\n            if (seconds >= timeout) {\n                this.stop();\n                return;\n            }\n\n            seconds++;\n            secondTextEl.attr({ text: seconds });\n\n            if (timeout !== 999) {\n                const lengthPerTime = pathTotalLength / timeout;\n                Snap.animate(\n                    0,\n                    1,\n                    (val) => {\n                        progressPath.attr({\n                            strokeDashoffset:\n                                pathTotalLength -\n                                lengthPerTime * (seconds - 1) -\n                                lengthPerTime * val,\n                        });\n                    },\n                    1000,\n                    null,\n                    null\n                );\n            }\n        }, 1000);\n    };\n\n    this.timerG = canvas.g().addClass('timer');\n    this.endTime = 0;\n\n    this.destroy = () => {\n        isPlaying = false;\n        clearInterval(timerInterval);\n        this.timerG.remove();\n    };\n\n    this.reset = () => {\n        seconds = 0;\n        this.timerG.select('.number').attr({ text: seconds });\n        progressPath.attr({\n            strokeDashoffset: pathTotalLength,\n            strokeDasharray: pathTotalLength,\n        });\n    };\n\n    this.pause = () => {\n        // TODO: 문제를 다 푼 경우: 시간 state 설정\n        if (isPlaying) {\n            clearInterval(timerInterval);\n        } else {\n            startInterval();\n        }\n        isPlaying = !isPlaying;\n    };\n\n    this.stop = async () => {\n        isPlaying = false;\n        clearInterval(timerInterval);\n        dimmer.show();\n        beforeStopCb && beforeStopCb();\n        await animateTimeout();\n        afterStopCb && afterStopCb();\n    };\n\n    this.start = () => {\n        isPlaying = true;\n        startInterval();\n    };\n\n    this.init = () => {\n        const createElement = () => {\n            const backgroundG = this.timerG.g().addClass('timer-background');\n            const { image: bgImg } = background;\n            const imgBg = loadImage({\n                src: timerBg,\n                key: 'timerBG',\n                type: 'svg',\n            })\n                .use()\n                .attr({\n                    transform: `t ${bgImg.x} ${bgImg.y} s ${bgImg.scale}`,\n                });\n            backgroundG.append(imgBg);\n            const backgroundBBox = backgroundG.getBBox();\n\n            const timerTextG = this.timerG.g().addClass('timer-text');\n            timerTextG\n                .text(\n                    0 + numberAttrs.offset.x,\n                    0 + numberAttrs.offset.y,\n                    seconds.toString()\n                )\n                .addClass(`number ${numberAttrs.className}`)\n                .attr({\n                    fontSize: numberAttrs.fontSize,\n                    fill: numberAttrs.color,\n                    textAnchor: 'middle',\n                });\n            const textGBBox = timerTextG.getBBox();\n            timerTextG.transform(\n                `t ${backgroundBBox.cx} ${backgroundBBox.cy + textGBBox.h / 2}`\n            );\n\n            const progressG = this.timerG.g().addClass('timer-progress');\n            const progressPathStr = convertToPathStr.circle({\n                cx: backgroundBBox.cx + progress.offset.x,\n                cy: backgroundBBox.cy + progress.offset.y,\n                r: backgroundBBox.w / 2 - 7,\n            });\n            const { className: strokeClass, strokeWidth } = progress;\n\n            pathTotalLength = Snap.path.getTotalLength(progressPathStr);\n            progressPath = progressG.path(progressPathStr).attr({\n                class: `${strokeClass} fno`,\n                strokeDashoffset: timeout !== 999 ? pathTotalLength : 0,\n                strokeDasharray: pathTotalLength,\n                strokeWidth: strokeWidth,\n            });\n\n            dimmer = new Dimmer(this.timerG);\n        };\n\n        createElement();\n        this.start();\n    };\n\n    return this;\n}\n","module.exports = \"<svg version=\\\"1.1\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"43\\\" height=\\\"43\\\" viewBox=\\\"0 0 43 43\\\" style=\\\"enable-background:new 0 0 43 43;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#23C274;} .st1{fill:none;stroke:#FFFFFF;stroke-width:5;stroke-linecap:round;stroke-miterlimit:10;} </style><g><path class=\\\"st0\\\" d=\\\"M0.5,8.8v16.8c0,3.8,2.8,7,6.4,7.4v7.3c0,0.6,0.4,1.1,1,1.3c0,0.1,0.3,0.1,0.4,0.1c0.4,0,0.7-0.1,1-0.4 l8.3-8.3h17.3c4,0,7.4-3.3,7.4-7.4V8.7c0-4-3.3-7.4-7.4-7.4H7.8C3.8,1.4,0.5,4.7,0.5,8.8z\\\"></path><circle class=\\\"st1\\\" cx=\\\"21.5\\\" cy=\\\"17.1\\\" r=\\\"9.3\\\"></circle></g></svg>\"","module.exports = \"<svg version=\\\"1.1\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"43\\\" height=\\\"43\\\" viewBox=\\\"0 0 43 43\\\" style=\\\"enable-background:new 0 0 43 43;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:none;stroke:#FFFFFF;stroke-width:5;stroke-linecap:round;stroke-miterlimit:10;} .st1{fill:#F74E6D;} </style><path class=\\\"st1\\\" d=\\\"M0.6,8.8v16.7c0,3.7,2.8,6.8,6.4,7.3v7.3c0,0.6,0.3,1.1,0.9,1.3c0.2,0,0.4,0.1,0.6,0.1c0.4,0,0.7-0.1,1-0.4 l8.2-8.2H35c4,0,7.3-3.3,7.3-7.3V8.8c0-4-3.3-7.3-7.3-7.3H7.9C3.9,1.4,0.6,4.7,0.6,8.8z\\\"></path><g><line class=\\\"st0\\\" x1=\\\"14.4\\\" y1=\\\"9.6\\\" x2=\\\"29.5\\\" y2=\\\"24.7\\\"></line><line class=\\\"st0\\\" x1=\\\"29.5\\\" y1=\\\"9.6\\\" x2=\\\"14.4\\\" y2=\\\"24.7\\\"></line></g></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"56\\\" height=\\\"62\\\" viewBox=\\\"0 0 56 62\\\"><g id=\\\"clock\\\" transform=\\\"translate(-720 -26)\\\"><path id=\\\"패스_4654\\\" data-name=\\\"패스 4654\\\" d=\\\"M45.771,6.891l2.764,2.167a.75.75,0,0,1,.127,1.053l-.76.97a1.184,1.184,0,0,1-.52.379l-.8.3-2.158,2.752a.885.885,0,0,1-1.242.151l-1.568-1.23a.885.885,0,0,1-.151-1.242l2.158-2.752.1-.851a1.174,1.174,0,0,1,.243-.594l.761-.971a.75.75,0,0,1,1.053-.127\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#f6b90e\\\"></path><path id=\\\"패스_4655\\\" data-name=\\\"패스 4655\\\" d=\\\"M31.917,0h-8.7a1.4,1.4,0,0,0-1.4,1.4v1.69a1.4,1.4,0,0,0,1.4,1.4h1.723V7.64h5.259V4.484h1.723a1.4,1.4,0,0,0,1.4-1.4V1.4a1.4,1.4,0,0,0-1.4-1.4\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#f6b90e\\\"></path><path id=\\\"패스_4656\\\" data-name=\\\"패스 4656\\\" d=\\\"M55.123,33.65A27.55,27.55,0,1,1,27.557,6.085,27.565,27.565,0,0,1,55.123,33.65\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#22bfbf\\\"></path><path id=\\\"패스_4658\\\" data-name=\\\"패스 4658\\\" d=\\\"M51.568,33.66A24.111,24.111,0,0,1,19.845,56.521a24.87,24.87,0,0,1-4.89-2.26,24.435,24.435,0,0,1-2.671-1.9,24.092,24.092,0,0,1,15.19-42.8,24.145,24.145,0,0,1,18.7,8.917,22.253,22.253,0,0,1,1.89,2.671A23.935,23.935,0,0,1,51.568,33.66\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#f1f1f1\\\"></path><path id=\\\"패스_4659\\\" data-name=\\\"패스 4659\\\" d=\\\"M46.171,18.47,12.284,52.357A24.058,24.058,0,0,1,4.6,41.276L35.09,10.8a23.928,23.928,0,0,1,11.081,7.67\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#fff\\\"></path><path id=\\\"패스_4660\\\" data-name=\\\"패스 4660\\\" d=\\\"M50.335,26.031l-30.49,30.49a24.756,24.756,0,0,1-4.89-2.26l33.106-33.12a24.032,24.032,0,0,1,2.274,4.89\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#fff\\\"></path><path id=\\\"패스_4661\\\" data-name=\\\"패스 4661\\\" d=\\\"M27.467,58.439A24.786,24.786,0,1,1,52.253,33.654,24.814,24.814,0,0,1,27.467,58.439m0-48.2A23.416,23.416,0,1,0,50.883,33.654,23.443,23.443,0,0,0,27.467,10.237\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#1a1a1a\\\"></path><path id=\\\"패스_4663\\\" data-name=\\\"패스 4663\\\" d=\\\"M51.546,33.66A24.111,24.111,0,0,1,19.823,56.521a24.87,24.87,0,0,1-4.89-2.26,24.435,24.435,0,0,1-2.671-1.9,24.092,24.092,0,0,1,15.19-42.8,24.141,24.141,0,0,1,18.7,8.917,22.261,22.261,0,0,1,1.891,2.671A23.935,23.935,0,0,1,51.546,33.66\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#f4eee4\\\"></path><path id=\\\"패스_4664\\\" data-name=\\\"패스 4664\\\" d=\\\"M27.445,58.439A24.786,24.786,0,1,1,52.231,33.654,24.814,24.814,0,0,1,27.445,58.439m0-48.2A23.416,23.416,0,1,0,50.861,33.654,23.443,23.443,0,0,0,27.445,10.237\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#424242\\\"></path><path id=\\\"패스_4665\\\" data-name=\\\"패스 4665\\\" d=\\\"M46.171,18.47,12.284,52.357A24.058,24.058,0,0,1,4.6,41.276L35.09,10.8a23.928,23.928,0,0,1,11.081,7.67\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#fff\\\" opacity=\\\"0.3\\\"></path><path id=\\\"패스_4666\\\" data-name=\\\"패스 4666\\\" d=\\\"M50.335,26.031l-30.49,30.49a24.756,24.756,0,0,1-4.89-2.26l33.106-33.12a24.032,24.032,0,0,1,2.274,4.89\\\" transform=\\\"translate(720 26)\\\" fill=\\\"#fff\\\" opacity=\\\"0.3\\\"></path><rect id=\\\"사각형_1228\\\" data-name=\\\"사각형 1228\\\" width=\\\"45.735\\\" height=\\\"45.722\\\" transform=\\\"translate(724.6 36.799)\\\" fill=\\\"none\\\"></rect><rect id=\\\"사각형_1241\\\" data-name=\\\"사각형 1241\\\" width=\\\"56\\\" height=\\\"62\\\" transform=\\\"translate(720 26)\\\" fill=\\\"none\\\"></rect></g></svg>\"","import D1tts from '../assets/images/D1tts.svg';\nimport { tts } from 'sol-common';\n\nexport default function D1directive({ g, text = '', x = 0, y = 0, ttsOffet = { x: 0, y: 0 }, fontSize = 25 }) {\n    const directiveG = g.g();\n    const directText = directiveG.g();\n\n    const directive = directText.text(x, y, text).addClass('ffgt').attr({ fontSize });\n    const bbox = directive.getTBox();\n    const directiveTTS = tts({\n        canvas: directiveG,\n        x: bbox.x - ttsOffet.x - 45,\n        y: bbox.y - ttsOffet.y,\n        blinkOffset: { x: 0, y: 5 },\n        text: text.replace(/\\/n/g, ''),\n\n        img: { src: D1tts, key: 'D1-tts', type: 'svg' }\n    });\n\n    return { directive: directiveG, text: directText, tts: directiveTTS };\n}\n","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"38\\\" height=\\\"30\\\" viewBox=\\\"0 0 38 30\\\"><path id=\\\"volume-up-solid\\\" d=\\\"M17.023,23.88,9.98,30.83H1.9A1.887,1.887,0,0,0,0,32.7v11.25A1.888,1.888,0,0,0,1.9,45.83H9.98l7.043,6.949a1.9,1.9,0,0,0,3.243-1.326V25.206A1.9,1.9,0,0,0,17.023,23.88ZM38,38.33a14.381,14.381,0,0,0-6.79-12.206,1.907,1.907,0,0,0-2.622.583,1.882,1.882,0,0,0,.587,2.606,10.6,10.6,0,0,1,0,18.035,1.882,1.882,0,0,0-.587,2.606,1.91,1.91,0,0,0,2.622.583A14.38,14.38,0,0,0,38,38.33ZM26.777,32.324a1.92,1.92,0,0,0-2.582.738,1.864,1.864,0,0,0,.748,2.548,3.061,3.061,0,0,1,0,5.439A1.864,1.864,0,0,0,24.2,43.6a1.916,1.916,0,0,0,2.582.738,6.788,6.788,0,0,0,0-12.011Z\\\" transform=\\\"translate(0 -23.33)\\\" fill=\\\"#feb831\\\"></path></svg>\""],"sourceRoot":""}