{"version":3,"sources":["webpack:///./src/modules/DM000001.js","webpack:///./src/utils/util.js","webpack:///./src/utils/D1Animate.js","webpack:///./src/assets/images/LI00000013.svg","webpack:///./src/assets/images/LI00000009.svg","webpack:///./src/assets/sounds/LS00000301.mp3","webpack:///./src/assets/sounds/LS00000300.mp3","webpack:///./src/components/D1feedback.js","webpack:///./src/components/D1drag.js","webpack:///./src/assets/images/D1circle.svg","webpack:///./src/assets/images/D1rect.svg","webpack:///./src/assets/images/D1triangle.svg"],"names":["DM000001","canvas","p","g","callback","background","shapes","drag","backgroundG","addClass","shapesG","dragG","hintG","D1Shape","D1DragItems","dropItemBBoxes","userAnswerCount","isHint","handHint","drawBackground","_image","image","x","y","url","imageIndex","scale","img","center","drawShapes","generate","common","items","centerOffest","shapeImageSrc","circle","D1circle","rect","D1rect","triangle","D1triangle","shffleItems","shuffle","slice","shapeNum","point","getPointInMatrixForm","startPoint","rows","columns","length","gap","map","el","i","type","className","offset","itemG","loadShape","loadImage","src","key","rx","ry","getBBox","w","h","shape","use","transform","appendTo","original","select","children","default","push","D1original","D1type","D1class","drawDragItems","shapeList","filter","includes","selectIndexList","selectIndex","findIndex","el2","remainSelectIndexList","remainDragNum","dragNum","remainSelectIndex","getRandomArrayElement","totalSelectIndex","shuffleTotalSelectIndex","target","dragItemContainer","dragItemG","draggingItemG","D1drag","dragItem","draggingItem","startCallback","dragStartCallback","moveCallback","dragMoveCallback","endCallback","dragEndCallback","self","append","parent","remove","setShapeFillColor","dropIndex","getUserDropElementIndex","attr","pointerEvents","answer","done","D1feedback","bool","answerHandler","resetDragItem","setHintState","rearrangeDragItems","animates","reduce","a","b","cx","cy","forEach","el3","moveAnimate","bind","Promise","all","wait","shakeDragItem","spectrum","spectrumEffect","interval","duration","reset","index","D1Animate","shake","rotate","element","reverse","Boolean","animate1","animate2","dragItemBBox","targetIndex","undefined","hintIndex","realDropBBoxes","adjustBBox","x2","y2","width","height","some","Snap","path","isBBoxIntersect","classes","choice","removeClass","Number","targetDragItem","targetDropElement","find","dragX","dragY","dropX","dropY","hint","XY","moveTo","pathStr","start","getUniquArray","arr","indexOf","get2dimArray","n","newArray","q","Math","floor","r","getTransposeArray","tempArr","j","getPointInScatterForm","area","pointNum","neighborhood","points","isPointInsideBBox","bbox","abs","repeat","getRandomNumber","boundingBox","bbox2","bbox1","console","error","delay","resolve","setTimeout","min","max","random","getRandomNumberArray","isUnique","randArr","uniqueArr","getSimultaneousEquationConstant","x1","y1","convertToPathStr","line","polygon","_rest","rest","Array","isArray","array","copyArray","k","isSameArray","calculateAnswer","num","sign","ans","drawPath","totalLength","getTotalLength","animate","val","subPath","getSubpath","d","dx","dy","onPath","local","easing","startPt","getPointAtLength","blink","opacity","flip","front","matrix","sliding","hiddenTime","rolling","directionAngle","multiple","revolutions","window","mina","linear","dxy","radius","radian","PI","cos","sin","diretion","translate","fadeIn","from","to","opacityNum","zoom","begin","end","module","exports","SOL","SVG","rotation","retouchTime","preventTouchRect","icon","feedbackWrong","feedbackRight","iconNode","loadFragment","node","getTBox","iconSize","getAttribute","trans","localSound","LS00000301","LS00000300","sound","loadLocalSound","controller","addUserAction","retouchTimeout","play","once","clearTimeout","originPoint","dragStart","data","dragMove","elemenet","origin","snapInvMatrix","diffMatrix","invert","dragEnd","setDragState","_randomDuration","randomDuration","_interval","setInterval","clone","after","clearInterval","moveAnimateWithScale","move","_scale","hidden"],"mappings":"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","file":"static/js/2.0e0e2d78.chunk.js","sourcesContent":["import { hint, image, loadImage } from 'sol-common';\nimport Snap from 'sol-common/snap';\nimport D1circle from '../assets/images/D1circle.svg';\nimport D1rect from '../assets/images/D1rect.svg';\nimport D1triangle from '../assets/images/D1triangle.svg';\nimport D1drag from '../components/D1drag';\nimport D1feedback from '../components/D1feedback';\nimport D1Animate from '../utils/D1Animate';\nimport { getPointInMatrixForm, getRandomArrayElement, shuffle, wait } from '../utils/util';\n\nexport default function DM000001({ canvas, ...p }) {\n    const g = canvas;\n    const callback = p.callback;\n\n    const background = p.background;\n    const shapes = p.shapes;\n    const drag = p.drag;\n\n    const backgroundG = g.g().addClass('D1-background');\n    const shapesG = g.g().addClass('D1-shapes');\n    const dragG = g.g().addClass('D1-drag');\n    const hintG = g.g().addClass('D1-hint');\n\n    let D1Shape = [];\n    let D1DragItems = [];\n    let dropItemBBoxes = [];\n\n    let userAnswerCount = 0;\n    let hintCount = 1;\n    let isHint = true;\n    let handHint = null;\n\n    const drawBackground = () => {\n        const { image: _image } = background;\n        const { x, y, imageIndex: url, scale } = _image;\n        image({ canvas: backgroundG, x, y, img: { url, scale }, center: true });\n    };\n\n    const drawShapes = () => {\n        const { generate, common, items } = shapes;\n        const { centerOffest = { x: 0, y: 0 } } = common;\n        const shapeImageSrc = { circle: D1circle, rect: D1rect, triangle: D1triangle };\n        const shffleItems = shuffle(items).slice(0, generate.shapeNum);\n\n        const point = getPointInMatrixForm({\n            startPoint: { x: 400 + centerOffest.x, y: 200 + centerOffest.y },\n            rows: 1,\n            columns: shffleItems.length,\n            gap: { x: common.gap, y: 0 },\n            center: true\n        });\n\n        D1Shape = shffleItems.map((el, i) => {\n            const { type, scale = common.scale, className = common.className, offset = common.offset || { x: 0, y: 0 } } = el;\n            const itemG = shapesG.g().addClass('D1-shapes-item');\n            const loadShape = loadImage({ src: shapeImageSrc[type], key: `D1shape-${type}`, type: 'svg', rx: 0, ry: 0 });\n            const { w, h } = loadShape.getBBox();\n            const { x, y } = point[i];\n\n            const shape = loadShape\n                .use()\n                .transform('t' + [x + offset.x - w / 2, y + offset.y - h / 2] + 's' + scale)\n                .appendTo(itemG);\n\n            const original = shape.original.select('g').children()[1];\n            original.addClass(className.default);\n            dropItemBBoxes.push(shape.getBBox());\n\n            shape.D1original = original;\n            shape.D1type = type;\n            shape.D1class = className;\n\n            return shape;\n        });\n    };\n\n    const drawDragItems = () => {\n        const { generate, common, items } = drag;\n        const { centerOffest = { x: 0, y: 0 } } = common;\n        const shapeList = D1Shape.map(el => el.D1type);\n        const shffleItems = shuffle(items.filter(el => shapeList.includes(el.type)));\n\n        //그릴 이미지 선정\n        const selectIndexList = shffleItems.map((el, i) => i);\n        const selectIndex = shapeList.map(el => shffleItems.findIndex(el2 => el === el2.type)); // 초기 1개값 넣어주기\n        const remainSelectIndexList = selectIndexList.filter(el => !selectIndex.includes(el));\n        const remainDragNum = generate.dragNum - selectIndex.length;\n        const remainSelectIndex = getRandomArrayElement(remainSelectIndexList, remainDragNum);\n        const totalSelectIndex = [...selectIndex, ...remainSelectIndex];\n        const shuffleTotalSelectIndex = shuffle(totalSelectIndex);\n\n        const point = getPointInMatrixForm({\n            startPoint: { x: 400 + centerOffest.x, y: 420 + centerOffest.y },\n            rows: 1,\n            columns: generate.dragNum,\n            gap: { x: common.gap, y: 0 },\n            center: true\n        });\n\n        D1DragItems = shuffleTotalSelectIndex.map((el, i) => {\n            const target = shffleItems[el];\n            const { type, imageIndex: url, scale = common.scale, offset = common.offset || { x: 0, y: 0 } } = target;\n            const dragItemContainer = dragG.g().addClass('D1-drag-items');\n            const dragItemG = dragItemContainer.g().addClass('D1-drag-item');\n            const draggingItemG = dragItemContainer.g().addClass('D1-dragging-item');\n            const { x, y } = point[i];\n\n            image({ canvas: dragItemG, x: x + offset.x, y: y + offset.y, img: { url, scale }, center: true });\n            image({ canvas: draggingItemG, x: x + offset.x, y: y + offset.y, img: { url, scale: scale * 1.3 }, center: true });\n\n            dragItemG.D1type = type;\n\n            return D1drag({\n                dragItem: dragItemG,\n                draggingItem: draggingItemG,\n                startCallback: () => dragStartCallback(dragItemG),\n                moveCallback: () => dragMoveCallback(dragItemG),\n                endCallback: () => dragEndCallback(dragItemG)\n            });\n        });\n    };\n\n    const dragStartCallback = self => {\n        dragG.append(self.parent());\n        if (handHint) handHint.remove();\n    };\n\n    const dragMoveCallback = self => setShapeFillColor(self);\n\n    const dragEndCallback = async self => {\n        const dropIndex = getUserDropElementIndex(self);\n        self.attr({ pointerEvents: 'none' });\n        setShapeFillColor();\n        if (typeof dropIndex === 'number') {\n            const answer = self.D1type === D1Shape[dropIndex].D1type;\n            if (answer) {\n                self.done = true;\n                self.dropIndex = dropIndex;\n                await D1feedback({ el: self, bool: answer, scale: 0.8 });\n                answerHandler();\n            } else {\n                await resetDragItem(self);\n                self.attr({ pointerEvents: 'auto' });\n            }\n        } else {\n            await resetDragItem(self);\n            self.attr({ pointerEvents: 'auto' });\n        }\n        isHint && setHintState();\n    };\n\n    const answerHandler = async () => {\n        userAnswerCount += 1;\n\n        if (userAnswerCount === D1DragItems.length) {\n            await rearrangeDragItems();\n            await wait(100);\n            D1Shape.forEach(el => el.remove());\n            await wait(100);\n            await shakeDragItem();\n            await wait(100);\n            callback();\n        }\n\n        async function rearrangeDragItems() {\n            const animates = [];\n            const shapeList = D1Shape.map(el => el.D1type);\n            const shapeNum = D1DragItems.reduce((a, b) => {\n                if (b.D1type) {\n                    if (a[b.D1type]) a[b.D1type] += 1;\n                    else a[b.D1type] = 1;\n                }\n                return a;\n            }, {});\n            const point = shapeList.map((el, i) => {\n                const { cx, cy } = D1Shape[i].getBBox();\n                const point = getPointInMatrixForm({\n                    startPoint: { x: cx, y: cy },\n                    rows: 1,\n                    columns: shapeNum[el],\n                    gap: { x: 90, y: 0 },\n                    center: true\n                });\n                return { type: el, center: { cx, cy }, ...point };\n            });\n\n            point.forEach(el => {\n                const targetList = D1DragItems.filter(el2 => el2.D1type === el.type);\n                targetList.forEach((el3, i) => {\n                    const { w, h } = el3.getBBox();\n                    el3.moveAnimate && animates.push(el3.moveAnimate.bind(null, { x: el[i].x - w / 2, y: el[i].y - h / 2 }));\n                });\n            });\n\n            await Promise.all(animates.map(el => el()));\n        }\n    };\n\n    const resetDragItem = async dragItem => {\n        const spectrum = dragItem.spectrumEffect({ interval: 120, duration: 750 });\n        await dragItem.reset();\n        spectrum.remove();\n    };\n\n    const shakeDragItem = async index => {\n        if (typeof index === 'number') {\n            const target = D1DragItems[index];\n            target.attr({ pointerEvents: 'none' });\n            await D1Animate.shake({ duration: 1000, rotate: 8, element: D1DragItems[index], reverse: Boolean(index % 2) });\n            await D1Animate.shake({ duration: 1000, rotate: 10, element: D1DragItems[index], reverse: Boolean(index % 2) });\n            target.attr({ pointerEvents: 'auto' });\n        } else {\n            const animate1 = [];\n            const animate2 = [];\n            D1DragItems.forEach((el, i) => {\n                el.attr({ pointerEvents: 'none' });\n                animate1.push(D1Animate.shake.bind(null, { duration: 1000, rotate: 8, element: el, reverse: Boolean(i % 2) }));\n                animate2.push(D1Animate.shake.bind(null, { duration: 1000, rotate: 10, element: el, reverse: Boolean(i % 2) }));\n            });\n\n            await Promise.all(animate1.map(el => el()));\n            await Promise.all(animate2.map(el => el()));\n\n            D1DragItems.forEach(el => el.attr({ pointerEvents: 'auto' }));\n        }\n    };\n\n    const getUserDropElementIndex = dragG => {\n        const dragItemBBox = dragG.parent().getBBox();\n        let targetIndex = undefined;\n        const hintIndex = D1Shape.findIndex(el => el.D1type === dragG.D1type);\n        const realDropBBoxes = isHint ? dropItemBBoxes.filter((el, i) => i === hintIndex) : dropItemBBoxes;\n\n        const size = 20;\n        const { x, x2, y, y2, width, height } = dragItemBBox;\n        const adjustBBox = { x: x + size, x2: x2 - size, y: y + size, y2: y2 - size, width: width - 2 * size, height: height - 2 * size };\n\n        realDropBBoxes.some((el, i) => {\n            if (Snap.path.isBBoxIntersect(adjustBBox, el)) {\n                targetIndex = isHint ? hintIndex : i;\n                return true;\n            } else {\n                targetIndex = undefined;\n                return false;\n            }\n        });\n        return targetIndex;\n    };\n\n    const setShapeFillColor = dragG => {\n        const dropIndex = dragG && getUserDropElementIndex(dragG);\n        if (typeof dropIndex === 'number') {\n            D1Shape.forEach((el, i) => {\n                const { D1class, D1original } = el;\n                const target = dropIndex === i;\n                const classes = [D1class.default, D1class.choice];\n                D1original.removeClass(classes[Number(!target)]).addClass(classes[Number(target)]);\n            });\n        } else {\n            D1Shape.forEach(el => {\n                const { D1class, D1original } = el;\n                D1original.removeClass(D1class.choice).addClass(D1class.default);\n            });\n        }\n    };\n\n    const setHintState = () => {\n        D1DragItems.forEach(el => el.attr({ pointerEvents: 'none' }));\n        if (userAnswerCount < hintCount) {\n            const targetDragItem = D1DragItems[userAnswerCount].attr({ pointerEvents: 'auto' });\n            const targetDropElement = D1Shape.find(el => el.D1type === targetDragItem.D1type);\n            const { cx: dragX, cy: dragY } = targetDragItem.getBBox();\n            const { cx: dropX, cy: dropY } = targetDropElement?.getBBox() || {};\n            handHint = hint({ canvas: hintG, scale: 0.8, type: 1, XY: [dragX, dragY], moveTo: [dropX, dropY], pathStr: undefined });\n        } else {\n            D1DragItems.forEach(el => !el.done && el.attr({ pointerEvents: 'auto' }));\n            isHint = false;\n        }\n    };\n\n    const start = async () => {\n        drawBackground();\n        drawShapes();\n        drawDragItems();\n        await shakeDragItem();\n        isHint && setHintState();\n    };\n\n    start();\n}\n","import Snap from 'sol-common/snap';\n\nexport const getSVGPoint = event => {\n    const svg = document.querySelector('#frame2d');\n    const pt = svg.createSVGPoint();\n    pt.x = event.clientX;\n    pt.y = event.clientY;\n    return pt.matrixTransform(svg.getScreenCTM().inverse());\n};\nexport const getUniquArray = arr => arr.filter((el, i) => arr.indexOf(el) === i);\nexport const get2dimArray = (arr, n) => {\n    const newArray = [];\n    arr.forEach((el, i) => {\n        const q = Math.floor(i / n);\n        const r = i % n;\n        if (r === 0) newArray[q] = [];\n        newArray[q][r] = el;\n    });\n    return newArray;\n};\nexport const getTransposeArray = arr => {\n    const newArray = [];\n    for (let i = 0; i < arr[0].length; i++) {\n        const tempArr = arr.map(el => el[i]);\n        newArray.push(tempArr);\n    }\n    return newArray;\n};\n\nexport const getClassNames = element => element.node.className.baseVal;\n\nexport const getPointInMatrixForm = ({ startPoint = { x: 0, y: 0 }, rows, columns, gap = { x: 0, y: 0 }, reverse = false, center = true }) => {\n    const point = [];\n    const offset = { x: center ? -gap.x * 0.5 * (columns - 1) : 0, y: center ? -gap.y * 0.5 * (rows - 1) : 0 };\n\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < columns; j++) {\n            const index = i * columns + j;\n            const [x, y] = [startPoint.x + gap.x * j + offset.x, startPoint.y + offset.y + (reverse ? -gap.y * i : gap.y * i)];\n            point[index] = { x, y };\n        }\n    }\n    return point;\n};\nexport const getPointInScatterForm = ({ area, pointNum, neighborhood }) => {\n    const points = [];\n    const isPointInsideBBox = (bbox, x, y) => Math.abs(bbox.cx - x) <= bbox.width / 2 && Math.abs(bbox.cy - y) <= bbox.height / 2;\n    const isBBoxIntersect = (bbox1, bbox2) =>\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2);\n\n    const limit = 1000;\n    let n = 0;\n\n    for (let index = 0; index < pointNum; index++) {\n        let repeat = true;\n        while (repeat && n < limit) {\n            const cx = getRandomNumber(area.x + neighborhood.width / 2, area.x + area.width - neighborhood.width / 2);\n            const cy = getRandomNumber(area.y + neighborhood.height / 2, area.y + area.height - neighborhood.height / 2);\n            const boundingBox = {\n                x: cx - neighborhood.width / 2,\n                x2: cx + neighborhood.width / 2,\n                cx,\n                y: cy - neighborhood.height / 2,\n                y2: cy + neighborhood.height / 2,\n                cy,\n                width: neighborhood.width,\n                height: neighborhood.height\n            };\n            const isOverlap = points.some(el => isBBoxIntersect(el, boundingBox));\n            if (!isOverlap) {\n                points.push(boundingBox);\n                repeat = false;\n            }\n            n += 1;\n        }\n    }\n\n    if (n === limit) console.error('CAN NOT GENERATE!!!');\n    return points;\n};\n\nexport const getCloseElement = (targetElement, elements) =>\n    elements.reduce((a, b) => {\n        const currentPoint = targetElement.getBBox().cx;\n        const beforeDx = Math.abs(a.getBBox().cx - currentPoint);\n        const currentDx = Math.abs(b.getBBox().cx - currentPoint);\n        return beforeDx > currentDx ? b : a;\n    }, elements[0]);\n\nexport const wait = (delay = 300) => new Promise(resolve => setTimeout(resolve, delay));\n\nexport const removeArrayElement = (arr, element) => arr.filter(el => el !== element);\nexport const getRandomArrayElement = (arr, n) => {\n    const newArray = shuffle(arr).slice(0, n);\n    while (newArray.length < n) {\n        newArray.push(shuffle(arr)[0]);\n    }\n    return newArray;\n};\nexport const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const getRandomNumberArray = (min, max, n, isUnique = true) => {\n    let randArr = [];\n    let uniqueArr = [];\n    if (isUnique) {\n        while (uniqueArr.length !== n) {\n            for (let index = 0; index < n; index++) {\n                randArr[index] = getRandomNumber(min, max);\n            }\n            uniqueArr = getUniquArray(randArr);\n        }\n    } else {\n        for (let index = 0; index < n; index++) {\n            randArr[index] = getRandomNumber(min, max);\n        }\n    }\n\n    return randArr;\n};\nexport const getSumArray = (arr) => arr.reduce((acc, num) => acc + num);\n\nexport const getSimultaneousEquationConstant = ([x1, y1], [x2, y2]) => {\n    const a = (y2 - y1) / (x2 - x1);\n    const b = y2 - a * x2;\n    return { a, b };\n};\n\nexport const convertToPathStr = {\n    line: ({ x1 = 0, y1 = 0, x2 = 0, y2 = 0 }) => 'M' + [x1, y1] + ' L' + [x2, y2],\n    rect: ({ x = 0, y = 0, width = 0, height = 0 }) => 'M' + [x, y] + ' l' + [0, height] + ' l' + [width, 0] + ' l' + [0, -height] + ' l' + [-width, 0],\n    circle: ({ cx = 0, cy = 0, r = 0 }) => 'M' + [cx + r, cy - r] + 'm' + [-r, 0] + 'a' + [r, r, 0, 1, 1, 0, r * 2] + 'a' + [r, r, 0, 1, 1, 0, -(r * 2)],\n    polygon: (..._rest) => {\n        const rest = Array.isArray(_rest[0]) ? _rest[0] : _rest;\n        return rest.reduce((a, b, i) => {\n            if (i === 0) return (a += b + ',');\n            else if (i === 1) return (a += b + ' ');\n            else if (i % 2 === 0) return (a += 'L' + b + ',');\n            else return (a += b + ' ');\n        }, 'M');\n    }\n};\n\nexport const shuffle = array => {\n    const copyArray = array.map(el => el);\n    for (let i = copyArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const k = copyArray[i];\n        copyArray[i] = copyArray[j];\n        copyArray[j] = k;\n    }\n    return copyArray;\n};\n\nexport const makeArrayNumber = ({ startNum = 1, endNum }) => {\n    const rangeNum = [];\n    for (let i = startNum; i < endNum + 1; i++) {\n        rangeNum.push(i);\n    }\n    return rangeNum;\n};\n\nexport const isSameArray = (a, b) => {\n    let n;\n    if (a.length === b.length) {\n        n = 0;\n        a.forEach((el, i) => {\n            if (el === b[i]) n += 1;\n        });\n    }\n    return n === a.length;\n};\n\nexport const saveImage = svg => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 800;\n    canvas.height = 800;\n    const data = new XMLSerializer().serializeToString(svg);\n    const blob = new Blob([data], { type: 'image/svg+xml' });\n    const img = new Image();\n    const url = URL.createObjectURL(blob);\n    img.src = url;\n\n    img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        canvas.getContext('2d')?.drawImage(img, 0, 0);\n        URL.revokeObjectURL(url);\n        const uri = canvas.toDataURL('image/png').replace('image/png', 'octet/stream');\n        console.log(uri);\n        const a = document.createElement('a');\n        a.href = uri;\n        a.download = 'myPhoto.png';\n        a.click();\n        URL.revokeObjectURL(uri);\n    };\n};\n\nexport const calculateAnswer = (num, sign) => {\n    let ans;\n    switch (sign) {\n        case '+':\n            ans = 0;\n            num.forEach(el => {\n                ans = ans + el;\n            });\n            break;\n        case '-':\n            num.forEach((el, i) => {\n                ans = i === 0 ? el : ans + el;\n            });\n            break;\n        case '*':\n            ans = 1;\n            num.forEach(el => {\n                ans = ans * el;\n            });\n            break;\n        case '/':\n            ans = {};\n            ans.q = Math.floor(num[0] / num[1]);\n            ans.r = num[0] % num[1];\n            break;\n    }\n    return ans;\n};\n","import Snap from 'sol-common/snap';\n\nconst D1Animate = {\n    drawPath: ({ path, duration }) => {\n        const totalLength = path.getTotalLength();\n        const pathStr = path.attr('d');\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const subPath = Snap.path.getSubpath(pathStr, 0, val * totalLength);\n                    path.attr({ d: subPath });\n                },\n                duration,\n                undefined,\n                resolve\n            );\n        });\n    },\n    moveTo: ({ dx, dy, duration, element, r = '' }) => {\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    element.transform(`t ${dx * val} ${dy * val} ${r && 'r ' + r}`);\n                },\n                duration,\n                undefined,\n                resolve\n            );\n        });\n    },\n\n    onPath: ({ path, duration = 3000, element, local = '', easing }) => {\n        const startPt = Snap.path.getPointAtLength(path, 0);\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const { x, y } = Snap.path.getPointAtLength(path, val * Snap.path.getTotalLength(path));\n                    const transform = local + 't' + [x - startPt.x, y - startPt.y];\n                    element.transform(transform);\n                },\n                duration,\n                easing,\n                resolve\n            );\n        });\n    },\n    blink: ({ interval = 0.5, duration = 500, element, opacity = 1 }) => {\n        element.attr({ pointerEvents: 'none' });\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    element.attr({ opacity: val });\n                },\n                duration,\n                val => {\n                    if (val < interval) return (-(1 / interval) * val + 1) * opacity;\n                    else return (1 / (1 - interval)) * (val - interval) * opacity;\n                },\n                resolve\n            );\n        });\n    },\n    flip: ({ front, duration }) => {\n        const { cx } = front.getBBox();\n        return new Promise(resolve => {\n            Snap.animate(0, 1, val => front.transform(Snap.matrix(1 - val, 0, 0, 1, val * cx, 0)), duration, undefined, resolve);\n        });\n    },\n    sliding: ({ element, dx, dy, hiddenTime, duration }) => {\n        const { local } = element.transform();\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const opacity = val < hiddenTime ? 1 : -(1 / (1 - hiddenTime)) * val + 1 / (1 - hiddenTime);\n                    element.attr({ opacity }).transform(local + 't' + [dx * val * val, dy * val * val]);\n                },\n                duration,\n                undefined,\n                () => {\n                    element.remove();\n                    resolve();\n                }\n            );\n        });\n    },\n    rolling: ({ element, directionAngle, duration, multiple, revolutions, easing = window.mina.linear, dxy }) => {\n        const { local } = element.transform();\n        const radius = element.getBBox().w / 2;\n        const radian = directionAngle * (Math.PI / 180);\n        const [x, y] = dxy\n            ? [dxy.x / revolutions / multiple, dxy.y / revolutions / multiple]\n            : [radius * Math.cos(radian) * Math.PI, -radius * Math.sin(radian) * Math.PI];\n        const sign = Math.cos(radian) < 0 ? -1 : 1;\n        const diretion = Math.abs(Math.sin(radian)) === 1 ? -Math.sin(radian) : sign;\n\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const translate = local + 't' + [revolutions * x * multiple * val, revolutions * y * multiple * val];\n                    const rotate = 'r' + diretion * val * (revolutions * 360);\n                    const scale = 's' + (1 + (multiple - 1) * val);\n                    element.transform(translate + rotate + scale);\n                },\n                duration,\n                easing,\n                resolve\n            );\n        });\n    },\n    shake: ({ duration, rotate, element, reverse = true }) => {\n        const sign = reverse ? 1 : -1;\n        const { local } = element.transform();\n        return new Promise(resolve =>\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    if (val < 0.25) val = 4 * val;\n                    else if (val < 0.75) val = -4 * val + 2;\n                    else val = 4 * val - 4;\n                    element.transform(local + 'r' + sign * rotate * val);\n                },\n                duration,\n                undefined,\n                resolve\n            )\n        );\n    },\n    fadeIn: ({ element, duration, from = 0, to = 1 }) => {\n        return new Promise(resolve => {\n            const opacityNum = Number(element.attr('opacity'));\n            Snap.animate(\n                from,\n                to,\n                val => {\n                    element.attr('opacity', opacityNum + (1 - opacityNum) * val);\n                },\n                duration,\n                null,\n                resolve\n            );\n        });\n    },\n    zoom: ({ type, element, duration, begin, end, local = '', from = 0, to = 1 }) => {\n        return new Promise(resolve => {\n            let scale = 0;\n            !begin && (begin = type === 'in' ? 0 : 1);\n            !end && (end = type === 'in' ? 1 : 0);\n\n            Snap.animate(\n                from,\n                to,\n                val => {\n                    scale = type === 'in' ? begin + (1 - begin) * val + (end - 1) : 1 - val + (begin - 1) * (1 - val) + end * val;\n                    element.transform(`${local}s ${scale}`);\n                },\n                duration,\n                null,\n                resolve\n            );\n        });\n    }\n};\n\nexport default D1Animate;\n","module.exports = \"<svg version=\\\"1.1\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"43\\\" height=\\\"43\\\" viewBox=\\\"0 0 43 43\\\" style=\\\"enable-background:new 0 0 43 43;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#23C274;} .st1{fill:none;stroke:#FFFFFF;stroke-width:5;stroke-linecap:round;stroke-miterlimit:10;} </style><g><path class=\\\"st0\\\" d=\\\"M0.5,8.8v16.8c0,3.8,2.8,7,6.4,7.4v7.3c0,0.6,0.4,1.1,1,1.3c0,0.1,0.3,0.1,0.4,0.1c0.4,0,0.7-0.1,1-0.4 l8.3-8.3h17.3c4,0,7.4-3.3,7.4-7.4V8.7c0-4-3.3-7.4-7.4-7.4H7.8C3.8,1.4,0.5,4.7,0.5,8.8z\\\"></path><circle class=\\\"st1\\\" cx=\\\"21.5\\\" cy=\\\"17.1\\\" r=\\\"9.3\\\"></circle></g></svg>\"","module.exports = \"<svg version=\\\"1.1\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"43\\\" height=\\\"43\\\" viewBox=\\\"0 0 43 43\\\" style=\\\"enable-background:new 0 0 43 43;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:none;stroke:#FFFFFF;stroke-width:5;stroke-linecap:round;stroke-miterlimit:10;} .st1{fill:#F74E6D;} </style><path class=\\\"st1\\\" d=\\\"M0.6,8.8v16.7c0,3.7,2.8,6.8,6.4,7.3v7.3c0,0.6,0.3,1.1,0.9,1.3c0.2,0,0.4,0.1,0.6,0.1c0.4,0,0.7-0.1,1-0.4 l8.2-8.2H35c4,0,7.3-3.3,7.3-7.3V8.8c0-4-3.3-7.3-7.3-7.3H7.9C3.9,1.4,0.6,4.7,0.6,8.8z\\\"></path><g><line class=\\\"st0\\\" x1=\\\"14.4\\\" y1=\\\"9.6\\\" x2=\\\"29.5\\\" y2=\\\"24.7\\\"></line><line class=\\\"st0\\\" x1=\\\"29.5\\\" y1=\\\"9.6\\\" x2=\\\"14.4\\\" y2=\\\"24.7\\\"></line></g></svg>\"","export default __webpack_public_path__ + \"static/media/LS00000301.mp3?d696a4b2\";","export default __webpack_public_path__ + \"static/media/LS00000300.mp3?688e36a7\";","import { loadLocalSound, loadFragment } from 'sol-common';\nimport Snap from 'sol-common/snap';\nimport { SOL } from 'sol-common/util';\nimport feedbackRight from '../assets/images/LI00000013.svg';\nimport feedbackWrong from '../assets/images/LI00000009.svg';\nimport LS00000301 from '../assets/sounds/LS00000301.mp3';\nimport LS00000300 from '../assets/sounds/LS00000300.mp3';\n\nexport default function D1feedback({ canvas = SOL.SVG.g(), el, bool, scale = 1, gap = [0, 0], rotation = 0, retouchTime = 300 }) {\n    return new Promise(resolve => {\n        const preventTouchRect = SOL.SVG.rect(0, 0, 800, 500).attr({ opacity: '0' }); // 추가 터치 방지\n        const index = Number(bool);\n        // 아이콘        \n        const icon = [feedbackWrong, feedbackRight][index];\n        const { node: iconNode } = loadFragment({ src: icon, key: 'feedback' + (index + 1), type: 'svg' });        \n        const { x2, y } = el.getTBox();\n        const iconSize = [iconNode.getAttribute('width'), iconNode.getAttribute('height')].map(el => el * scale);\n        const trans = [x2 - iconSize[0] / 2 + gap[0], y - iconSize[1] + gap[1]];\n        \n        // 사운드\n        const localSound = [LS00000301, LS00000300][index];\n        const sound = loadLocalSound(localSound);\n\n        // 아이콘 그리기\n        canvas.transform('t' + trans + 'r' + rotation + 's' + scale);\n        Snap(iconNode).appendTo(canvas);\n\n        // setUserAction\n        SOL.controller.addUserAction(index);\n\n        const retouchTimeout = setTimeout(() => preventTouchRect.remove(), retouchTime);\n        // 사운드 재생\n        sound.play();\n        sound.once('end', () => {\n            preventTouchRect && preventTouchRect.remove();\n            retouchTimeout && clearTimeout(retouchTimeout);\n            canvas.remove();\n            resolve();\n        });\n    });\n}\n","import Snap from 'sol-common/snap';\nimport D1Animate from '../utils/D1Animate';\nimport { getRandomNumber } from '../utils/util';\n\nexport default function D1drag({ dragItem, draggingItem, startCallback, moveCallback, endCallback }) {\n    dragItem = dragItem.addClass('cp');\n    draggingItem && draggingItem.attr({ opacity: '0', pointerEvents: 'none' });\n\n    const originPoint = dragItem.getBBox();\n    const dragStart = element => element.data('originTransform', element.transform().local);\n    const dragMove = (elemenet, dx, dy) => {\n        const origin = elemenet.data('originTransform') || '';\n        const snapInvMatrix = elemenet.transform().diffMatrix.invert();\n        dx = snapInvMatrix.x(dx, dy);\n        dy = snapInvMatrix.y(dx, dy);\n        elemenet.transform(origin + 't' + [dx, dy]);\n    };\n    const dragEnd = element => element.data('originTransform', element.transform().local);\n\n    const start = () => {\n        dragStart(dragItem);\n        if (draggingItem) {\n            setDragState(false);\n            dragStart(draggingItem);\n        }\n        if (startCallback) startCallback();\n    };\n    const move = (dx, dy) => {\n        dragMove(dragItem, dx, dy);\n        if (draggingItem) {\n            setDragState(false);\n            dragMove(draggingItem, dx, dy);\n        }\n        if (moveCallback) moveCallback();\n    };\n    const end = () => {\n        dragEnd(dragItem);\n        if (draggingItem) {\n            setDragState(true);\n            dragEnd(draggingItem);\n        }\n        if (endCallback) endCallback();\n    };\n\n    const setDragState = bool => {\n        dragItem.attr({ opacity: Number(bool) });\n        draggingItem.attr({ opacity: Number(!bool) });\n    };\n\n    const animate = async ({ pathStr, easing, randomDuration: _randomDuration }) => {\n        const { local } = dragItem.transform();\n        dragItem.attr({ pointerEvents: 'none' });\n        const randomDuration = _randomDuration ? getRandomNumber(800, 1100) : 500;\n        if (draggingItem) {\n            D1Animate.onPath({ path: pathStr, duration: randomDuration, element: dragItem, local, easing });\n            await D1Animate.onPath({ path: pathStr, duration: randomDuration, element: draggingItem, local, easing });\n        } else {\n            await D1Animate.onPath({ path: pathStr, duration: randomDuration, element: dragItem, local, easing });\n        }\n        dragItem.attr({ pointerEvents: 'auto' });\n    };\n\n    dragItem.spectrumEffect = ({ interval: _interval = 100, duration = 750 }) => {\n        const interval = setInterval(() => {\n            const clone = dragItem.clone();\n            clone.after(dragItem);\n            Snap.animate(\n                1,\n                0,\n                val => clone.attr({ opacity: val }),\n                duration,\n                undefined,\n                () => clone.remove()\n            );\n        }, _interval);\n\n        const remove = () => clearInterval(interval);\n\n        return { remove };\n    };\n\n    dragItem.moveAnimate = async (point, easing, randomDuration) => {\n        const { x, y } = dragItem.getBBox();\n        const pathStr = 'M' + [x, y] + 'L' + [point.x, point.y];\n        await animate({ pathStr, easing, randomDuration });\n    };\n    dragItem.reset = async (dx = 0, dy = 0) => {\n        const { x, y } = dragItem.getBBox();\n        const pathStr = 'M' + [x, y] + 'L' + [originPoint.x + dx, originPoint.y + dy];\n        await animate({ pathStr });\n    };\n    dragItem.moveAnimateWithScale = ({ dx, dy, scale }) => {\n        const { local } = dragItem.transform();\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const move = 't' + [val * dx, val * dy];\n                    const _scale = 's' + (1 - ((scale.from - scale.to) / scale.from) * val);\n                    dragItem.transform(local + move + _scale);\n                },\n                750,\n                undefined,\n                resolve\n            );\n        });\n    };\n    dragItem.hidden = () => dragItem.attr({ opacity: '0', pointerEvents: 'none' });\n    dragItem.drag(move, start, end);\n\n    return dragItem;\n}\n","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"221px\\\" height=\\\"221px\\\" viewBox=\\\"0 0 221 221\\\" style=\\\"enable-background:new 0 0 221 221;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#FFFFFF;} .st1{stroke:#999999;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:10.1323,15.1985;} </style><g><circle class=\\\"st0\\\" cx=\\\"110.5\\\" cy=\\\"110.5\\\" r=\\\"108.8\\\"></circle><circle class=\\\"st1\\\" cx=\\\"110.5\\\" cy=\\\"110.5\\\" r=\\\"108.8\\\"></circle></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"203px\\\" height=\\\"203px\\\" viewBox=\\\"0 0 203 203\\\" style=\\\"enable-background:new 0 0 203 203;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#FFFFFF;} .st1{stroke:#999999;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:10.1097,15.1645;} </style><g><path class=\\\"st0\\\" d=\\\"M192.6,201.3H10.4c-4.8,0-8.7-3.9-8.7-8.7V10.4c0-4.8,3.9-8.7,8.7-8.7h182.2c4.8,0,8.7,3.9,8.7,8.7v182.2 C201.3,197.4,197.4,201.3,192.6,201.3z\\\"></path><path class=\\\"st1\\\" d=\\\"M192.6,201.3H10.4c-4.8,0-8.7-3.9-8.7-8.7V10.4c0-4.8,3.9-8.7,8.7-8.7h182.2c4.8,0,8.7,3.9,8.7,8.7v182.2 C201.3,197.4,197.4,201.3,192.6,201.3z\\\"></path></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"234px\\\" height=\\\"205px\\\" viewBox=\\\"0 0 234 205\\\" style=\\\"enable-background:new 0 0 234 205;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#FFFFFF;} .st1{stroke:#999999;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:9.9134,14.8701;} </style><g><path class=\\\"st0\\\" d=\\\"M109.5,5.9L2.9,190.4c-3.4,5.8,0.8,13.1,7.5,13.1h213.2c6.7,0,10.9-7.3,7.5-13.1L124.5,5.9 C121.2,0.1,112.8,0.1,109.5,5.9z\\\"></path><path class=\\\"st1\\\" d=\\\"M109.5,5.9L2.9,190.4c-3.4,5.8,0.8,13.1,7.5,13.1h213.2c6.7,0,10.9-7.3,7.5-13.1L124.5,5.9 C121.2,0.1,112.8,0.1,109.5,5.9z\\\"></path></g></svg>\""],"sourceRoot":""}