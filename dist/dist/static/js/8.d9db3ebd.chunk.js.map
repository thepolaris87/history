{"version":3,"sources":["webpack:///./src/modules/DM000008.js","webpack:///./src/utils/util.js","webpack:///./src/utils/D1GetString.js","webpack:///./src/assets/testImages/rect_cow.svg","webpack:///./src/assets/testImages/triangle_deer.svg","webpack:///./src/assets/testImages/circle_lion.svg","webpack:///./src/assets/testImages/circle_bear.svg"],"names":["DM000008","canvas","SOL","SVG","p","g","backgroundG","callback","addClass","D1GetStringG","buttonG","attr","pointerEvents","visibility","rect","fill","stroke","imageInfo","src","D1circle","key","type","D1triangle","D1rect","D1circle2","background","x","y","rows","columns","gap","opacity","paths","add","remove","point","getPointInMatrixForm","startPoint","center","makeBgElement","points","clickBg","forEach","el","i","touchOrClick","bgChoiceCallback","elements","index","loadImage","use","transform","appendTo","untouchOrClick","getBBox","cx","cy","w","h","centerPoint","animate","Math","min","D1GetString","area","endCallback","D1GetStringCallback","start","element","path","push","length","console","log","circle","node","saveImage","filter","getUniquArray","arr","indexOf","get2dimArray","n","newArray","q","floor","r","getTransposeArray","tempArr","map","reverse","offset","j","getPointInScatterForm","pointNum","neighborhood","isPointInsideBBox","bbox","abs","width","height","repeat","getRandomNumber","boundingBox","x2","y2","some","bbox2","bbox1","error","wait","delay","Promise","resolve","setTimeout","getRandomArrayElement","shuffle","slice","max","random","getRandomNumberArray","isUnique","randArr","uniqueArr","getSumArray","reduce","acc","num","getSimultaneousEquationConstant","x1","y1","a","b","convertToPathStr","line","polygon","_rest","rest","Array","isArray","array","copyArray","k","makeArrayNumber","startNum","endNum","rangeNum","isSameArray","svg","document","createElement","data","XMLSerializer","serializeToString","blob","Blob","img","Image","url","URL","createObjectURL","onload","getContext","drawImage","revokeObjectURL","uri","toDataURL","replace","href","download","click","calculateAnswer","sign","ans","convertClass","c","strokeNum","strokeWidth","startCallback","moveCallback","colorG","pathG","writeArea","pathAttr","strokeLinecap","strokeLinejoin","pathStr","isStart","getTBox","drawPath","command","event","clientX","clientY","getSVGPoint","Snap","warn","drag","dx","dy","preventDefault","this","pad","stop","module","exports"],"mappings":"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","file":"static/js/8.d9db3ebd.chunk.js","sourcesContent":["import { SOL } from 'sol-common/util';\nimport D1rect from '../assets/testImages/rect_cow.svg'; //추후 삭제\nimport D1triangle from '../assets/testImages/triangle_deer.svg'; //추후 삭제\nimport D1circle from '../assets/testImages/circle_lion.svg'; //추후 삭제\nimport D1circle2 from '../assets/testImages/circle_bear.svg'; //추후 삭제\n\nimport { getPointInMatrixForm, saveImage } from '../utils/util';\nimport { loadImage } from 'sol-common';\nimport { D1GetString } from '../utils/D1GetString';\n\nexport default function DM000008({ canvas = SOL.SVG, ...p }) {\n    const g = canvas;\n    const { callback } = p;\n    const backgroundG = g.g().addClass('D1-background');\n    const D1GetStringG = g.g().addClass('D1-color');\n    const buttonG = g.g().addClass('D1-button').attr({\n        pointerEvents: 'none',\n        visibility: 'hidden'\n    });\n    g.rect(0, 0, 800, 500).attr({ fill: 'none', stroke: 'red' }); // 확인용\n    // 받을 정보 //////////////////////////////////////// //추후 삭제\n    const imageInfo = [\n        {\n            src: D1circle,\n            key: 'D1circle',\n            type: 'svg'\n        },\n        {\n            src: D1triangle,\n            key: 'D1triangle',\n            type: 'svg'\n        },\n        {\n            src: D1rect,\n            key: 'D1rect',\n            type: 'svg'\n        },\n        {\n            src: D1circle2,\n            key: 'D1circle2',\n            type: 'svg'\n        }\n    ];\n    const meta = {\n        background: {\n            x: 400,\n            y: 250,\n            rows: 1,\n            columns: 4,\n            gap: 200,\n            opacity: 0.3\n        }\n    };\n    //////////////////////////////////////////////////\n    const { background } = meta;\n    const { x, y, rows, columns, gap, opacity } = background;\n    const paths = {\n        add: [],\n        remove: []\n    };\n\n    const point = getPointInMatrixForm({\n        startPoint: { x, y },\n        rows,\n        columns,\n        gap: {\n            x: gap,\n            y: 0\n        },\n        center: true\n    });\n\n    const makeBgElement = ({ g, points }) => {\n        const clickBg = [];\n        points.forEach((el, i) => {\n            clickBg[i] = g.g().touchOrClick(() => {\n                bgChoiceCallback({ elements: clickBg, index: i });\n            });\n            loadImage(imageInfo[i])\n                .use()\n                .transform('t' + [el.x, el.y])\n                .center()\n                .appendTo(clickBg[i]);\n        });\n        return clickBg;\n    };\n\n    const bgChoiceCallback = ({ elements, index }) => {\n        elements.forEach((el, i) => {\n            el.untouchOrClick();\n            if (i === index) {\n                const { cx, cy, w, h } = el.getBBox();\n                const centerPoint = { x: 400, y: 250 };\n                el.animate(\n                    {\n                        transform: 't' + [centerPoint.x - cx, centerPoint.y - cy] + ' s' + Math.min(800 / w, 500 / h),\n                        opacity: opacity\n                    },\n                    500,\n                    function () {\n                        const { w, h } = el.getBBox();\n                        const pad = new D1GetString({\n                            g: D1GetStringG,\n                            area: [400 - w / 2, 250 - h / 2, 400 + w / 2, 250 + h / 2],\n                            endCallback: D1GetStringCallback\n                        });\n                        pad.start();\n                        buttonG.attr({\n                            pointerEvents: 'auto',\n                            visibility: 'visible'\n                        });\n                    }\n                );\n            } else {\n                el.remove();\n            }\n        });\n    };\n\n    const D1GetStringCallback = (element, path) => {\n        paths.add.push(element[element.length - 1]);\n        paths.remove = [];\n        console.log(paths);\n    };\n\n    //saveButton\n    buttonG\n        .circle(760, 50, 20)\n        .attr({ fill: 'yellow', stroke: 'none' })\n        .touchOrClick(() => {\n            console.log(g.node);\n            saveImage(g.node);\n        });\n    //undoButton\n    buttonG\n        .circle(760, 100, 20)\n        .attr({ fill: 'green', stroke: 'none' })\n        .touchOrClick(() => {\n            if (paths.add.length > 0) {\n                paths.add[paths.add.length - 1].attr('visibility', 'hidden');\n                paths.remove.push(paths.add[paths.add.length - 1]);\n                paths.add = paths.add.filter((el, i) => i !== paths.add.length - 1);\n            }\n            console.log('뒤로 가기', paths);\n        });\n    //redoButton\n    buttonG\n        .circle(760, 150, 20)\n        .attr({ fill: 'blue', stroke: 'none' })\n        .touchOrClick(() => {\n            if (paths.remove.length > 0) {\n                paths.remove[paths.remove.length - 1].attr('visibility', 'visible');\n                paths.add.push(paths.remove[paths.remove.length - 1]);\n                paths.remove = paths.remove.filter((el, i) => i !== paths.remove.length - 1);\n            }\n            console.log('앞으로 가기', paths);\n        });\n\n    //시작\n    const start = async () => {\n        makeBgElement({ g: backgroundG, points: point });\n    };\n\n    start();\n}\n","import Snap from 'sol-common/snap';\n\nexport const getSVGPoint = event => {\n    const svg = document.querySelector('#frame2d');\n    const pt = svg.createSVGPoint();\n    pt.x = event.clientX;\n    pt.y = event.clientY;\n    return pt.matrixTransform(svg.getScreenCTM().inverse());\n};\nexport const getUniquArray = arr => arr.filter((el, i) => arr.indexOf(el) === i);\nexport const get2dimArray = (arr, n) => {\n    const newArray = [];\n    arr.forEach((el, i) => {\n        const q = Math.floor(i / n);\n        const r = i % n;\n        if (r === 0) newArray[q] = [];\n        newArray[q][r] = el;\n    });\n    return newArray;\n};\nexport const getTransposeArray = arr => {\n    const newArray = [];\n    for (let i = 0; i < arr[0].length; i++) {\n        const tempArr = arr.map(el => el[i]);\n        newArray.push(tempArr);\n    }\n    return newArray;\n};\n\nexport const getClassNames = element => element.node.className.baseVal;\n\nexport const getPointInMatrixForm = ({ startPoint = { x: 0, y: 0 }, rows, columns, gap = { x: 0, y: 0 }, reverse = false, center = true }) => {\n    const point = [];\n    const offset = { x: center ? -gap.x * 0.5 * (columns - 1) : 0, y: center ? -gap.y * 0.5 * (rows - 1) : 0 };\n\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < columns; j++) {\n            const index = i * columns + j;\n            const [x, y] = [startPoint.x + gap.x * j + offset.x, startPoint.y + offset.y + (reverse ? -gap.y * i : gap.y * i)];\n            point[index] = { x, y };\n        }\n    }\n    return point;\n};\nexport const getPointInScatterForm = ({ area, pointNum, neighborhood }) => {\n    const points = [];\n    const isPointInsideBBox = (bbox, x, y) => Math.abs(bbox.cx - x) <= bbox.width / 2 && Math.abs(bbox.cy - y) <= bbox.height / 2;\n    const isBBoxIntersect = (bbox1, bbox2) =>\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2);\n\n    const limit = 1000;\n    let n = 0;\n\n    for (let index = 0; index < pointNum; index++) {\n        let repeat = true;\n        while (repeat && n < limit) {\n            const cx = getRandomNumber(area.x + neighborhood.width / 2, area.x + area.width - neighborhood.width / 2);\n            const cy = getRandomNumber(area.y + neighborhood.height / 2, area.y + area.height - neighborhood.height / 2);\n            const boundingBox = {\n                x: cx - neighborhood.width / 2,\n                x2: cx + neighborhood.width / 2,\n                cx,\n                y: cy - neighborhood.height / 2,\n                y2: cy + neighborhood.height / 2,\n                cy,\n                width: neighborhood.width,\n                height: neighborhood.height\n            };\n            const isOverlap = points.some(el => isBBoxIntersect(el, boundingBox));\n            if (!isOverlap) {\n                points.push(boundingBox);\n                repeat = false;\n            }\n            n += 1;\n        }\n    }\n\n    if (n === limit) console.error('CAN NOT GENERATE!!!');\n    return points;\n};\n\nexport const getCloseElement = (targetElement, elements) =>\n    elements.reduce((a, b) => {\n        const currentPoint = targetElement.getBBox().cx;\n        const beforeDx = Math.abs(a.getBBox().cx - currentPoint);\n        const currentDx = Math.abs(b.getBBox().cx - currentPoint);\n        return beforeDx > currentDx ? b : a;\n    }, elements[0]);\n\nexport const wait = (delay = 300) => new Promise(resolve => setTimeout(resolve, delay));\n\nexport const removeArrayElement = (arr, element) => arr.filter(el => el !== element);\nexport const getRandomArrayElement = (arr, n) => {\n    const newArray = shuffle(arr).slice(0, n);\n    while (newArray.length < n) {\n        newArray.push(shuffle(arr)[0]);\n    }\n    return newArray;\n};\nexport const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const getRandomNumberArray = (min, max, n, isUnique = true) => {\n    let randArr = [];\n    let uniqueArr = [];\n    if (isUnique) {\n        while (uniqueArr.length !== n) {\n            for (let index = 0; index < n; index++) {\n                randArr[index] = getRandomNumber(min, max);\n            }\n            uniqueArr = getUniquArray(randArr);\n        }\n    } else {\n        for (let index = 0; index < n; index++) {\n            randArr[index] = getRandomNumber(min, max);\n        }\n    }\n\n    return randArr;\n};\nexport const getSumArray = (arr) => arr.reduce((acc, num) => acc + num);\n\nexport const getSimultaneousEquationConstant = ([x1, y1], [x2, y2]) => {\n    const a = (y2 - y1) / (x2 - x1);\n    const b = y2 - a * x2;\n    return { a, b };\n};\n\nexport const convertToPathStr = {\n    line: ({ x1 = 0, y1 = 0, x2 = 0, y2 = 0 }) => 'M' + [x1, y1] + ' L' + [x2, y2],\n    rect: ({ x = 0, y = 0, width = 0, height = 0 }) => 'M' + [x, y] + ' l' + [0, height] + ' l' + [width, 0] + ' l' + [0, -height] + ' l' + [-width, 0],\n    circle: ({ cx = 0, cy = 0, r = 0 }) => 'M' + [cx + r, cy - r] + 'm' + [-r, 0] + 'a' + [r, r, 0, 1, 1, 0, r * 2] + 'a' + [r, r, 0, 1, 1, 0, -(r * 2)],\n    polygon: (..._rest) => {\n        const rest = Array.isArray(_rest[0]) ? _rest[0] : _rest;\n        return rest.reduce((a, b, i) => {\n            if (i === 0) return (a += b + ',');\n            else if (i === 1) return (a += b + ' ');\n            else if (i % 2 === 0) return (a += 'L' + b + ',');\n            else return (a += b + ' ');\n        }, 'M');\n    }\n};\n\nexport const shuffle = array => {\n    const copyArray = array.map(el => el);\n    for (let i = copyArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const k = copyArray[i];\n        copyArray[i] = copyArray[j];\n        copyArray[j] = k;\n    }\n    return copyArray;\n};\n\nexport const makeArrayNumber = ({ startNum = 1, endNum }) => {\n    const rangeNum = [];\n    for (let i = startNum; i < endNum + 1; i++) {\n        rangeNum.push(i);\n    }\n    return rangeNum;\n};\n\nexport const isSameArray = (a, b) => {\n    let n;\n    if (a.length === b.length) {\n        n = 0;\n        a.forEach((el, i) => {\n            if (el === b[i]) n += 1;\n        });\n    }\n    return n === a.length;\n};\n\nexport const saveImage = svg => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 800;\n    canvas.height = 800;\n    const data = new XMLSerializer().serializeToString(svg);\n    const blob = new Blob([data], { type: 'image/svg+xml' });\n    const img = new Image();\n    const url = URL.createObjectURL(blob);\n    img.src = url;\n\n    img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        canvas.getContext('2d')?.drawImage(img, 0, 0);\n        URL.revokeObjectURL(url);\n        const uri = canvas.toDataURL('image/png').replace('image/png', 'octet/stream');\n        console.log(uri);\n        const a = document.createElement('a');\n        a.href = uri;\n        a.download = 'myPhoto.png';\n        a.click();\n        URL.revokeObjectURL(uri);\n    };\n};\n\nexport const calculateAnswer = (num, sign) => {\n    let ans;\n    switch (sign) {\n        case '+':\n            ans = 0;\n            num.forEach(el => {\n                ans = ans + el;\n            });\n            break;\n        case '-':\n            num.forEach((el, i) => {\n                ans = i === 0 ? el : ans + el;\n            });\n            break;\n        case '*':\n            ans = 1;\n            num.forEach(el => {\n                ans = ans * el;\n            });\n            break;\n        case '/':\n            ans = {};\n            ans.q = Math.floor(num[0] / num[1]);\n            ans.r = num[0] % num[1];\n            break;\n    }\n    return ans;\n};\n","import Snap from 'sol-common/snap';\nimport { getSVGPoint } from 'sol-common/util';\n\nconst convertClass = c => {\n    let color;\n    switch (c) {\n        case '02':\n            return (color = '#ed6276');\n        case '03':\n            return (color = '#f7c541');\n        case '04':\n            return (color = '#85bc4a');\n        case '05':\n            return (color = '#e885b4');\n        case '06':\n            return (color = '#59c3ff');\n        case '07':\n            return (color = '#f48134');\n        case '09':\n            return (color = '#9467b9');\n        case '12':\n            return (color = '#508446');\n        case '13':\n            return (color = '#20a1e2');\n        case '14':\n            return (color = '#FFFFFF');\n        case '34':\n            return (color = '#80f1da');\n        case '85':\n            return (color = '#000000');\n        default:\n            return (color = '#000000');\n    }\n};\n\nexport const D1GetString = function ({ g, area, strokeNum = '85', strokeWidth = 10, startCallback, moveCallback, endCallback }) {\n    const colorG = g.g().attr('visibility', 'hidden');\n    const pathG = colorG.g();\n    const writeArea = colorG\n        .rect(area[0], area[1], area[2] - area[0], area[3] - area[1])\n        .addClass('f04')\n        .attr({\n            opacity: 0,\n            pointerEvents: 'none'\n        });\n    const pathAttr = {\n        fill: 'none',\n        stroke: convertClass(strokeNum),\n        strokeWidth: strokeWidth,\n        pointerEvents: 'none',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round'\n    };\n    let pathStr = [];\n    let path = [];\n    let index = 0;\n    let isStart = false;\n    const bbox = writeArea.getTBox();\n\n    const drawPath = (command, event) => {\n        const { clientX, clientY } = event;\n        const { x, y } = getSVGPoint(clientX, clientY);\n        if (Snap.path.isPointInsideBBox(bbox, x, y)) {\n            pathStr[index] = pathStr[index] + command + x + ',' + y;\n            if (pathStr[index][0] !== 'M') {\n                console.warn('M', pathStr[index], '-----', 'M' + pathStr[index].slice(1) + pathStr[index]); // 버그 경과 보기 위한 로그\n                pathStr[index] = 'M' + pathStr[index].slice(1) + pathStr[index];\n            }\n            path[index].attr('d', pathStr[index]);\n        }\n    };\n    const startFunction = (x, y, event) => {\n        isStart = true;\n        event.preventDefault();\n        if (startCallback) startCallback(event);\n        pathStr[index] = '';\n        path[index] = pathG.path('').attr(pathAttr);\n        // effectSound.play();\n        drawPath('M', event);\n        drawPath('L', event);\n    };\n    const moveFunction = (dx, dy, x, y, event) => {\n        if (!isStart) return;\n        event.preventDefault();\n        if (moveCallback) moveCallback(event);\n        drawPath('L', event);\n    };\n    const endFunction = () => {\n        if (!isStart) return;\n        // effectSound.stop();\n        index += 1;\n        if (endCallback) endCallback(path, pathStr);\n        isStart = false;\n    };\n    writeArea.drag(moveFunction, startFunction, endFunction);\n\n    this.g = g;\n    this.pathG = pathG;\n    this.pad = writeArea;\n\n    this.start = () => {\n        colorG.attr('visibility', 'visible');\n        writeArea.attr('pointerEvents', 'auto');\n    };\n    this.stop = () => {\n        colorG.attr('visibility', 'hidden');\n        writeArea.attr('pointerEvents', 'none');\n    };\n    this.remove = () => {\n        colorG.remove();\n    };\n\n    return this;\n};\n","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"76px\\\" height=\\\"89px\\\" viewBox=\\\"0 0 76 89\\\" style=\\\"enable-background:new 0 0 76 89;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#E6C38B;} .st1{fill:#F4D09A;} .st2{fill:#F3E2CB;} .st3{fill:#ECC07B;} .st4{fill:#F7E7D2;} .st5{fill:#C97E4D;} .st6{fill:#2D2119;} .st7{fill:#DB8758;} .st8{fill:#825426;} .st9{fill:#965F2D;} .st10{fill:#F7C5B5;} .st11{fill:#845420;} </style><g><g><path class=\\\"st0\\\" d=\\\"M43.7,12.3c2.6-2.7,4.7-6.7,4.5-9.7c-0.2-3,0.9-3,2.6-1.7s7.7,6.3,3.6,16.5L43.7,12.3z\\\"></path><g><path class=\\\"st1\\\" d=\\\"M50.4,2.4c1,0.8,4.1,3.1,5.3,7.2c-0.4-5.1-3.8-7.9-4.9-8.8c-1.5-1.2-2.6-1.3-2.6,1 C48.6,1.4,49.4,1.7,50.4,2.4z\\\"></path></g><path class=\\\"st0\\\" d=\\\"M32.3,12.3c-2.6-2.7-4.7-6.7-4.5-9.7c0.2-3-0.9-3-2.6-1.7c-1.7,1.3-7.7,6.3-3.6,16.5L32.3,12.3z\\\"></path><g><path class=\\\"st1\\\" d=\\\"M32,12.4l0.3-0.1c-0.8-0.8-1.5-1.8-2.1-2.7C30.7,10.5,31.3,11.5,32,12.4z\\\"></path><path class=\\\"st1\\\" d=\\\"M26.1,2.3c0.7-0.6,1.3-0.9,1.8-0.8c-0.1-1.9-1.2-1.8-2.6-0.6c-1.3,1-5.1,4.1-5,10C21.4,6.1,25,3.2,26.1,2.3z \\\"></path></g></g><g><path class=\\\"st2\\\" d=\\\"M24.5,26.9l-13.3-3.6C4.5,21.5-0.1,15.3,0,8.4l0.1-3.8c0-1,1-1.7,2-1.3l9.4,3.8c7.7,3.1,12.8,10.4,13,18.7 L24.5,26.9z\\\"></path><path class=\\\"st3\\\" d=\\\"M1.3,10.9l-0.1,3.7c1.8,4.1,5.4,7.4,9.9,8.6l13.3,3.6l0-0.5c-2-5.5-6.2-10-11.8-12.2L2.5,10.1 C1.9,9.9,1.3,10.3,1.3,10.9z\\\"></path><path class=\\\"st2\\\" d=\\\"M51.5,26.9l13.3-3.6c6.7-1.8,11.3-8,11.2-14.9l-0.1-3.8c0-1-1-1.7-2-1.3l-9.4,3.8c-7.7,3.1-12.8,10.4-13,18.7 L51.5,26.9z\\\"></path><path class=\\\"st3\\\" d=\\\"M74.7,10.9l0.1,3.7c-1.8,4.1-5.4,7.4-9.9,8.6l-13.3,3.6l0-0.5c2-5.5,6.2-10,11.8-12.2l10.2-4.1 C74.1,9.9,74.7,10.3,74.7,10.9z\\\"></path></g><path class=\\\"st2\\\" d=\\\"M67.4,78.4H8.6V32.6c0-9.1,7.4-16.5,16.5-16.5h25.8c9.1,0,16.5,7.4,16.5,16.5V78.4z\\\"></path><ellipse transform=\\\"matrix(0.8791 -0.4767 0.4767 0.8791 -8.7411 11.3322)\\\" class=\\\"st4\\\" cx=\\\"18\\\" cy=\\\"22.9\\\" rx=\\\"7.2\\\" ry=\\\"3.6\\\"></ellipse><path class=\\\"st4\\\" d=\\\"M50.9,16.1H25.1c-9.1,0-16.5,7.4-16.5,16.5v1.6c1.8-7.9,8.9-13.9,17.4-13.9h27.8c4.4,0,8.4,1.6,11.6,4.3 C62.5,19.6,57.1,16.1,50.9,16.1z\\\"></path><path class=\\\"st5\\\" d=\\\"M67.4,32.6c0-8.7-6.7-15.8-15.2-16.4c-3.1,6-0.5,12.7-11.4,25.2c-7,8-21.8,37.7,8.2,38.4 c6.9,0.1,13.9-5.6,18.5-6.1V32.6z\\\"></path><g><circle class=\\\"st6\\\" cx=\\\"23.6\\\" cy=\\\"49.4\\\" r=\\\"3.4\\\"></circle><circle class=\\\"st6\\\" cx=\\\"52.4\\\" cy=\\\"49.4\\\" r=\\\"3.4\\\"></circle></g><path class=\\\"st5\\\" d=\\\"M8.6,32.6v15.8c4-1.4,6.8-5.3,5.6-8.1c-1.8-4-1.6-6.6,4.5-9.3c5.4-2.4,3.5-8.9,0.4-13.7 C12.9,19.7,8.6,25.6,8.6,32.6z\\\"></path><g><path class=\\\"st7\\\" d=\\\"M65.3,24.6C65.3,24.6,65.3,24.6,65.3,24.6c-0.2-0.3-0.4-0.6-0.5-0.9c0,0,0,0,0,0c-0.2-0.3-0.4-0.5-0.5-0.8 c0-0.1-0.1-0.1-0.1-0.2c-0.4-0.5-0.8-1-1.3-1.5c-0.1-0.1-0.1-0.1-0.2-0.2c-0.2-0.2-0.4-0.4-0.5-0.5c-0.1-0.1-0.1-0.1-0.2-0.2 c-0.2-0.2-0.5-0.4-0.7-0.6c-0.1-0.1-0.2-0.1-0.3-0.2c-0.2-0.1-0.3-0.2-0.5-0.4c-0.1-0.1-0.2-0.1-0.3-0.2c-0.2-0.2-0.5-0.3-0.7-0.5 c-0.1-0.1-0.2-0.1-0.4-0.2c-0.2-0.1-0.3-0.2-0.5-0.3c-0.1-0.1-0.3-0.1-0.4-0.2c-0.1-0.1-0.3-0.1-0.5-0.2c-0.2-0.1-0.5-0.2-0.7-0.3 c-0.1-0.1-0.3-0.1-0.4-0.2c-0.2-0.1-0.3-0.1-0.5-0.2c-0.1,0-0.3-0.1-0.4-0.1c-0.3-0.1-0.6-0.2-0.9-0.3c-0.1,0-0.2-0.1-0.4-0.1 c-0.2,0-0.4-0.1-0.6-0.1c-0.1,0-0.2,0-0.4-0.1c-0.2,0-0.4-0.1-0.6-0.1c-0.1,0-0.2,0-0.3,0c-0.2,0-0.4,0-0.5-0.1 c-0.7,1.3-1.1,2.7-1.4,4.2h3C58.2,20.4,62.2,22,65.3,24.6z\\\"></path><path class=\\\"st7\\\" d=\\\"M14.8,19.7C14.8,19.7,14.8,19.7,14.8,19.7c-0.6,0.5-1.2,1-1.8,1.6c0,0,0,0,0,0c-0.3,0.3-0.5,0.6-0.8,0.9 c0,0,0,0,0,0c-0.2,0.3-0.5,0.6-0.7,0.9c0,0,0,0-0.1,0.1c-0.2,0.3-0.4,0.6-0.6,1c0,0,0,0.1-0.1,0.1c-0.2,0.3-0.3,0.6-0.5,0.9 c0,0,0,0.1-0.1,0.1c-0.2,0.3-0.3,0.7-0.5,1c0,0.1,0,0.1-0.1,0.2c-0.1,0.3-0.2,0.6-0.3,1c0,0,0,0.1,0,0.1c-0.1,0.4-0.2,0.7-0.3,1.1 c0,0.1,0,0.2-0.1,0.2c-0.1,0.3-0.1,0.7-0.2,1c0,0,0,0.1,0,0.1c-0.1,0.4-0.1,0.7-0.1,1.1c0,0.1,0,0.2,0,0.3c0,0.4,0,0.8,0,1.2v1.6 c1.4-6.4,6.3-11.4,12.5-13.2c-0.5-1.3-1.2-2.6-2-3.8C17.5,17.9,16.1,18.7,14.8,19.7z\\\"></path></g><path class=\\\"st8\\\" d=\\\"M56,21.1c-0.3-0.8-0.7-1.5-1.1-2.2c-2.1-3.6-7.3-6.4-13.6-6.8c-0.5,0-1-0.1-1.4-0.1 c-3.5-0.4-20.3-2.3-20.6,3.4c-0.2,3.6,3.9,4.3,5.8,4.5c-1.4,3.3-0.9,6.7,1.1,7.7c1.9,1,4.7-0.4,6.6-3.1c1,3.2,3.2,5.4,5.3,5.1 c1.7-0.3,2.9-2,3.3-4.3c1.6,2.9,4.1,4.6,6.2,3.8c0.7-0.3,1.3-0.8,1.7-1.6c1.5,1.8,3.4,2.7,5,2.1C56.7,28.7,57.5,24.9,56,21.1z\\\"></path><g><path class=\\\"st9\\\" d=\\\"M21.1,18.1c0.4-5.7,17.2-3.9,20.6-3.4c0.5,0,1,0,1.4,0.1c5.2,0.4,9.7,2.4,12.3,5.1c-0.2-0.3-0.4-0.7-0.5-1 c-2.1-3.6-7.3-6.4-13.6-6.8c-0.5,0-1-0.1-1.4-0.1c-3.5-0.4-20.3-2.3-20.6,3.4c-0.1,1.7,0.8,2.8,1.9,3.4 C21.1,18.6,21.1,18.4,21.1,18.1z\\\"></path></g><g><ellipse class=\\\"st10\\\" cx=\\\"16.9\\\" cy=\\\"58.6\\\" rx=\\\"6.7\\\" ry=\\\"4.7\\\"></ellipse><ellipse class=\\\"st10\\\" cx=\\\"59.1\\\" cy=\\\"58.6\\\" rx=\\\"6.7\\\" ry=\\\"4.7\\\"></ellipse></g><path class=\\\"st3\\\" d=\\\"M55.9,89H20.1c-6.3,0-11.5-4.1-11.5-9.1v-9.2l0,0c19.1-5.1,39.7-5.1,58.8,0l0,0v9.2C67.4,84.9,62.3,89,55.9,89 z\\\"></path><g><circle class=\\\"st11\\\" cx=\\\"33.7\\\" cy=\\\"70.2\\\" r=\\\"1.5\\\"></circle><circle class=\\\"st11\\\" cx=\\\"42.3\\\" cy=\\\"70.2\\\" r=\\\"1.5\\\"></circle></g><path class=\\\"st8\\\" d=\\\"M38,85.3c-7.4,0-11.8-4.4-13.2-8.1c-0.2-0.5,0.1-1,0.5-1.2c0.5-0.2,1,0.1,1.2,0.5c1.2,3.2,5,6.9,11.5,6.9 c6.2,0,10.9-3.5,11.4-6.7c0.1-0.5,0.6-0.9,1.1-0.8c0.5,0.1,0.9,0.6,0.8,1.1C50.5,82.1,43.7,85.3,38,85.3z\\\"></path><path class=\\\"st7\\\" d=\\\"M19.7,26c0.9-0.5,1.7-1,2.3-1.6c-0.3-2-1.1-4.1-2.2-6c-1.1,0.2-2.3,0.7-3.5,1.3c-3.5,1.9-5.6,4.9-4.7,6.6 C12.6,28.1,16.2,27.9,19.7,26z\\\"></path></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"92px\\\" height=\\\"105px\\\" viewBox=\\\"0 0 92 105\\\" style=\\\"enable-background:new 0 0 92 105;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#543D2E;} .st1{fill:#D68147;} .st2{fill:#FDC0A7;} .st3{fill:#E08E58;} .st4{fill:#F3C888;} .st5{fill:#E08B4B;} .st6{fill:#F29E64;} .st7{fill:#2D2119;} .st8{fill:#AD5536;} .st9{fill:#F7D3A4;} .st10{fill:#F9A973;} </style><g><g><g><path class=\\\"st0\\\" d=\\\"M11.3,20C11.3,20,11.3,20,11.3,20c-0.4-0.3-0.4-0.2-0.2-0.1C11.2,19.9,11.2,20,11.3,20 C11.3,20,11.3,20,11.3,20z\\\"></path><path class=\\\"st0\\\" d=\\\"M38.9,41.6c-0.2-4.1-2-7.7-4.7-10.6c-1.9-2.1-4.9-3.3-5.5-6.3c-0.3-1.9-0.2-4.2,0.7-5.9 c0.1-0.2,0.2-0.4,0.2-0.6c0.8-1.6,0.5-3.8-1.2-4.7c-1.6-0.8-3.8-0.5-4.7,1.2c-1.2,2.3-1.8,4.7-1.9,7.2c0,0.8-0.8,1.3-1.5,1 c-0.3-0.1-0.6-0.2-0.8-0.3c-3.6-1.2-0.4-10.7,0.7-12.9C21,8.1,20.7,5.9,19,5c-1.5-0.8-3.8-0.5-4.7,1.2c-2.1,4.3-3.1,9.1-2.7,13.8 c-0.1,0-0.2-0.1-0.3-0.1c0,0,0,0,0,0c0,0,0,0-0.1,0c-0.1,0-0.2-0.1-0.2-0.1c-1.8-1.2-3.7-1.6-4.2-4.2C6.3,12.4,7.8,8,8.4,4.7 C8.5,3.8,8.5,2.9,8,2.1C7.6,1.3,6.8,0.7,6,0.5C4.3,0.1,2.1,1,1.8,2.9C1.4,5.1,1.1,7.2,0.7,9.4c-0.4,2.2-0.9,4.5-0.7,6.7 c0.2,2.4,1.1,4.6,2.8,6.4c1.2,1.4,2.9,2.4,4.5,3.2c3.6,1.7,7.6,2.7,11.4,3.9c0.9,0.3,1.8,0.6,2.6,0.9c3.1,1.2,6,2.9,8.2,5.4 c2,2.3,1.9,10.6,6.9,9C37.8,44.4,39,43.1,38.9,41.6z\\\"></path><path class=\\\"st0\\\" d=\\\"M19.7,10.8C19.8,10.8,19.8,10.7,19.7,10.8C19.8,10.7,19.8,10.8,19.7,10.8C19.7,10.8,19.7,10.8,19.7,10.8z\\\"></path></g><g><path class=\\\"st0\\\" d=\\\"M79.7,20C79.6,20,79.6,20,79.7,20c0.4-0.3,0.4-0.2,0.2-0.1C79.8,19.9,79.7,20,79.7,20 C79.7,20,79.7,20,79.7,20z\\\"></path><path class=\\\"st0\\\" d=\\\"M52,41.6c0.2-4.1,2-7.7,4.7-10.6c1.4-1.5,3.8-2.6,4.9-4.3c2.4-3.7-3.1-11,0.9-13.2c1.6-0.8,3.8-0.5,4.7,1.2 c1.2,2.3,1.8,4.7,1.9,7.2c0.1,2.1,2.4,0.7,3-0.1c3-4.5-4.7-14.3-0.1-16.7c1.5-0.8,3.8-0.5,4.7,1.2c2.2,4.4,2.8,9,2.8,13.9 c0-0.4,4.1-2.3,4.5-3.4c1-2.2-0.2-6.5-0.7-8.7c-0.3-1.2-0.6-2.3-0.7-3.5c0-1.2,0.2-2.5,1.1-3.3c1.6-1.7,5.2-0.7,5.6,1.6 c0.4,2.2,0.7,4.4,1.1,6.5c0.4,2.2,0.9,4.5,0.7,6.7c-0.4,4.4-3.3,7.7-7.3,9.5c-5.9,2.8-12.7,3.6-18.3,7c-1.4,0.9-3.2,2.3-4.3,3.8 c-1.3,1.8-1.2,3.9-2.1,5.9c-0.2,0.4-0.3,0.7-0.5,1.1c-0.7,1.2-2.5,1.9-3.8,1.5C53.2,44.4,51.9,43.1,52,41.6z\\\"></path><path class=\\\"st0\\\" d=\\\"M71.2,10.8C71.2,10.8,71.2,10.7,71.2,10.8C71.2,10.7,71.2,10.8,71.2,10.8C71.2,10.8,71.2,10.8,71.2,10.8z\\\"></path></g></g><g><path class=\\\"st1\\\" d=\\\"M64.1,51.7c0,0,10-19.3,26.6-20.5c0.5,0,1,0.3,1,0.9c0.4,3,1.1,12.4-5.3,17.1C78.7,54.7,68.1,55.5,64.1,51.7z \\\"></path><path class=\\\"st2\\\" d=\\\"M70.4,54c4.8,0.4,11.1-1.2,16-4.8c3.2-2.3,4.7-5.9,5.2-9.3C81.9,41.1,74.6,48.5,70.4,54z\\\"></path></g><g><path class=\\\"st1\\\" d=\\\"M29.1,51.7c0,0-10-19.3-26.6-20.5c-0.5,0-1,0.3-1,0.9C1,35,0.3,44.5,6.8,49.1C14.5,54.7,25.1,55.5,29.1,51.7z \\\"></path><path class=\\\"st3\\\" d=\\\"M2.4,34.7c12.4,0.8,21.6,10.2,26.7,17C29,51.4,19,32.3,2.5,31.2c-0.5,0-1,0.3-1,0.9c-0.1,0.8-0.2,2-0.2,3.5 C1.3,35,1.8,34.6,2.4,34.7z\\\"></path><path class=\\\"st3\\\" d=\\\"M90.8,34.7c-12.4,0.8-21.6,10.2-26.7,17c0.1-0.3,10.1-19.3,26.6-20.4c0.5,0,1,0.3,1,0.9 c0.1,0.8,0.2,2,0.2,3.5C91.9,35,91.4,34.6,90.8,34.7z\\\"></path><path class=\\\"st2\\\" d=\\\"M22.8,54c-4.9,0.4-11.1-1.2-16-4.8c-3.2-2.3-4.7-5.9-5.2-9.3C11.3,41.1,18.6,48.5,22.8,54z\\\"></path></g><path class=\\\"st4\\\" d=\\\"M61.5,93.9c-2.8,5.1-8.5,10.7-16.1,10.7h0c-7.2,0-13.6-6.2-16.3-11.4c-11.3-22-11.8-31-11.8-31 c-2.4-12.3,4.7-21,17-21h22.2c12.3,0,20.4,10.8,17,21C73.4,62.1,69.2,79.9,61.5,93.9z\\\"></path><g><path class=\\\"st5\\\" d=\\\"M56.4,41.1H34.2c-12,0-19,8.3-17.1,20.2c2-0.8,4.1-1.1,6.4-1.1c10.2,0,18.5,7.4,19.5,26.9 c0.7,0,1.3,0.1,2,0.1c1,0,2.1,0,3.1,0.1c0.9-19.6,9.3-27.1,19.5-27.1c2.2,0,4.2,0.3,6.2,1C76.3,51.3,68.3,41.1,56.4,41.1z\\\"></path></g><g><path class=\\\"st6\\\" d=\\\"M35.2,45.3h25c4.1,0,7.9,1.1,10.9,2.9c-3.1-4.2-8.3-7.2-14.7-7.2H34.2c-10.4,0-17.1,6.3-17.4,15.7 C19.4,49.7,26,45.3,35.2,45.3z\\\"></path></g><path class=\\\"st7\\\" d=\\\"M49.1,87.3c0,0.4-0.8,1.3-1.3,1.8c-1.5,1.4-3,1.4-4.5,0c-0.5-0.5-1.3-1.4-1.3-1.8c0-1.3,1.6-1.9,3.6-1.9 S49.1,86,49.1,87.3z\\\"></path><path class=\\\"st8\\\" d=\\\"M45.5,97.6c-4.3,0-6.8-2.1-7.7-3.8c-0.2-0.5,0-1.1,0.4-1.3c0.5-0.2,1.1,0,1.3,0.4c0.7,1.4,2.8,2.8,6,2.8 c2.8,0,4.8-1,6-2.8c0.3-0.4,0.9-0.6,1.3-0.3c0.4,0.3,0.6,0.9,0.3,1.3C52,95.6,49.8,97.6,45.5,97.6z\\\"></path><g><circle class=\\\"st7\\\" cx=\\\"32.3\\\" cy=\\\"73.6\\\" r=\\\"3.2\\\"></circle><circle class=\\\"st7\\\" cx=\\\"59.3\\\" cy=\\\"73.6\\\" r=\\\"3.2\\\"></circle></g><g><path class=\\\"st4\\\" d=\\\"M35.5,45.2c0-0.2,0.1-0.4,0.1-0.5c0.1-0.2,0.3-0.4,0.6-0.5c3.2-1.9,6.6,1.1,7.9,4c0.3,0.6,0.4,1.3,0,1.9 c-0.8,1.2-2.8,0.9-4,0.5c-1.8-0.5-3.8-1.8-4.4-3.6c-0.2-0.5-0.2-1-0.2-1.4C35.5,45.4,35.5,45.3,35.5,45.2z\\\"></path></g><g><path class=\\\"st4\\\" d=\\\"M46.4,45c0.1-0.4,0.3-0.7,0.7-0.8c0.5-0.2,1,0,1.5,0.1c0.7,0.3,1.4,0.7,2,1.2c0.4,0.4,0.8,0.8,1,1.4 c0.2,0.6,0.1,1.2-0.3,1.6c-1.2,1.3-3.7-0.8-4.5-1.8C46.6,46.3,46.3,45.6,46.4,45z\\\"></path></g><g><g><path class=\\\"st9\\\" d=\\\"M36.2,44.1c-0.2,0.1-0.4,0.3-0.6,0.5c-0.1,0.2-0.1,0.3-0.1,0.5c0,0.1,0,0.1,0,0.2h6.7 C40.5,43.7,38.3,42.9,36.2,44.1z\\\"></path></g><g><path class=\\\"st9\\\" d=\\\"M47.1,44.2c-0.5,0.1-0.7,0.5-0.7,0.8c0,0.1,0,0.2,0,0.3h4c-0.5-0.4-1.1-0.8-1.8-1 C48.1,44.1,47.6,44,47.1,44.2z\\\"></path></g></g><g><path class=\\\"st4\\\" d=\\\"M44.6,54.7c1-1.5,6-3.9,5.7-0.5c-0.1,1.2-0.6,2.3-1.1,3.3c-0.4,0.8-0.9,2-1.8,2.4c-1.2,0.6-2.3-0.5-2.9-1.5 C43.9,57.3,43.8,55.8,44.6,54.7z\\\"></path></g><g><path class=\\\"st4\\\" d=\\\"M36,51.9c0.1-0.1,0.1-0.1,0.3-0.1c0.2,0,0.4,0,0.5,0c0.7,0.2,1.8,0.8,2.2,1.5c0.3,0.5,0.2,1.2-0.3,1.5 c-0.5,0.4-1.2,0.2-1.7-0.2C36.6,54.3,35.4,52.4,36,51.9z\\\"></path></g><g><path class=\\\"st4\\\" d=\\\"M53.8,52.1c-0.1,0-0.1-0.1-0.1-0.2c0-0.1,0-0.3,0-0.4c0.2-0.6,0.7-1.4,1.3-1.7c0.4-0.2,1-0.1,1.3,0.2 c0.3,0.4,0.1,2.1-0.2,2.5C55.9,52.8,54.3,52.5,53.8,52.1z\\\"></path></g><g><path class=\\\"st10\\\" d=\\\"M31.9,82.1c0-2.5-2.8-4.5-6.3-4.5c-1.3,0-2.5,0.3-3.5,0.7c1,2.4,2.2,5.2,3.6,8.2 C29.2,86.6,31.9,84.6,31.9,82.1z\\\"></path><path class=\\\"st10\\\" d=\\\"M59,82.1c0,2.4,2.7,4.4,6.1,4.5c1.3-2.8,2.4-5.7,3.4-8.4c-0.9-0.4-2-0.6-3.1-0.6C61.9,77.7,59,79.7,59,82.1z \\\"></path></g><ellipse transform=\\\"matrix(0.9013 -0.4332 0.4332 0.9013 -18.0316 15.9326)\\\" class=\\\"st6\\\" cx=\\\"25.9\\\" cy=\\\"47.5\\\" rx=\\\"6.5\\\" ry=\\\"3.7\\\"></ellipse></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"87px\\\" height=\\\"87px\\\" viewBox=\\\"0 0 87 87\\\" style=\\\"enable-background:new 0 0 87 87;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#C44A3D;} .st1{fill:#DD7440;} .st2{fill:#FFBE55;} .st3{fill:#D36629;} .st4{fill:#FFC97B;} .st5{opacity:0.9;} .st6{fill:#FF9240;} .st7{opacity:0.2;fill:#FFC2BD;} .st8{fill:#2D2119;} .st9{fill:#EF941D;} .st10{fill:#AF4635;} </style><g><circle class=\\\"st0\\\" cx=\\\"43.5\\\" cy=\\\"43.5\\\" r=\\\"43.5\\\"></circle><path class=\\\"st1\\\" d=\\\"M78.5,17.7c-2.8-3.8-6.2-7.1-10.1-9.8l-21.6,26L50,0.5C47.9,0.2,45.7,0,43.5,0c-2.6,0-5.1,0.2-7.5,0.7 l3.1,33.2L17.9,8.3c-3.8,2.8-7.1,6.1-9.8,9.9l25.4,21.1L0.6,36.2C0.2,38.6,0,41,0,43.5c0,2.3,0.2,4.5,0.5,6.7l33.1-3.1L7.9,68.4 c2.7,3.9,6,7.3,9.8,10l21.4-25.9l-3.1,33.7c2.5,0.4,5,0.7,7.6,0.7c2.2,0,4.4-0.2,6.5-0.5l-3.2-33.9L68.7,79 c3.9-2.8,7.3-6.1,10.1-10L52.3,47.1l34.2,3.2c0.3-2.2,0.5-4.5,0.5-6.8c0-2.5-0.2-5-0.6-7.4l-34,3.2L78.5,17.7z\\\"></path><g><circle class=\\\"st2\\\" cx=\\\"20.2\\\" cy=\\\"27.5\\\" r=\\\"6.9\\\"></circle><circle class=\\\"st3\\\" cx=\\\"21.1\\\" cy=\\\"28.3\\\" r=\\\"3.6\\\"></circle><circle class=\\\"st2\\\" cx=\\\"66.8\\\" cy=\\\"27.5\\\" r=\\\"6.9\\\"></circle><circle class=\\\"st3\\\" cx=\\\"65.9\\\" cy=\\\"28.4\\\" r=\\\"3.7\\\"></circle></g><ellipse class=\\\"st2\\\" cx=\\\"43.5\\\" cy=\\\"49.3\\\" rx=\\\"29.8\\\" ry=\\\"28.5\\\"></ellipse><path class=\\\"st4\\\" d=\\\"M45.7,24.3c8.6,0,16.5,3.3,22.2,8.7c-5.4-7.3-14.3-12.1-24.4-12.1c-16.4,0-29.8,12.8-29.8,28.5 c0,1.1,0.1,2.1,0.2,3.1C15.2,36.7,28.9,24.3,45.7,24.3z\\\"></path><g class=\\\"st5\\\"><ellipse class=\\\"st6\\\" cx=\\\"22.9\\\" cy=\\\"55.7\\\" rx=\\\"6.6\\\" ry=\\\"4.6\\\"></ellipse><ellipse class=\\\"st6\\\" cx=\\\"64.1\\\" cy=\\\"55.7\\\" rx=\\\"6.6\\\" ry=\\\"4.6\\\"></ellipse></g><path class=\\\"st7\\\" d=\\\"M46.1,5.3c13.6,0,25.8,5.9,34.3,15.2C72.8,8.2,59.1,0,43.5,0C19.5,0,0,19.5,0,43.5c0,0.9,0,1.7,0.1,2.6 C2.8,23.1,22.4,5.3,46.1,5.3z\\\"></path><g><circle class=\\\"st8\\\" cx=\\\"30.5\\\" cy=\\\"47.7\\\" r=\\\"3\\\"></circle><circle class=\\\"st8\\\" cx=\\\"56.5\\\" cy=\\\"47.7\\\" r=\\\"3\\\"></circle></g><g><path class=\\\"st9\\\" d=\\\"M49.6,57.3H37.4l1.5-14.4c0.2-2.4,2.2-4.2,4.6-4.2h0c2.4,0,4.4,1.8,4.6,4.2L49.6,57.3z\\\"></path><path class=\\\"st8\\\" d=\\\"M46.2,60.7h-5.5c-1.8,0-3.3-1.5-3.3-3.3v0h12.2v0C49.6,59.2,48.1,60.7,46.2,60.7z\\\"></path></g><path class=\\\"st10\\\" d=\\\"M43.5,69.2c-6.3,0-10.9-4-12.1-8c-0.1-0.5,0.1-1,0.6-1.2c0.5-0.1,1,0.1,1.2,0.6c0.8,2.7,4.3,6.7,10.4,6.7 c6,0,9.6-4.1,10.4-6.7c0.2-0.5,0.7-0.8,1.2-0.6c0.5,0.2,0.8,0.7,0.6,1.2C54.4,65,49.8,69.2,43.5,69.2z\\\"></path><ellipse transform=\\\"matrix(0.9368 -0.3499 0.3499 0.9368 -7.4266 13.6658)\\\" class=\\\"st4\\\" cx=\\\"34.1\\\" cy=\\\"27.4\\\" rx=\\\"6.8\\\" ry=\\\"3.2\\\"></ellipse></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"80px\\\" height=\\\"74px\\\" viewBox=\\\"0 0 80 74\\\" style=\\\"enable-background:new 0 0 80 74;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#B37657;} .st1{fill:#FFB98A;} .st2{fill:#C17E63;} .st3{fill:#F2D3CC;} .st4{fill:#2D2119;} .st5{fill:#843C28;} .st6{fill:#B57B6C;} </style><g><g><circle class=\\\"st0\\\" cx=\\\"11.3\\\" cy=\\\"11.7\\\" r=\\\"11.3\\\"></circle><circle class=\\\"st1\\\" cx=\\\"12.8\\\" cy=\\\"13.2\\\" r=\\\"6\\\"></circle><circle class=\\\"st0\\\" cx=\\\"68.7\\\" cy=\\\"11.7\\\" r=\\\"11.3\\\"></circle><circle class=\\\"st1\\\" cx=\\\"67.2\\\" cy=\\\"13.2\\\" r=\\\"6\\\"></circle></g><ellipse class=\\\"st0\\\" cx=\\\"40\\\" cy=\\\"38.6\\\" rx=\\\"36.6\\\" ry=\\\"35.1\\\"></ellipse><path class=\\\"st2\\\" d=\\\"M42.6,7.8c10.6,0,20.3,4.1,27.4,10.7c-6.6-9-17.6-15-30-15C19.8,3.5,3.4,19.2,3.4,38.6c0,1.3,0.1,2.6,0.2,3.9 C5.1,23.1,22,7.8,42.6,7.8z\\\"></path><g><ellipse class=\\\"st1\\\" cx=\\\"14.6\\\" cy=\\\"46.5\\\" rx=\\\"8.1\\\" ry=\\\"5.7\\\"></ellipse><ellipse class=\\\"st1\\\" cx=\\\"65.4\\\" cy=\\\"46.5\\\" rx=\\\"8.1\\\" ry=\\\"5.7\\\"></ellipse></g><g><ellipse class=\\\"st3\\\" cx=\\\"40\\\" cy=\\\"49.3\\\" rx=\\\"15.5\\\" ry=\\\"11\\\"></ellipse></g><g><circle class=\\\"st4\\\" cx=\\\"24\\\" cy=\\\"36.6\\\" r=\\\"3.7\\\"></circle><circle class=\\\"st4\\\" cx=\\\"56\\\" cy=\\\"36.6\\\" r=\\\"3.7\\\"></circle></g><ellipse transform=\\\"matrix(0.9368 -0.3499 0.3499 0.9368 -2.2596 10.6818)\\\" class=\\\"st2\\\" cx=\\\"28.4\\\" cy=\\\"11.6\\\" rx=\\\"8.4\\\" ry=\\\"3.9\\\"></ellipse><path class=\\\"st5\\\" d=\\\"M40,57.1c-4.9,0-8.8-4-8.8-8.8c0-0.5,0.4-1,1-1s1,0.4,1,1c0,3.8,3.1,6.9,6.9,6.9c3.8,0,6.9-3.1,6.9-6.9 c0-0.5,0.4-1,1-1c0.5,0,1,0.4,1,1C48.8,53.2,44.9,57.1,40,57.1z\\\"></path><path class=\\\"st6\\\" d=\\\"M79.5,47.4\\\"></path><path class=\\\"st4\\\" d=\\\"M43.7,42.5c0,0.6-1,1.4-1.9,2c-1.1,0.7-2.5,0.7-3.6,0c-0.9-0.6-1.9-1.4-1.9-2c0-1.2,1.6-2.1,3.7-2.1 S43.7,41.4,43.7,42.5z\\\"></path></g></svg>\""],"sourceRoot":""}