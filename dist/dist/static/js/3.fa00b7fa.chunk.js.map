{"version":3,"sources":["webpack:///./src/snap/svg.js","webpack:///./src/snap/align.js","webpack:///./src/snap/mina.js","webpack:///./src/snap/animation.js","webpack:///./src/snap/attr.js","webpack:///./src/snap/attradd.js","webpack:///./src/snap/class.js","webpack:///./src/snap/element.js","webpack:///./src/snap/equal.js","webpack:///./src/snap/filter.js","webpack:///./src/snap/matrix.js","webpack:///./src/snap/set.js","webpack:///./src/snap/path.js","webpack:///./src/snap/paper.js","webpack:///./src/snap/mouse.js","webpack:///./src/snap/index.js","webpack:///./src/modules/DM000002.js","webpack:///./src/utils/util.js","webpack:///./src/utils/D1Animate.js","webpack:///./src/components/D1drag.js"],"names":["Snap","root","w","h","nodeType","wrap","is","set","apply","Element","glob","doc","querySelector","String","e","Paper","version","toString","this","_","win","window","document","has","Str","toFloat","parseFloat","toInt","parseInt","math","Math","mmax","max","mmin","min","abs","PI","objectToString","Object","prototype","colourRegExp","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","idgen","idprefix","Date","ID","el","type","xlink","xmlns","hub","url","$","attr","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","key","val","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","call","isFinite","Array","isArray","slice","repush","array","item","i","ii","length","push","splice","cacher","f","scope","postprocessor","newf","arg","arguments","args","join","cache","count","shift","rad","deg","id","format","tokenRegex","objNotationRegex","str","obj","replace","all","res","name","quote","quotedName","isFunc","replacer","clone","constructor","sin","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","x","y","len","sqrt","len2","closestPoint","path","distance2","p","dx","dy","best","bestLength","scan","scanDistance","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","value","tolerance","rem","getRGB","colour","indexOf","r","g","b","hex","error","rgbtoString","charAt","toHex","red","green","blue","opacity","t","rgb","match","split","hsb2rgb","hsl2rgb","round","hsb","s","hsl","l","toFixed","color","getElementsByTagName","style","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","B","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","a","c","q","u","z","data","params","concat","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","width","height","scale","add","_unit2px","svg","getSomeSVG","mgr","class","fill","appendChild","getW","getBBox","getH","nam","removeChild","contains","compareDocumentPosition","ownerSVGElement","select","add2group","list","j","forEach","children","childNodes","snap","paper","tagName","nodeName","anims","transform","mask","pattern","symbol","clipPath","method","Fragment","frag","make","parent","desc","defs","proto","ownerDocument","body","dom","contentDocument","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","eve","firstDefined","json","att","parse","createDocumentFragment","full","div","createElement","innerHTML","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","clip","cursor","direction","display","filter","font","kerning","marker","overflow","stroke","visibility","toUpperCase","ajax","postData","callback","req","XMLHttpRequest","pd","hasOwnProperty","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","status","send","load","responseText","getElementByPoint","canvas","target","elementFromPoint","opera","so","elem","box","getBoundingClientRect","docElem","documentElement","clientTop","clientLeft","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getOffset","sr","createSVGRect","hits","getIntersectionList","plugin","firstLetter","getAlign","way","bx","cy","cx","align","mina","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTime","timer","now","sta","ds","dur","spd","speed","get","duration","stopit","update","pause","pdif","resume","frame","start","jj","end","easing","timeStamp","A","anim","linear","stop","time","getById","n","easeout","pow","easein","easeinout","Q","backin","backout","elastic","bounce","allStop","elproto","from","to","Animation","ms","animation","inAnim","_attrs","_callback","curStatus","animate","setter","attrs","eq","fkeys","tkeys","keys","equal","off","clipIt","reURLValue","URL","separator","fillStroke","grad","gradient","deurl","undefined","gradrg","setFontSize","fontSize","getFontSize","string","tokens","stops","map","offset","seed","step","k","toAbsolute","d","txt","className","baseVal","vb","viewBox","rx","ry","tp","textPath","remove","tuned","tuner","chunk","normalize","getter","getElementById","textExtract","chi","textContent","internal","operators","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","asPX","isNaN","bplus","rgNotSpace","addClass","classes","classList","removeClass","removeAllClass","hasClass","toggleClass","flag","pos","clazz","finalValue","curClasses","unit2px","isWithoutTransform","totalMatrix","pt","createSVGPoint","rect","getClientRects","matrixTransform","getCTM","inverse","boundingRect","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","test","papa","global","local","localString","toTransformString","globalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","use","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","refX","refY","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","names","getEmpty","getViewBox","getColour","getPath","Function","path2array","isNumeric","Number","t1","t2","tt1","tt2","maxlength","equaliseTransform","toCubic","arr1","arr2","bUnit","pproto","rgurl","filstr","offsetWidth","offsetHeight","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","matrixproto","norm","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","Set","items","bindings","setproto","pop","thisArg","each","begin","handler","cb","callbacker","bind","aname","unbound","clear","index","insertion","tail","todel","arglen","exclude","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","circle","ellipse","image","line","polyline","polygon","pathToAbsolute","pa0","pa","crz","dots","catmullRom2bezier","l2c","q2c","ax","ay","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","by","qx","qy","attrs2","processPath","pcom","T","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","pathi","preload","onerror","src","img","cssText","onload","preserveAspectRatio","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","points","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","next","supportsTouch","navigator","maxTouchPoints","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","element","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","unbind","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","DM000002","position","testG","center","rows","columns","size","itemG","itemLength","remainNum","addItem","getRandomArrayElement","getPointInMatrixForm","startPoint","gap","shapes","shuffle","imageIndex","imageG","D1drag","dragItem","startCallback","dragStartCallback","moveCallback","dragMoveCallback","endCallback","dragEndCallback","self","pointerEvents","userIndex","dropIndex","getUserDropElementIndex","dropElement","swapItem","answerCheck","answer","answerAnimHandler","moveAnimate","bool","removeIndex","removeItem","downItem","emptyIndex","fillItem","Promise","D1Animate","blink","interval","includes","columnCheckArr","getTransposeArray","get2dimArray","totalIndex","remainIndex","el2","reduce","moveIndex","getNextArrayElement","nextEmptyIndex","sort","second","firstIndex","secondIndex","elements","animates","rowRemoveIndex","rowCheck","columRemoveIndex","columnCheck","totalRemoveIndex","getUniquArray","Boolean","removeTargetIndex","el3","currentType","some","sameNum","userDragItem","targetIndex","shapeBBox","newArray","floor","tempArr","reverse","getPointInScatterForm","area","pointNum","neighborhood","repeat","getRandomNumber","boundingBox","console","wait","delay","resolve","random","getRandomNumberArray","isUnique","randArr","uniqueArr","getSimultaneousEquationConstant","convertToPathStr","_rest","rest","copyArray","isSameArray","calculateAnswer","sign","ans","drawPath","totalLength","pathStr","subPath","moveTo","onPath","startPt","flip","front","sliding","hiddenTime","rolling","directionAngle","multiple","revolutions","dxy","radius","radian","diretion","shake","fadeIn","opacityNum","zoom","draggingItem","originPoint","dragStart","elemenet","origin","snapInvMatrix","dragEnd","setDragState","_randomDuration","randomDuration","spectrumEffect","_interval","clearInterval","reset","moveAnimateWithScale","move","_scale","hidden"],"mappings":"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","file":"static/js/3.fa00b7fa.chunk.js","sourcesContent":["import eve from 'eve';\nvar Snap = (function (root) {\n    Snap.version = '0.5.1';\n    /*\\\n     * Snap\n     [ method ]\n     **\n     * Creates a drawing surface or wraps existing SVG element.\n     **\n     - width (number|string) width of surface\n     - height (number|string) height of surface\n     * or\n     - DOM (SVGElement) element to be wrapped into Snap structure\n     * or\n     - array (array) array of elements (will return set of elements)\n     * or\n     - query (string) CSS query selector\n     = (object) @Element\n    \\*/\n    function Snap(w, h) {\n        if (w) {\n            if (w.nodeType) {\n                return wrap(w);\n            }\n            if (is(w, 'array') && Snap.set) {\n                return Snap.set.apply(Snap, w);\n            }\n            if (w instanceof Element) {\n                return w;\n            }\n            if (h == null) {\n                try {\n                    w = glob.doc.querySelector(String(w));\n                    return wrap(w);\n                } catch (e) {\n                    return null;\n                }\n            }\n        }\n        w = w == null ? '100%' : w;\n        h = h == null ? '100%' : h;\n        return new Paper(w, h);\n    }\n    Snap.toString = function () {\n        return 'Snap v' + this.version;\n    };\n    Snap._ = {};\n    var glob = {\n        win: root.window,\n        doc: root.window.document\n    };\n    Snap._.glob = glob;\n    var has = 'hasOwnProperty',\n        Str = String,\n        toFloat = parseFloat,\n        toInt = parseInt,\n        math = Math,\n        mmax = math.max,\n        mmin = math.min,\n        abs = math.abs,\n        PI = math.PI,\n        E = '',\n        S = ' ',\n        objectToString = Object.prototype.toString,\n        colourRegExp =\n            /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d.]+%?\\s*,\\s*[\\d.]+%?\\s*,\\s*[\\d.]+%?(?:\\s*,\\s*[\\d.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d.]+%?\\s*,\\s*[\\d.]+(?:%?\\s*,\\s*[\\d.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d.]+%?\\s*,\\s*[\\d.]+(?:%?\\s*,\\s*[\\d.]+)?%?)\\s*\\))\\s*$/i,\n        commaSpaces = /[\\s]*,[\\s]*/,\n        hsrg = { hs: 1, rg: 1 },\n        pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/gi,\n        tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/gi,\n        pathValues = /(-?\\d*\\.?\\d*(?:e[-+]?\\d+)?)[\\s]*,?[\\s]*/gi,\n        idgen = 0,\n        idprefix = 'S' + (+new Date()).toString(36),\n        ID = function (el) {\n            return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n        },\n        xlink = 'http://www.w3.org/1999/xlink',\n        xmlns = 'http://www.w3.org/2000/svg',\n        hub = {},\n        /*\\\n         * Snap.url\n         [ method ]\n         **\n         * Wraps path into `\"url('<path>')\"`.\n         - value (string) path\n         = (string) wrapped path\n        \\*/\n        URL = (Snap.url = function (url) {\n            return \"url('#\" + url + \"')\";\n        });\n\n    function $(el, attr) {\n        if (attr) {\n            if (el == '#text') {\n                el = glob.doc.createTextNode(attr.text || attr['#text'] || '');\n            }\n            if (el == '#comment') {\n                el = glob.doc.createComment(attr.text || attr['#text'] || '');\n            }\n            if (typeof el == 'string') {\n                el = $(el);\n            }\n            if (typeof attr == 'string') {\n                if (el.nodeType == 1) {\n                    if (attr.substring(0, 6) == 'xlink:') {\n                        return el.getAttributeNS(xlink, attr.substring(6));\n                    }\n                    if (attr.substring(0, 4) == 'xml:') {\n                        return el.getAttributeNS(xmlns, attr.substring(4));\n                    }\n                    return el.getAttribute(attr);\n                } else if (attr == 'text') {\n                    return el.nodeValue;\n                } else {\n                    return null;\n                }\n            }\n            if (el.nodeType == 1) {\n                for (var key in attr)\n                    if (attr[has](key)) {\n                        var val = Str(attr[key]);\n                        if (val) {\n                            if (key.substring(0, 6) == 'xlink:') {\n                                el.setAttributeNS(xlink, key.substring(6), val);\n                            } else if (key.substring(0, 4) == 'xml:') {\n                                el.setAttributeNS(xmlns, key.substring(4), val);\n                            } else {\n                                el.setAttribute(key, val);\n                            }\n                        } else {\n                            el.removeAttribute(key);\n                        }\n                    }\n            } else if ('text' in attr) {\n                el.nodeValue = attr.text;\n            }\n        } else {\n            el = glob.doc.createElementNS(xmlns, el);\n        }\n        return el;\n    }\n    Snap._.$ = $;\n    Snap._.id = ID;\n    function getAttrs(el) {\n        var attrs = el.attributes,\n            name,\n            out = {};\n        for (var i = 0; i < attrs.length; i++) {\n            if (attrs[i].namespaceURI == xlink) {\n                name = 'xlink:';\n            } else {\n                name = '';\n            }\n            name += attrs[i].name;\n            out[name] = attrs[i].textContent;\n        }\n        return out;\n    }\n    function is(o, type) {\n        type = Str.prototype.toLowerCase.call(type);\n        if (type == 'finite') {\n            return isFinite(o);\n        }\n        if (type == 'array' && (o instanceof Array || (Array.isArray && Array.isArray(o)))) {\n            return true;\n        }\n        return (\n            (type == 'null' && o === null) ||\n            (type == typeof o && o !== null) ||\n            (type == 'object' && o === Object(o)) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type\n        );\n    }\n    /*\\\n     * Snap.format\n     [ method ]\n     **\n     * Replaces construction of type `{<name>}` to the corresponding argument\n     **\n     - token (string) string to format\n     - json (object) object which properties are used as a replacement\n     = (string) formatted string\n     > Usage\n     | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n     | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n     |     x: 10,\n     |     y: 20,\n     |     dim: {\n     |         width: 40,\n     |         height: 50,\n     |         \"negative width\": -40\n     |     }\n     | }));\n    \\*/\n    Snap.format = (function () {\n        var tokenRegex = /\\{([^}]+)\\}/g,\n            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n            replacer = function (all, key, obj) {\n                var res = obj;\n                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                    name = name || quotedName;\n                    if (res) {\n                        if (name in res) {\n                            res = res[name];\n                        }\n                        typeof res == 'function' && isFunc && (res = res());\n                    }\n                });\n                res = (res == null || res == obj ? all : res) + '';\n                return res;\n            };\n        return function (str, obj) {\n            return Str(str).replace(tokenRegex, function (all, key) {\n                return replacer(all, key, obj);\n            });\n        };\n    })();\n    function clone(obj) {\n        if (typeof obj == 'function' || Object(obj) !== obj) {\n            return obj;\n        }\n        var res = new obj.constructor();\n        for (var key in obj)\n            if (obj[has](key)) {\n                res[key] = clone(obj[key]);\n            }\n        return res;\n    }\n    Snap._.clone = clone;\n    function repush(array, item) {\n        for (var i = 0, ii = array.length; i < ii; i++)\n            if (array[i] === item) {\n                return array.push(array.splice(i, 1)[0]);\n            }\n    }\n    function cacher(f, scope, postprocessor) {\n        function newf() {\n            var arg = Array.prototype.slice.call(arguments, 0),\n                args = arg.join('\\u2400'),\n                cache = (newf.cache = newf.cache || {}),\n                count = (newf.count = newf.count || []);\n            if (cache[has](args)) {\n                repush(count, args);\n                return postprocessor ? postprocessor(cache[args]) : cache[args];\n            }\n            count.length >= 1e3 && delete cache[count.shift()];\n            count.push(args);\n            cache[args] = f.apply(scope, arg);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        return newf;\n    }\n    Snap._.cacher = cacher;\n    function angle(x1, y1, x2, y2, x3, y3) {\n        if (x3 == null) {\n            var x = x1 - x2,\n                y = y1 - y2;\n            if (!x && !y) {\n                return 0;\n            }\n            return (180 + (math.atan2(-y, -x) * 180) / PI + 360) % 360;\n        } else {\n            return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n        }\n    }\n    function rad(deg) {\n        return ((deg % 360) * PI) / 180;\n    }\n    function deg(rad) {\n        return ((rad * 180) / PI) % 360;\n    }\n    function x_y() {\n        return this.x + S + this.y;\n    }\n    function x_y_w_h() {\n        return this.x + S + this.y + S + this.width + ' \\xd7 ' + this.height;\n    }\n\n    /*\\\n     * Snap.rad\n     [ method ]\n     **\n     * Transform angle to radians\n     - deg (number) angle in degrees\n     = (number) angle in radians\n    \\*/\n    Snap.rad = rad;\n    /*\\\n     * Snap.deg\n     [ method ]\n     **\n     * Transform angle to degrees\n     - rad (number) angle in radians\n     = (number) angle in degrees\n    \\*/\n    Snap.deg = deg;\n    /*\\\n     * Snap.sin\n     [ method ]\n     **\n     * Equivalent to `Math.sin()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) sin\n    \\*/\n    Snap.sin = function (angle) {\n        return math.sin(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.tan\n     [ method ]\n     **\n     * Equivalent to `Math.tan()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) tan\n    \\*/\n    Snap.tan = function (angle) {\n        return math.tan(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.cos\n     [ method ]\n     **\n     * Equivalent to `Math.cos()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) cos\n    \\*/\n    Snap.cos = function (angle) {\n        return math.cos(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.asin\n     [ method ]\n     **\n     * Equivalent to `Math.asin()` only works with degrees, not radians.\n     - num (number) value\n     = (number) asin in degrees\n    \\*/\n    Snap.asin = function (num) {\n        return Snap.deg(math.asin(num));\n    };\n    /*\\\n     * Snap.acos\n     [ method ]\n     **\n     * Equivalent to `Math.acos()` only works with degrees, not radians.\n     - num (number) value\n     = (number) acos in degrees\n    \\*/\n    Snap.acos = function (num) {\n        return Snap.deg(math.acos(num));\n    };\n    /*\\\n     * Snap.atan\n     [ method ]\n     **\n     * Equivalent to `Math.atan()` only works with degrees, not radians.\n     - num (number) value\n     = (number) atan in degrees\n    \\*/\n    Snap.atan = function (num) {\n        return Snap.deg(math.atan(num));\n    };\n    /*\\\n     * Snap.atan2\n     [ method ]\n     **\n     * Equivalent to `Math.atan2()` only works with degrees, not radians.\n     - num (number) value\n     = (number) atan2 in degrees\n    \\*/\n    Snap.atan2 = function (num) {\n        return Snap.deg(math.atan2(num));\n    };\n    /*\\\n     * Snap.angle\n     [ method ]\n     **\n     * Returns an angle between two or three points\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     - x3 (number) #optional x coord of third point\n     - y3 (number) #optional y coord of third point\n     = (number) angle in degrees\n    \\*/\n    Snap.angle = angle;\n    /*\\\n     * Snap.len\n     [ method ]\n     **\n     * Returns distance between two points\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     = (number) distance\n    \\*/\n    Snap.len = function (x1, y1, x2, y2) {\n        return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n    };\n    /*\\\n     * Snap.len2\n     [ method ]\n     **\n     * Returns squared distance between two points\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     = (number) distance\n    \\*/\n    Snap.len2 = function (x1, y1, x2, y2) {\n        return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    };\n    /*\\\n     * Snap.closestPoint\n     [ method ]\n     **\n     * Returns closest point to a given one on a given path.\n     - path (Element) path element\n     - x (number) x coord of a point\n     - y (number) y coord of a point\n     = (object) in format\n     {\n        x (number) x coord of the point on the path\n        y (number) y coord of the point on the path\n        length (number) length of the path to the point\n        distance (number) distance from the given point to the path\n     }\n    \\*/\n    // Copied from http://bl.ocks.org/mbostock/8027637\n    Snap.closestPoint = function (path, x, y) {\n        function distance2(p) {\n            var dx = p.x - x,\n                dy = p.y - y;\n            return dx * dx + dy * dy;\n        }\n        var pathNode = path.node,\n            pathLength = pathNode.getTotalLength(),\n            precision = (pathLength / pathNode.pathSegList.numberOfItems) * 0.125,\n            best,\n            bestLength,\n            bestDistance = Infinity;\n\n        // linear scan for coarse approximation\n        for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n            if ((scanDistance = distance2((scan = pathNode.getPointAtLength(scanLength)))) < bestDistance) {\n                best = scan;\n                bestLength = scanLength;\n                bestDistance = scanDistance;\n            }\n        }\n\n        // binary search for precise estimate\n        precision *= 0.5;\n        while (precision > 0.5) {\n            var before, after, beforeLength, afterLength, beforeDistance, afterDistance;\n            if (\n                (beforeLength = bestLength - precision) >= 0 &&\n                (beforeDistance = distance2((before = pathNode.getPointAtLength(beforeLength)))) < bestDistance\n            ) {\n                best = before;\n                bestLength = beforeLength;\n                bestDistance = beforeDistance;\n            } else if (\n                (afterLength = bestLength + precision) <= pathLength &&\n                (afterDistance = distance2((after = pathNode.getPointAtLength(afterLength)))) < bestDistance\n            ) {\n                best = after;\n                bestLength = afterLength;\n                bestDistance = afterDistance;\n            } else {\n                precision *= 0.5;\n            }\n        }\n\n        best = {\n            x: best.x,\n            y: best.y,\n            length: bestLength,\n            distance: Math.sqrt(bestDistance)\n        };\n        return best;\n    };\n    /*\\\n     * Snap.is\n     [ method ]\n     **\n     * Handy replacement for the `typeof` operator\n     - o (…) any object or primitive\n     - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n     = (boolean) `true` if given value is of given type\n    \\*/\n    Snap.is = is;\n    /*\\\n     * Snap.snapTo\n     [ method ]\n     **\n     * Snaps given value to given grid\n     - values (array|number) given array of values or step of the grid\n     - value (number) value to adjust\n     - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n     = (number) adjusted value\n    \\*/\n    Snap.snapTo = function (values, value, tolerance) {\n        tolerance = is(tolerance, 'finite') ? tolerance : 10;\n        if (is(values, 'array')) {\n            var i = values.length;\n            while (i--)\n                if (abs(values[i] - value) <= tolerance) {\n                    return values[i];\n                }\n        } else {\n            values = +values;\n            var rem = value % values;\n            if (rem < tolerance) {\n                return value - rem;\n            }\n            if (rem > values - tolerance) {\n                return value - rem + values;\n            }\n        }\n        return value;\n    };\n    // Colour\n    /*\\\n     * Snap.getRGB\n     [ method ]\n     **\n     * Parses color string as RGB object\n     - color (string) color string in one of the following formats:\n     # <ul>\n     #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n     #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n     #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n     #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n     #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n     #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n     #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n     #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n     # </ul>\n     * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) true if string can't be parsed\n     o }\n    \\*/\n    Snap.getRGB = cacher(function (colour) {\n        if (!colour || !!((colour = Str(colour)).indexOf('-') + 1)) {\n            return { r: -1, g: -1, b: -1, hex: 'none', error: 1, toString: rgbtoString };\n        }\n        if (colour == 'none') {\n            return { r: -1, g: -1, b: -1, hex: 'none', toString: rgbtoString };\n        }\n        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == '#') && (colour = toHex(colour));\n        if (!colour) {\n            return { r: -1, g: -1, b: -1, hex: 'none', error: 1, toString: rgbtoString };\n        }\n        var res,\n            red,\n            green,\n            blue,\n            opacity,\n            t,\n            values,\n            rgb = colour.match(colourRegExp);\n        if (rgb) {\n            if (rgb[2]) {\n                blue = toInt(rgb[2].substring(5), 16);\n                green = toInt(rgb[2].substring(3, 5), 16);\n                red = toInt(rgb[2].substring(1, 3), 16);\n            }\n            if (rgb[3]) {\n                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n                green = toInt((t = rgb[3].charAt(2)) + t, 16);\n                red = toInt((t = rgb[3].charAt(1)) + t, 16);\n            }\n            if (rgb[4]) {\n                values = rgb[4].split(commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == '%' && (red *= 2.55);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == '%' && (green *= 2.55);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == '%' && (blue *= 2.55);\n                rgb[1].toLowerCase().slice(0, 4) == 'rgba' && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == '%' && (opacity /= 100);\n            }\n            if (rgb[5]) {\n                values = rgb[5].split(commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == '%' && (red /= 100);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == '%' && (green /= 100);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == '%' && (blue /= 100);\n                (values[0].slice(-3) == 'deg' || values[0].slice(-1) == '\\xb0') && (red /= 360);\n                rgb[1].toLowerCase().slice(0, 4) == 'hsba' && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == '%' && (opacity /= 100);\n                return Snap.hsb2rgb(red, green, blue, opacity);\n            }\n            if (rgb[6]) {\n                values = rgb[6].split(commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == '%' && (red /= 100);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == '%' && (green /= 100);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == '%' && (blue /= 100);\n                (values[0].slice(-3) == 'deg' || values[0].slice(-1) == '\\xb0') && (red /= 360);\n                rgb[1].toLowerCase().slice(0, 4) == 'hsla' && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == '%' && (opacity /= 100);\n                return Snap.hsl2rgb(red, green, blue, opacity);\n            }\n            red = mmin(math.round(red), 255);\n            green = mmin(math.round(green), 255);\n            blue = mmin(math.round(blue), 255);\n            opacity = mmin(mmax(opacity, 0), 1);\n            rgb = { r: red, g: green, b: blue, toString: rgbtoString };\n            rgb.hex = '#' + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n            rgb.opacity = is(opacity, 'finite') ? opacity : 1;\n            return rgb;\n        }\n        return { r: -1, g: -1, b: -1, hex: 'none', error: 1, toString: rgbtoString };\n    }, Snap);\n    /*\\\n     * Snap.hsb\n     [ method ]\n     **\n     * Converts HSB values to a hex representation of the color\n     - h (number) hue\n     - s (number) saturation\n     - b (number) value or brightness\n     = (string) hex representation of the color\n    \\*/\n    Snap.hsb = cacher(function (h, s, b) {\n        return Snap.hsb2rgb(h, s, b).hex;\n    });\n    /*\\\n     * Snap.hsl\n     [ method ]\n     **\n     * Converts HSL values to a hex representation of the color\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (string) hex representation of the color\n    \\*/\n    Snap.hsl = cacher(function (h, s, l) {\n        return Snap.hsl2rgb(h, s, l).hex;\n    });\n    /*\\\n     * Snap.rgb\n     [ method ]\n     **\n     * Converts RGB values to a hex representation of the color\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (string) hex representation of the color\n    \\*/\n    Snap.rgb = cacher(function (r, g, b, o) {\n        if (is(o, 'finite')) {\n            var round = math.round;\n            return 'rgba(' + [round(r), round(g), round(b), +o.toFixed(2)] + ')';\n        }\n        return '#' + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n    });\n    var toHex = function (color) {\n            var i = glob.doc.getElementsByTagName('head')[0] || glob.doc.getElementsByTagName('svg')[0],\n                red = 'rgb(255, 0, 0)';\n            toHex = cacher(function (color) {\n                if (color.toLowerCase() == 'red') {\n                    return red;\n                }\n                i.style.color = red;\n                i.style.color = color;\n                var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue('color');\n                return out == red ? null : out;\n            });\n            return toHex(color);\n        },\n        hsbtoString = function () {\n            return 'hsb(' + [this.h, this.s, this.b] + ')';\n        },\n        hsltoString = function () {\n            return 'hsl(' + [this.h, this.s, this.l] + ')';\n        },\n        rgbtoString = function () {\n            return this.opacity == 1 || this.opacity == null\n                ? this.hex\n                : 'rgba(' + [this.r, this.g, this.b, this.opacity] + ')';\n        },\n        prepareRGB = function (r, g, b) {\n            if (g == null && is(r, 'object') && 'r' in r && 'g' in r && 'b' in r) {\n                b = r.b;\n                g = r.g;\n                r = r.r;\n            }\n            if (g == null && is(r, 'string')) {\n                var clr = Snap.getRGB(r);\n                r = clr.r;\n                g = clr.g;\n                b = clr.b;\n            }\n            if (r > 1 || g > 1 || b > 1) {\n                r /= 255;\n                g /= 255;\n                b /= 255;\n            }\n\n            return [r, g, b];\n        },\n        packageRGB = function (r, g, b, o) {\n            r = math.round(r * 255);\n            g = math.round(g * 255);\n            b = math.round(b * 255);\n            var rgb = {\n                r: r,\n                g: g,\n                b: b,\n                opacity: is(o, 'finite') ? o : 1,\n                hex: Snap.rgb(r, g, b),\n                toString: rgbtoString\n            };\n            is(o, 'finite') && (rgb.opacity = o);\n            return rgb;\n        };\n    /*\\\n     * Snap.color\n     [ method ]\n     **\n     * Parses the color string and returns an object featuring the color's component values\n     - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n     = (object) Combined RGB/HSB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) `true` if string can't be parsed,\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     v (number) value (brightness),\n     o     l (number) lightness\n     o }\n    \\*/\n    Snap.color = function (clr) {\n        var rgb;\n        if (is(clr, 'object') && 'h' in clr && 's' in clr && 'b' in clr) {\n            rgb = Snap.hsb2rgb(clr);\n            clr.r = rgb.r;\n            clr.g = rgb.g;\n            clr.b = rgb.b;\n            clr.opacity = 1;\n            clr.hex = rgb.hex;\n        } else if (is(clr, 'object') && 'h' in clr && 's' in clr && 'l' in clr) {\n            rgb = Snap.hsl2rgb(clr);\n            clr.r = rgb.r;\n            clr.g = rgb.g;\n            clr.b = rgb.b;\n            clr.opacity = 1;\n            clr.hex = rgb.hex;\n        } else {\n            if (is(clr, 'string')) {\n                clr = Snap.getRGB(clr);\n            }\n            if (is(clr, 'object') && 'r' in clr && 'g' in clr && 'b' in clr && !('error' in clr)) {\n                rgb = Snap.rgb2hsl(clr);\n                clr.h = rgb.h;\n                clr.s = rgb.s;\n                clr.l = rgb.l;\n                rgb = Snap.rgb2hsb(clr);\n                clr.v = rgb.b;\n            } else {\n                clr = { hex: 'none' };\n                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n                clr.error = 1;\n            }\n        }\n        clr.toString = rgbtoString;\n        return clr;\n    };\n    /*\\\n     * Snap.hsb2rgb\n     [ method ]\n     **\n     * Converts HSB values to an RGB object\n     - h (number) hue\n     - s (number) saturation\n     - v (number) value or brightness\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n    Snap.hsb2rgb = function (h, s, v, o) {\n        if (is(h, 'object') && 'h' in h && 's' in h && 'b' in h) {\n            v = h.b;\n            s = h.s;\n            o = h.o;\n            h = h.h;\n        }\n        h *= 360;\n        var R, G, B, X, C;\n        h = (h % 360) / 60;\n        C = v * s;\n        X = C * (1 - abs((h % 2) - 1));\n        R = G = B = v - C;\n\n        h = ~~h;\n        R += [C, X, 0, 0, X, C][h];\n        G += [X, C, C, X, 0, 0][h];\n        B += [0, 0, X, C, C, X][h];\n        return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Snap.hsl2rgb\n     [ method ]\n     **\n     * Converts HSL values to an RGB object\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n    Snap.hsl2rgb = function (h, s, l, o) {\n        if (is(h, 'object') && 'h' in h && 's' in h && 'l' in h) {\n            l = h.l;\n            s = h.s;\n            h = h.h;\n        }\n        if (h > 1 || s > 1 || l > 1) {\n            h /= 360;\n            s /= 100;\n            l /= 100;\n        }\n        h *= 360;\n        var R, G, B, X, C;\n        h = (h % 360) / 60;\n        C = 2 * s * (l < 0.5 ? l : 1 - l);\n        X = C * (1 - abs((h % 2) - 1));\n        R = G = B = l - C / 2;\n\n        h = ~~h;\n        R += [C, X, 0, 0, X, C][h];\n        G += [X, C, C, X, 0, 0][h];\n        B += [0, 0, X, C, C, X][h];\n        return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Snap.rgb2hsb\n     [ method ]\n     **\n     * Converts RGB values to an HSB object\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSB object in the following format:\n     o {\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     b (number) brightness\n     o }\n    \\*/\n    Snap.rgb2hsb = function (r, g, b) {\n        b = prepareRGB(r, g, b);\n        r = b[0];\n        g = b[1];\n        b = b[2];\n\n        var H, S, V, C;\n        V = mmax(r, g, b);\n        C = V - mmin(r, g, b);\n        H = C == 0 ? null : V == r ? (g - b) / C : V == g ? (b - r) / C + 2 : (r - g) / C + 4;\n        H = (((H + 360) % 6) * 60) / 360;\n        S = C == 0 ? 0 : C / V;\n        return { h: H, s: S, b: V, toString: hsbtoString };\n    };\n    /*\\\n     * Snap.rgb2hsl\n     [ method ]\n     **\n     * Converts RGB values to an HSL object\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSL object in the following format:\n     o {\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     l (number) luminosity\n     o }\n    \\*/\n    Snap.rgb2hsl = function (r, g, b) {\n        b = prepareRGB(r, g, b);\n        r = b[0];\n        g = b[1];\n        b = b[2];\n\n        var H, S, L, M, m, C;\n        M = mmax(r, g, b);\n        m = mmin(r, g, b);\n        C = M - m;\n        H = C == 0 ? null : M == r ? (g - b) / C : M == g ? (b - r) / C + 2 : (r - g) / C + 4;\n        H = (((H + 360) % 6) * 60) / 360;\n        L = (M + m) / 2;\n        S = C == 0 ? 0 : L < 0.5 ? C / (2 * L) : C / (2 - 2 * L);\n        return { h: H, s: S, l: L, toString: hsltoString };\n    };\n\n    // Transformations\n    /*\\\n     * Snap.parsePathString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given path string into an array of arrays of path segments\n     - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n     = (array) array of segments\n    \\*/\n    Snap.parsePathString = function (pathString) {\n        if (!pathString) {\n            return null;\n        }\n        var pth = Snap.path(pathString);\n        if (pth.arr) {\n            return Snap.path.clone(pth.arr);\n        }\n\n        var paramCounts = { a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0 },\n            data = [];\n        if (is(pathString, 'array') && is(pathString[0], 'array')) {\n            // rough assumption\n            data = Snap.path.clone(pathString);\n        }\n        if (!data.length) {\n            Str(pathString).replace(pathCommand, function (a, b, c) {\n                var params = [],\n                    name = b.toLowerCase();\n                c.replace(pathValues, function (a, b) {\n                    b && params.push(+b);\n                });\n                if (name == 'm' && params.length > 2) {\n                    data.push([b].concat(params.splice(0, 2)));\n                    name = 'l';\n                    b = b == 'm' ? 'l' : 'L';\n                }\n                if (name == 'o' && params.length == 1) {\n                    data.push([b, params[0]]);\n                }\n                if (name == 'r') {\n                    data.push([b].concat(params));\n                } else\n                    while (params.length >= paramCounts[name]) {\n                        data.push([b].concat(params.splice(0, paramCounts[name])));\n                        if (!paramCounts[name]) {\n                            break;\n                        }\n                    }\n            });\n        }\n        data.toString = Snap.path.toString;\n        pth.arr = Snap.path.clone(data);\n        return data;\n    };\n    /*\\\n     * Snap.parseTransformString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given transform string into an array of transformations\n     - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n     = (array) array of transformations\n    \\*/\n    var parseTransformString = (Snap.parseTransformString = function (TString) {\n        if (!TString) {\n            return null;\n        }\n        var paramCounts = { r: 3, s: 4, t: 2, m: 6 },\n            data = [];\n        if (is(TString, 'array') && is(TString[0], 'array')) {\n            // rough assumption\n            data = Snap.path.clone(TString);\n        }\n        if (!data.length) {\n            Str(TString).replace(tCommand, function (a, b, c) {\n                var params = [],\n                    name = b.toLowerCase();\n                c.replace(pathValues, function (a, b) {\n                    b && params.push(+b);\n                });\n                data.push([b].concat(params));\n            });\n        }\n        data.toString = Snap.path.toString;\n        return data;\n    });\n    function svgTransform2string(tstr) {\n        var res = [];\n        tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n            params = params.split(/\\s*,\\s*|\\s+/);\n            if (name == 'rotate' && params.length == 1) {\n                params.push(0, 0);\n            }\n            if (name == 'scale') {\n                if (params.length > 2) {\n                    params = params.slice(0, 2);\n                } else if (params.length == 2) {\n                    params.push(0, 0);\n                }\n                if (params.length == 1) {\n                    params.push(params[0], 0, 0);\n                }\n            }\n            if (name == 'skewX') {\n                res.push(['m', 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n            } else if (name == 'skewY') {\n                res.push(['m', 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n            } else {\n                res.push([name.charAt(0)].concat(params));\n            }\n            return all;\n        });\n        return res;\n    }\n    Snap._.svgTransform2string = svgTransform2string;\n    Snap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\n    function transform2matrix(tstr, bbox) {\n        var tdata = parseTransformString(tstr),\n            m = new Snap.Matrix();\n        if (tdata) {\n            for (var i = 0, ii = tdata.length; i < ii; i++) {\n                var t = tdata[i],\n                    tlen = t.length,\n                    command = Str(t[0]).toLowerCase(),\n                    absolute = t[0] != command,\n                    inver = absolute ? m.invert() : 0,\n                    x1,\n                    y1,\n                    x2,\n                    y2,\n                    bb;\n                if (command == 't' && tlen == 2) {\n                    m.translate(t[1], 0);\n                } else if (command == 't' && tlen == 3) {\n                    if (absolute) {\n                        x1 = inver.x(0, 0);\n                        y1 = inver.y(0, 0);\n                        x2 = inver.x(t[1], t[2]);\n                        y2 = inver.y(t[1], t[2]);\n                        m.translate(x2 - x1, y2 - y1);\n                    } else {\n                        m.translate(t[1], t[2]);\n                    }\n                } else if (command == 'r') {\n                    if (tlen == 2) {\n                        bb = bb || bbox;\n                        m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                    } else if (tlen == 4) {\n                        if (absolute) {\n                            x2 = inver.x(t[2], t[3]);\n                            y2 = inver.y(t[2], t[3]);\n                            m.rotate(t[1], x2, y2);\n                        } else {\n                            m.rotate(t[1], t[2], t[3]);\n                        }\n                    }\n                } else if (command == 's') {\n                    if (tlen == 2 || tlen == 3) {\n                        bb = bb || bbox;\n                        m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                    } else if (tlen == 4) {\n                        if (absolute) {\n                            x2 = inver.x(t[2], t[3]);\n                            y2 = inver.y(t[2], t[3]);\n                            m.scale(t[1], t[1], x2, y2);\n                        } else {\n                            m.scale(t[1], t[1], t[2], t[3]);\n                        }\n                    } else if (tlen == 5) {\n                        if (absolute) {\n                            x2 = inver.x(t[3], t[4]);\n                            y2 = inver.y(t[3], t[4]);\n                            m.scale(t[1], t[2], x2, y2);\n                        } else {\n                            m.scale(t[1], t[2], t[3], t[4]);\n                        }\n                    }\n                } else if (command == 'm' && tlen == 7) {\n                    m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n                }\n            }\n        }\n        return m;\n    }\n    Snap._.transform2matrix = transform2matrix;\n    Snap._unit2px = unit2px;\n    var contains =\n        glob.doc.contains || glob.doc.compareDocumentPosition\n            ? function (a, b) {\n                  var adown = a.nodeType == 9 ? a.documentElement : a,\n                      bup = b && b.parentNode;\n                  return (\n                      a == bup ||\n                      !!(\n                          bup &&\n                          bup.nodeType == 1 &&\n                          (adown.contains\n                              ? adown.contains(bup)\n                              : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16)\n                      )\n                  );\n              }\n            : function (a, b) {\n                  if (b) {\n                      while (b) {\n                          b = b.parentNode;\n                          if (b == a) {\n                              return true;\n                          }\n                      }\n                  }\n                  return false;\n              };\n    function getSomeDefs(el) {\n        var p =\n                (el.node.ownerSVGElement && wrap(el.node.ownerSVGElement)) ||\n                (el.node.parentNode && wrap(el.node.parentNode)) ||\n                Snap.select('svg') ||\n                Snap(0, 0),\n            pdefs = p.select('defs'),\n            defs = pdefs == null ? false : pdefs.node;\n        if (!defs) {\n            defs = make('defs', p.node).node;\n        }\n        return defs;\n    }\n    function getSomeSVG(el) {\n        return (el.node.ownerSVGElement && wrap(el.node.ownerSVGElement)) || Snap.select('svg');\n    }\n    Snap._.getSomeDefs = getSomeDefs;\n    Snap._.getSomeSVG = getSomeSVG;\n    function unit2px(el, name, value) {\n        var svg = getSomeSVG(el).node,\n            out = {},\n            mgr = svg.querySelector('.svg---mgr');\n        if (!mgr) {\n            mgr = $('rect');\n            $(mgr, { x: -9e9, y: -9e9, width: 10, height: 10, class: 'svg---mgr', fill: 'none' });\n            svg.appendChild(mgr);\n        }\n        function getW(val) {\n            if (val == null) {\n                return E;\n            }\n            if (val == +val) {\n                return val;\n            }\n            $(mgr, { width: val });\n            try {\n                return mgr.getBBox().width;\n            } catch (e) {\n                return 0;\n            }\n        }\n        function getH(val) {\n            if (val == null) {\n                return E;\n            }\n            if (val == +val) {\n                return val;\n            }\n            $(mgr, { height: val });\n            try {\n                return mgr.getBBox().height;\n            } catch (e) {\n                return 0;\n            }\n        }\n        function set(nam, f) {\n            if (name == null) {\n                out[nam] = f(el.attr(nam) || 0);\n            } else if (nam == name) {\n                out = f(value == null ? el.attr(nam) || 0 : value);\n            }\n        }\n        switch (el.type) {\n            case 'rect':\n                set('rx', getW);\n                set('ry', getH);\n            case 'image':\n                set('width', getW);\n                set('height', getH);\n            case 'text':\n                set('x', getW);\n                set('y', getH);\n                break;\n            case 'circle':\n                set('cx', getW);\n                set('cy', getH);\n                set('r', getW);\n                break;\n            case 'ellipse':\n                set('cx', getW);\n                set('cy', getH);\n                set('rx', getW);\n                set('ry', getH);\n                break;\n            case 'line':\n                set('x1', getW);\n                set('x2', getW);\n                set('y1', getH);\n                set('y2', getH);\n                break;\n            case 'marker':\n                set('refX', getW);\n                set('markerWidth', getW);\n                set('refY', getH);\n                set('markerHeight', getH);\n                break;\n            case 'radialGradient':\n                set('fx', getW);\n                set('fy', getH);\n                break;\n            case 'tspan':\n                set('dx', getW);\n                set('dy', getH);\n                break;\n            default:\n                set(name, getW);\n        }\n        svg.removeChild(mgr);\n        return out;\n    }\n    /*\\\n     * Snap.select\n     [ method ]\n     **\n     * Wraps a DOM element specified by CSS selector as @Element\n     - query (string) CSS selector of the element\n     = (Element) the current element\n    \\*/\n    Snap.select = function (query) {\n        query = Str(query).replace(/([^\\\\]):/g, '$1\\\\:');\n        return wrap(glob.doc.querySelector(query));\n    };\n    /*\\\n     * Snap.selectAll\n     [ method ]\n     **\n     * Wraps DOM elements specified by CSS selector as set or array of @Element\n     - query (string) CSS selector of the element\n     = (Element) the current element\n    \\*/\n    Snap.selectAll = function (query) {\n        var nodelist = glob.doc.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n\n    function add2group(list) {\n        if (!is(list, 'array')) {\n            list = Array.prototype.slice.call(arguments, 0);\n        }\n        var i = 0,\n            j = 0,\n            node = this.node;\n        while (this[i]) delete this[i++];\n        for (i = 0; i < list.length; i++) {\n            if (list[i].type == 'set') {\n                list[i].forEach(function (el) {\n                    node.appendChild(el.node);\n                });\n            } else {\n                node.appendChild(list[i].node);\n            }\n        }\n        var children = node.childNodes;\n        for (i = 0; i < children.length; i++) {\n            this[j++] = wrap(children[i]);\n        }\n        return this;\n    }\n    // Hub garbage collector every 10s\n    setInterval(function () {\n        for (var key in hub)\n            if (hub[has](key)) {\n                var el = hub[key],\n                    node = el.node;\n                if (\n                    (el.type != 'svg' && !node.ownerSVGElement) ||\n                    (el.type == 'svg' &&\n                        (!node.parentNode || ('ownerSVGElement' in node.parentNode && !node.ownerSVGElement)))\n                ) {\n                    delete hub[key];\n                }\n            }\n    }, 1e4);\n    function Element(el) {\n        if (el.snap in hub) {\n            return hub[el.snap];\n        }\n        var svg;\n        try {\n            svg = el.ownerSVGElement;\n        } catch (e) {}\n        /*\\\n         * Element.node\n         [ property (object) ]\n         **\n         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n         > Usage\n         | // draw a circle at coordinate 10,10 with radius of 10\n         | var c = paper.circle(10, 10, 10);\n         | c.node.onclick = function () {\n         |     c.attr(\"fill\", \"red\");\n         | };\n        \\*/\n        this.node = el;\n        if (svg) {\n            this.paper = new Paper(svg);\n        }\n        /*\\\n         * Element.type\n         [ property (string) ]\n         **\n         * SVG tag name of the given element.\n        \\*/\n        this.type = el.tagName || el.nodeName;\n        var id = (this.id = ID(this));\n        this.anims = {};\n        this._ = {\n            transform: []\n        };\n        el.snap = id;\n        hub[id] = this;\n        if (this.type == 'g') {\n            this.add = add2group;\n        }\n        if (this.type in { g: 1, mask: 1, pattern: 1, symbol: 1, clipPath: 1 }) {\n            for (var method in Paper.prototype)\n                if (Paper.prototype[has](method)) {\n                    this[method] = Paper.prototype[method];\n                }\n        }\n    }\n    /*\\\n         * Element.attr\n         [ method ]\n         **\n         * Gets or sets given attributes of the element.\n         **\n         - params (object) contains key-value pairs of attributes you want to set\n         * or\n         - param (string) name of the attribute\n         = (Element) the current element\n         * or\n         = (string) value of attribute\n         > Usage\n         | el.attr({\n         |     fill: \"#fc0\",\n         |     stroke: \"#000\",\n         |     strokeWidth: 2, // CamelCase...\n         |     \"fill-opacity\": 0.5, // or dash-separated names\n         |     width: \"*=2\" // prefixed values\n         | });\n         | console.log(el.attr(\"fill\")); // #fc0\n         * Prefixed values in format `\"+=10\"` supported. All four operations\n         * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n         * and `-`: `\"+=2em\"`.\n        \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, 'string')) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve('snap.util.getattr.' + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve('snap.util.attr.' + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n    /*\\\n     * Snap.parse\n     [ method ]\n     **\n     * Parses SVG fragment and converts it into a @Fragment\n     **\n     - svg (string) SVG string\n     = (Fragment) the @Fragment\n    \\*/\n    Snap.parse = function (svg) {\n        var f = glob.doc.createDocumentFragment(),\n            full = true,\n            div = glob.doc.createElement('div');\n        svg = Str(svg);\n        if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n            svg = '<svg>' + svg + '</svg>';\n            full = false;\n        }\n        div.innerHTML = svg;\n        svg = div.getElementsByTagName('svg')[0];\n        if (svg) {\n            if (full) {\n                f = svg;\n            } else {\n                while (svg.firstChild) {\n                    f.appendChild(svg.firstChild);\n                }\n            }\n        }\n        return new Fragment(f);\n    };\n    function Fragment(frag) {\n        this.node = frag;\n    }\n    /*\\\n     * Snap.fragment\n     [ method ]\n     **\n     * Creates a DOM fragment from a given list of elements or strings\n     **\n     - varargs (…) SVG string\n     = (Fragment) the @Fragment\n    \\*/\n    Snap.fragment = function () {\n        var args = Array.prototype.slice.call(arguments, 0),\n            f = glob.doc.createDocumentFragment();\n        for (var i = 0, ii = args.length; i < ii; i++) {\n            var item = args[i];\n            if (item.node && item.node.nodeType) {\n                f.appendChild(item.node);\n            }\n            if (item.nodeType) {\n                f.appendChild(item);\n            }\n            if (typeof item == 'string') {\n                f.appendChild(Snap.parse(item).node);\n            }\n        }\n        return new Fragment(f);\n    };\n\n    function make(name, parent) {\n        var res = $(name);\n        parent.appendChild(res);\n        var el = wrap(res);\n        return el;\n    }\n    function Paper(w, h) {\n        var res,\n            desc,\n            defs,\n            proto = Paper.prototype;\n        if (w && w.tagName && w.tagName.toLowerCase() == 'svg') {\n            if (w.snap in hub) {\n                return hub[w.snap];\n            }\n            var doc = w.ownerDocument;\n            res = new Element(w);\n            desc = w.getElementsByTagName('desc')[0];\n            defs = w.getElementsByTagName('defs')[0];\n            if (!desc) {\n                desc = $('desc');\n                desc.appendChild(doc.createTextNode('Created with Snap'));\n                res.node.appendChild(desc);\n            }\n            if (!defs) {\n                defs = $('defs');\n                res.node.appendChild(defs);\n            }\n            res.defs = defs;\n            for (var key in proto)\n                if (proto[has](key)) {\n                    res[key] = proto[key];\n                }\n            res.paper = res.root = res;\n        } else {\n            res = make('svg', glob.doc.body);\n            $(res.node, {\n                height: h,\n                version: 1.1,\n                width: w,\n                xmlns: xmlns\n            });\n        }\n        return res;\n    }\n    function wrap(dom) {\n        if (!dom) {\n            return dom;\n        }\n        if (dom instanceof Element || dom instanceof Fragment) {\n            return dom;\n        }\n        if (dom.tagName && dom.tagName.toLowerCase() == 'svg') {\n            return new Paper(dom);\n        }\n        if (dom.tagName && dom.tagName.toLowerCase() == 'object' && dom.type == 'image/svg+xml') {\n            return new Paper(dom.contentDocument.getElementsByTagName('svg')[0]);\n        }\n        return new Element(dom);\n    }\n\n    Snap._.make = make;\n    Snap._.wrap = wrap;\n    /*\\\n     * Paper.el\n     [ method ]\n     **\n     * Creates an element on paper with a given name and no attributes\n     **\n     - name (string) tag name\n     - attr (object) attributes\n     = (Element) the current element\n     > Usage\n     | var c = paper.circle(10, 10, 10); // is the same as...\n     | var c = paper.el(\"circle\").attr({\n     |     cx: 10,\n     |     cy: 10,\n     |     r: 10\n     | });\n     | // and the same as\n     | var c = paper.el(\"circle\", {\n     |     cx: 10,\n     |     cy: 10,\n     |     r: 10\n     | });\n    \\*/\n    Paper.prototype.el = function (name, attr) {\n        var el = make(name, this.node);\n        attr && el.attr(attr);\n        return el;\n    };\n    /*\\\n     * Element.children\n     [ method ]\n     **\n     * Returns array of all the children of the element.\n     = (array) array of Elements\n    \\*/\n    Element.prototype.children = function () {\n        var out = [],\n            ch = this.node.childNodes;\n        for (var i = 0, ii = ch.length; i < ii; i++) {\n            out[i] = Snap(ch[i]);\n        }\n        return out;\n    };\n    function jsonFiller(root, o) {\n        for (var i = 0, ii = root.length; i < ii; i++) {\n            var item = {\n                    type: root[i].type,\n                    attr: root[i].attr()\n                },\n                children = root[i].children();\n            o.push(item);\n            if (children.length) {\n                jsonFiller(children, (item.childNodes = []));\n            }\n        }\n    }\n    /*\\\n     * Element.toJSON\n     [ method ]\n     **\n     * Returns object representation of the given element and all its children.\n     = (object) in format\n     o {\n     o     type (string) this.type,\n     o     attr (object) attributes map,\n     o     childNodes (array) optional array of children in the same format\n     o }\n    \\*/\n    Element.prototype.toJSON = function () {\n        var out = [];\n        jsonFiller([this], out);\n        return out[0];\n    };\n    // default\n    eve.on('snap.util.getattr', function () {\n        var att = eve.nt();\n        att = att.substring(att.lastIndexOf('.') + 1);\n        var css = att.replace(/[A-Z]/g, function (letter) {\n            return '-' + letter.toLowerCase();\n        });\n        if (cssAttr[has](css)) {\n            return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n        } else {\n            return $(this.node, att);\n        }\n    });\n    var cssAttr = {\n        'alignment-baseline': 0,\n        'baseline-shift': 0,\n        clip: 0,\n        'clip-path': 0,\n        'clip-rule': 0,\n        color: 0,\n        'color-interpolation': 0,\n        'color-interpolation-filters': 0,\n        'color-profile': 0,\n        'color-rendering': 0,\n        cursor: 0,\n        direction: 0,\n        display: 0,\n        'dominant-baseline': 0,\n        'enable-background': 0,\n        fill: 0,\n        'fill-opacity': 0,\n        'fill-rule': 0,\n        filter: 0,\n        'flood-color': 0,\n        'flood-opacity': 0,\n        font: 0,\n        'font-family': 0,\n        'font-size': 0,\n        'font-size-adjust': 0,\n        'font-stretch': 0,\n        'font-style': 0,\n        'font-variant': 0,\n        'font-weight': 0,\n        'glyph-orientation-horizontal': 0,\n        'glyph-orientation-vertical': 0,\n        'image-rendering': 0,\n        kerning: 0,\n        'letter-spacing': 0,\n        'lighting-color': 0,\n        marker: 0,\n        'marker-end': 0,\n        'marker-mid': 0,\n        'marker-start': 0,\n        mask: 0,\n        opacity: 0,\n        overflow: 0,\n        'pointer-events': 0,\n        'shape-rendering': 0,\n        'stop-color': 0,\n        'stop-opacity': 0,\n        stroke: 0,\n        'stroke-dasharray': 0,\n        'stroke-dashoffset': 0,\n        'stroke-linecap': 0,\n        'stroke-linejoin': 0,\n        'stroke-miterlimit': 0,\n        'stroke-opacity': 0,\n        'stroke-width': 0,\n        'text-anchor': 0,\n        'text-decoration': 0,\n        'text-rendering': 0,\n        'unicode-bidi': 0,\n        visibility: 0,\n        'word-spacing': 0,\n        'writing-mode': 0\n    };\n\n    eve.on('snap.util.attr', function (value) {\n        var att = eve.nt(),\n            attr = {};\n        att = att.substring(att.lastIndexOf('.') + 1);\n        attr[att] = value;\n        var style = att.replace(/-(\\w)/gi, function (all, letter) {\n                return letter.toUpperCase();\n            }),\n            css = att.replace(/[A-Z]/g, function (letter) {\n                return '-' + letter.toLowerCase();\n            });\n        if (cssAttr[has](css)) {\n            this.node.style[style] = value == null ? E : value;\n        } else {\n            $(this.node, attr);\n        }\n    });\n    (function (proto) {})(Paper.prototype);\n\n    // simple ajax\n    /*\\\n     * Snap.ajax\n     [ method ]\n     **\n     * Simple implementation of Ajax\n     **\n     - url (string) URL\n     - postData (object|string) data for post request\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n     * or\n     - url (string) URL\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n     = (XMLHttpRequest) the XMLHttpRequest object, just in case\n    \\*/\n    Snap.ajax = function (url, postData, callback, scope) {\n        var req = new XMLHttpRequest(),\n            id = ID();\n        if (req) {\n            if (is(postData, 'function')) {\n                scope = callback;\n                callback = postData;\n                postData = null;\n            } else if (is(postData, 'object')) {\n                var pd = [];\n                for (var key in postData)\n                    if (postData.hasOwnProperty(key)) {\n                        pd.push(encodeURIComponent(key) + '=' + encodeURIComponent(postData[key]));\n                    }\n                postData = pd.join('&');\n            }\n            req.open(postData ? 'POST' : 'GET', url, true);\n            if (postData) {\n                req.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n                req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n            }\n            if (callback) {\n                eve.once('snap.ajax.' + id + '.0', callback);\n                eve.once('snap.ajax.' + id + '.200', callback);\n                eve.once('snap.ajax.' + id + '.304', callback);\n            }\n            req.onreadystatechange = function () {\n                if (req.readyState != 4) return;\n                eve('snap.ajax.' + id + '.' + req.status, scope, req);\n            };\n            if (req.readyState == 4) {\n                return req;\n            }\n            req.send(postData);\n            return req;\n        }\n    };\n    /*\\\n     * Snap.load\n     [ method ]\n     **\n     * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n     **\n     - url (string) URL\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n    \\*/\n    Snap.load = function (url, callback, scope) {\n        Snap.ajax(url, function (req) {\n            var f = Snap.parse(req.responseText);\n            scope ? callback.call(scope, f) : callback(f);\n        });\n    };\n    var getOffset = function (elem) {\n        var box = elem.getBoundingClientRect(),\n            doc = elem.ownerDocument,\n            body = doc.body,\n            docElem = doc.documentElement,\n            clientTop = docElem.clientTop || body.clientTop || 0,\n            clientLeft = docElem.clientLeft || body.clientLeft || 0,\n            top = box.top + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop) - clientTop,\n            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n        return {\n            y: top,\n            x: left\n        };\n    };\n    /*\\\n     * Snap.getElementByPoint\n     [ method ]\n     **\n     * Returns you topmost element under given point.\n     **\n     = (object) Snap element object\n     - x (number) x coordinate from the top left corner of the window\n     - y (number) y coordinate from the top left corner of the window\n     > Usage\n     | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n    \\*/\n    Snap.getElementByPoint = function (x, y) {\n        var paper = this,\n            svg = paper.canvas,\n            target = glob.doc.elementFromPoint(x, y);\n        if (glob.win.opera && target.tagName == 'svg') {\n            var so = getOffset(target),\n                sr = target.createSVGRect();\n            sr.x = x - so.x;\n            sr.y = y - so.y;\n            sr.width = sr.height = 1;\n            var hits = target.getIntersectionList(sr, null);\n            if (hits.length) {\n                target = hits[hits.length - 1];\n            }\n        }\n        if (!target) {\n            return null;\n        }\n        return wrap(target);\n    };\n    /*\\\n     * Snap.plugin\n     [ method ]\n     **\n     * Let you write plugins. You pass in a function with five arguments, like this:\n     | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n     |     Snap.newmethod = function () {};\n     |     Element.prototype.newmethod = function () {};\n     |     Paper.prototype.newmethod = function () {};\n     | });\n     * Inside the function you have access to all main objects (and their\n     * prototypes). This allow you to extend anything you want.\n     **\n     - f (function) your plugin body\n    \\*/\n    Snap.plugin = function (f) {\n        f(Snap, Element, Paper, glob, Fragment);\n    };\n    glob.win.Snap = Snap;\n    return Snap;\n})(window || this);\nexport default Snap;\n","import Snap from './svg';\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return 'T' + this.dx + ',' + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, 'string')) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : 'c';\n        switch (way) {\n            case 't':\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n                break;\n            case 'b':\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n                break;\n            case 'm':\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n                break;\n            case 'l':\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n                break;\n            case 'r':\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n                break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n                break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform('...' + this.getAlign(el, way));\n    };\n});\n","import eve from 'eve';\nvar mina = (function (eve) {\n    var animations = {},\n        requestAnimFrame =\n            window.requestAnimationFrame ||\n            window.webkitRequestAnimationFrame ||\n            window.mozRequestAnimationFrame ||\n            window.oRequestAnimationFrame ||\n            window.msRequestAnimationFrame ||\n            function (callback) {\n                setTimeout(callback, 16, new Date().getTime());\n                return true;\n            },\n        requestID,\n        isArray =\n            Array.isArray ||\n            function (a) {\n                return a instanceof Array || Object.prototype.toString.call(a) == '[object Array]';\n            },\n        idgen = 0,\n        idprefix = 'M' + (+new Date()).toString(36),\n        ID = function () {\n            return idprefix + (idgen++).toString(36);\n        },\n        timer =\n            Date.now ||\n            function () {\n                return +new Date();\n            },\n        sta = function (val) {\n            var a = this;\n            if (val == null) {\n                return a.s;\n            }\n            var ds = a.s - val;\n            a.b += (a.dur / a.spd) * ds;\n            a.B += (a.dur / a.spd) * ds;\n            a.s = val;\n        },\n        speed = function (val) {\n            var a = this;\n            if (val == null) {\n                return a.spd;\n            }\n            a.b = (1 - 1 / (val / a.spd)) * a.get() + (1 / (val / a.spd)) * a.b;\n            a.spd = val;\n        },\n        duration = function (val) {\n            var a = this;\n            if (val == null) {\n                return a.dur;\n            }\n            a.s = (a.s * val) / a.dur;\n            a.dur = val;\n        },\n        stopit = function () {\n            var a = this;\n            delete animations[a.id];\n            a.update();\n            eve('mina.stop.' + a.id, a);\n        },\n        pause = function () {\n            var a = this;\n            if (a.pdif) {\n                return;\n            }\n            delete animations[a.id];\n            a.update();\n            a.pdif = a.get() - a.b;\n        },\n        resume = function () {\n            var a = this;\n            if (!a.pdif) {\n                return;\n            }\n            a.b = a.get() - a.pdif;\n            delete a.pdif;\n            animations[a.id] = a;\n            frame();\n        },\n        update = function () {\n            var a = this,\n                res;\n            if (isArray(a.start)) {\n                res = [];\n                for (var j = 0, jj = a.start.length; j < jj; j++) {\n                    res[j] = +a.start[j] + (a.end[j] - a.start[j]) * a.easing(a.s);\n                }\n            } else {\n                res = +a.start + (a.end - a.start) * a.easing(a.s);\n            }\n            a.set(res);\n        },\n        frame = function (timeStamp) {\n            // Manual invokation?\n            if (!timeStamp) {\n                // Frame loop stopped?\n                if (!requestID) {\n                    // Start frame loop...\n                    requestID = requestAnimFrame(frame);\n                }\n                return;\n            }\n            var len = 0;\n            for (var i in animations)\n                if (animations.hasOwnProperty.call(animations, i)) {\n                    var a = animations[i],\n                        b = a.get();\n                    len++;\n                    a.s = (b - a.b) / (a.dur / a.spd);\n                    if (a.s >= 1) {\n                        delete animations[i];\n                        a.s = 1;\n                        len--;\n                        (function (a) {\n                            setTimeout(function () {\n                                eve('mina.finish.' + a.id, a);\n                            });\n                        })(a);\n                    }\n                    a.update();\n                }\n            requestID = len ? requestAnimFrame(frame) : false;\n        },\n        /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n        mina = function (a, A, b, B, get, set, easing) {\n            var anim = {\n                id: ID(),\n                start: a,\n                end: A,\n                b: b,\n                s: 0,\n                dur: B - b,\n                spd: 1,\n                get: get,\n                set: set,\n                easing: easing || mina.linear,\n                status: sta,\n                speed: speed,\n                duration: duration,\n                stop: stopit,\n                pause: pause,\n                resume: resume,\n                update: update\n            };\n            animations[anim.id] = anim;\n            var len = 0,\n                i;\n            for (i in animations)\n                if (animations.hasOwnProperty.call(animations, i)) {\n                    len++;\n                    if (len == 2) {\n                        break;\n                    }\n                }\n            len == 1 && frame();\n            return anim;\n        };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, 0.48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = 0.48 - n / 1.04,\n            Q = Math.sqrt(0.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + 0.5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin(((n - 0.075) * (2 * Math.PI)) / 0.3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + 0.75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + 0.9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + 0.984375;\n                }\n            }\n        }\n        return l;\n    };\n    mina.allStop = () => {\n        for (const key in animations) {\n            const element = animations[key];\n            element.stop();\n        }\n    };\n    window.mina = mina;\n    return mina;\n})(eve);\nexport default mina;\n","import mina from './mina';\nimport eve from 'eve';\nimport Snap from './svg';\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = 'hasOwnProperty';\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == 'function' && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims)\n            if (el.anims[has](id)) {\n                (function (a) {\n                    res.push({\n                        anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                        mina: a,\n                        curStatus: a.status(),\n                        status: function (val) {\n                            return a.status(val);\n                        },\n                        stop: function () {\n                            a.stop();\n                        }\n                    });\n                })(el.anims[id]);\n            }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == 'function' && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once('mina.finish.' + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == 'function' && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [],\n            tkeys = [],\n            keys = {},\n            from,\n            to,\n            f,\n            eq,\n            el = this;\n        for (var key in attrs)\n            if (attrs[has](key)) {\n                if (el.equal) {\n                    eq = el.equal(key, Str(attrs[key]));\n                    from = eq.from;\n                    to = eq.to;\n                    f = eq.f;\n                } else {\n                    from = +el.attr(key);\n                    to = +attrs[key];\n                }\n                var len = is(from, 'array') ? from.length : 1;\n                keys[key] = slice(fkeys.length, fkeys.length + len, f);\n                fkeys = fkeys.concat(from);\n                tkeys = tkeys.concat(to);\n            }\n        var now = mina.time(),\n            anim = mina(\n                fkeys,\n                tkeys,\n                now,\n                now + ms,\n                mina.time,\n                function (val) {\n                    var attr = {};\n                    for (var key in keys)\n                        if (keys[has](key)) {\n                            attr[key] = keys[key](val);\n                        }\n                    el.attr(attr);\n                },\n                easing\n            );\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve('snap.animcreated.' + el.id, anim);\n        eve.once('mina.finish.' + anim.id, function () {\n            eve.off('mina.*.' + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once('mina.stop.' + anim.id, function () {\n            eve.off('mina.*.' + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n","import eve from 'eve';\nimport Snap from './svg';\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = 'hasOwnProperty',\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = '';\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    };\n    // Attributes event handlers\n    eve.on('snap.util.attr.mask', function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == 'mask') {\n                var mask = value;\n            } else {\n                mask = make('mask', getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id &&\n                $(mask.node, {\n                    id: mask.id\n                });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on('snap.util.attr.clip', clipIt);\n        eve.on('snap.util.attr.clip-path', clipIt);\n        eve.on('snap.util.attr.clipPath', clipIt);\n    })(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === 'clipPath') {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === 'svg') {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make('clipPath', getSomeDefs(this));\n                clip.node.appendChild(value.node);\n            }\n            !clip.node.id && $(clip.node, { id: clip.id });\n\n            $(this.node, {\n                'clip-path': URL(clip.node.id || clip.id)\n            });\n        }\n    });\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (\n                value instanceof Fragment &&\n                value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == 'radialGradient' ||\n                    value.node.firstChild.tagName == 'linearGradient' ||\n                    value.node.firstChild.tagName == 'pattern')\n            ) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == 'radialGradient' || value.type == 'linearGradient' || value.type == 'pattern') {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on('snap.util.attr.fill', fillStroke('fill'));\n    eve.on('snap.util.attr.stroke', fillStroke('stroke'));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on('snap.util.grad.parse', function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split('-');\n        stops = stops.map(function (el) {\n            el = el.split(':');\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++)\n            if ('offset' in stops[i]) {\n                seed(i, stops[i].offset);\n            }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on('snap.util.attr.d', function (value) {\n        eve.stop();\n        if (is(value, 'array') && is(value[0], 'array')) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, { d: value });\n    })(-1);\n    eve.on('snap.util.attr.#text', function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on('snap.util.attr.path', function (value) {\n        eve.stop();\n        this.attr({ d: value });\n    })(-1);\n    eve.on('snap.util.attr.class', function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on('snap.util.attr.viewBox', function (value) {\n        var vb;\n        if (is(value, 'object') && 'x' in value) {\n            vb = [value.x, value.y, value.width, value.height].join(' ');\n        } else if (is(value, 'array')) {\n            vb = value.join(' ');\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on('snap.util.attr.transform', function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on('snap.util.attr.r', function (value) {\n        if (this.type == 'rect') {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on('snap.util.attr.textpath', function (value) {\n        eve.stop();\n        if (this.type == 'text') {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, 'string')) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({ id: id });\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr('id');\n                    if (!id) {\n                        id = value.id;\n                        value.attr({ id: id });\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({ 'xlink:href': '#' + id });\n                } else {\n                    tp = $('textPath', {\n                        'xlink:href': '#' + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on('snap.util.attr.text', function (value) {\n        if (this.type == 'text') {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $('tspan');\n                    if (is(chunk, 'array')) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += 'px';\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on('snap.util.attr.fontSize', setFontSize)(-1);\n    eve.on('snap.util.attr.font-size', setFontSize)(-1);\n\n    eve.on('snap.util.getattr.transform', function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on('snap.util.getattr.textpath', function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue('marker-' + end);\n                if (style == 'none') {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = 'marker' + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == '' || !value) {\n                    this.node.style[name] = 'none';\n                    return;\n                }\n                if (value.type == 'marker') {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, { id: value.id });\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on('snap.util.getattr.marker-end', getter('end'))(-1);\n        eve.on('snap.util.getattr.markerEnd', getter('end'))(-1);\n        eve.on('snap.util.getattr.marker-start', getter('start'))(-1);\n        eve.on('snap.util.getattr.markerStart', getter('start'))(-1);\n        eve.on('snap.util.getattr.marker-mid', getter('mid'))(-1);\n        eve.on('snap.util.getattr.markerMid', getter('mid'))(-1);\n        eve.on('snap.util.attr.marker-end', setter('end'))(-1);\n        eve.on('snap.util.attr.markerEnd', setter('end'))(-1);\n        eve.on('snap.util.attr.marker-start', setter('start'))(-1);\n        eve.on('snap.util.attr.markerStart', setter('start'))(-1);\n        eve.on('snap.util.attr.marker-mid', setter('mid'))(-1);\n        eve.on('snap.util.attr.markerMid', setter('mid'))(-1);\n    })();\n    eve.on('snap.util.getattr.r', function () {\n        if (this.type == 'rect' && $(this.node, 'rx') == $(this.node, 'ry')) {\n            eve.stop();\n            return $(this.node, 'rx');\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == 'tspan') {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on('snap.util.getattr.text', function () {\n        if (this.type == 'text' || this.type == 'tspan') {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on('snap.util.getattr.#text', function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on('snap.util.getattr.fill', function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve('snap.util.getattr.fill', this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on('snap.util.getattr.stroke', function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve('snap.util.getattr.stroke', this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on('snap.util.getattr.viewBox', function () {\n        eve.stop();\n        var vb = $(this.node, 'viewBox');\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on('snap.util.getattr.points', function () {\n        var p = $(this.node, 'points');\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on('snap.util.getattr.path', function () {\n        var p = $(this.node, 'd');\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on('snap.util.getattr.class', function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on('snap.util.getattr.fontSize', getFontSize)(-1);\n    eve.on('snap.util.getattr.font-size', getFontSize)(-1);\n});\n","import eve from 'eve';\nimport Snap from './svg';\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            '+': function (x, y) {\n                return x + y;\n            },\n            '-': function (x, y) {\n                return x - y;\n            },\n            '/': function (x, y) {\n                return x / y;\n            },\n            '*': function (x, y) {\n                return x * y;\n            }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on('snap.util.attr', function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf('.') + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || '',\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on('snap.util.equal', function (name, b) {\n        var A,\n            B,\n            a = Str(this.attr(name) || ''),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || '',\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n","import Snap from './svg';\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        const classes = Str(value || '').match(rgNotSpace) || [],\n            elem = this.node;\n        classes.length && elem.classList.add(...classes);\n        return this;\n    };\n    /*\\\n     * Element.removeAllClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        const classes = Str(value || '').match(rgNotSpace) || [],\n            elem = this.node;\n        classes.length && elem.classList.remove(...classes);\n        return this;\n    };\n    /*\\\n     * Element.removeAllClass\n     [ method ]\n     **\n     * Removes All class names from element\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeAllClass = function () {\n        this.removeClass(this.node.classList.value);\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || '').match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while ((clazz = classes[j++])) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(' ');\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n","import eve from 'eve';\nimport Snap from './svg';\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = 'hasOwnProperty',\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == 'tspan') {\n            const { a, d, e, f } = this.parent().transform().totalMatrix;\n            const svg = this.paper.node;\n            const pt = svg.createSVGPoint();\n            const rect = this.node.getClientRects().item(0);\n            pt.x = rect.width;\n            pt.y = rect.height;\n            const { x: width, y: height } = pt.matrixTransform(svg.getCTM().inverse());\n            const boundingRect = svg.getBoundingClientRect();\n            pt.x = rect.x - boundingRect.x;\n            pt.y = rect.y - boundingRect.y;\n            const { x, y } = pt.matrixTransform(svg.getCTM().inverse());\n            return Snap._.box({ width: width / a, height: height / d, x: (x - e) / a, y: (y - f) / d });\n        }\n        var el = this,\n            m = new Snap.Matrix();\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == 'use') {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr('x') || 0, el.attr('y') || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr('xlink:href');\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf('#') + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder\n                    ? Snap.path.getBBox((el.realPath = pathfinder(el)))\n                    : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == 'linearGradient' || el.type == 'radialGradient') {\n                tstr = el.node.getAttribute('gradientTransform');\n            } else if (el.type == 'pattern') {\n                tstr = el.node.getAttribute('patternTransform');\n            } else {\n                tstr = el.node.getAttribute('transform');\n            }\n            if (!tstr) {\n                return new Snap.Matrix();\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || '');\n            }\n            if (is(tstr, 'array')) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix(),\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ? Str(_.transform) : localString;\n            while (papa.type != 'svg' && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == 'linearGradient' || this.type == 'radialGradient') {\n                $(this.node, { gradientTransform: this.matrix });\n            } else if (this.type == 'pattern') {\n                $(this.node, { patternTransform: this.matrix });\n            } else {\n                $(this.node, { transform: this.matrix });\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == 'set') {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == 'set') {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == 'set') {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == 'linearGradient' || this.type == 'radialGradient' || this.type == 'pattern') {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make('use', this.node.parentNode);\n        }\n        $(use.node, {\n            'xlink:href': '#' + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll('*'),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == '#') {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, 'xlink:href');\n            if (val && val.charAt() == '#') {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr('xlink:href', '#' + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, 'fill');\n            urltest(it, 'stroke');\n            urltest(it, 'filter');\n            urltest(it, 'mask');\n            urltest(it, 'clip-path');\n            linktest(it);\n            var oldid = $(it.node, 'id');\n            if (oldid) {\n                $(it.node, { id: it.id });\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, 'id')) {\n            $(clone.node, { id: clone.id });\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make('pattern', getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, 'object') && 'x' in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: 'userSpaceOnUse',\n            id: p.id,\n            viewBox: [x, y, width, height].join(' ')\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    // SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n    // SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make('marker', getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, 'object') && 'x' in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(' '),\n            markerWidth: width,\n            markerHeight: height,\n            orient: 'auto',\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = (eldata[this.id] = eldata[this.id] || {});\n        if (arguments.length == 0) {\n            eve('snap.data.get.' + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, 'object')) {\n                for (var i in key)\n                    if (key[has](i)) {\n                        this.data(i, key[i]);\n                    }\n                return this;\n            }\n            eve('snap.data.get.' + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve('snap.data.set.' + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? '<' + this.type : '',\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += ' ' + attr[i].name + '=\"' + attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += '>');\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += '</' + this.type + '>');\n            } else {\n                type && (res += '/>');\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format(\n                    '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>',\n                    {\n                        x: +bb.x.toFixed(3),\n                        y: +bb.y.toFixed(3),\n                        width: +bb.width.toFixed(3),\n                        height: +bb.height.toFixed(3),\n                        contents: this.outerSVG()\n                    }\n                );\n            return 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n","import eve from 'eve';\nimport Snap from './svg';\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = 'colour';\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case 't':\n                return [l, 0, 0];\n            case 'm':\n                return [l, 1, 0, 0, 1, 0, 0];\n            case 'r':\n                if (item.length == 4) {\n                    return [l, 0, item[2], item[3]];\n                } else {\n                    return [l, 0];\n                }\n            case 's':\n                if (item.length == 5) {\n                    return [l, 1, 1, item[3], item[4]];\n                } else if (item.length == 3) {\n                    return [l, 1, 1];\n                } else {\n                    return [l, 1];\n                }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix();\n        t2 = t2 || new Snap.Matrix();\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0,\n            j,\n            jj,\n            tt1,\n            tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (\n                tt1[0] != tt2[0] ||\n                (tt1[0].toLowerCase() == 'r' && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n                (tt1[0].toLowerCase() == 's' && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n            ) {\n                t1 = Snap._.transform2matrix(t1, getBBox());\n                t2 = Snap._.transform2matrix(t2, getBBox());\n                from = [['m', t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                to = [['m', t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(' ');\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0,\n            i,\n            ii,\n            j,\n            jj,\n            out,\n            a,\n            b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = '[';\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = 'val[' + k++ + ']';\n            }\n            out += a + ']';\n            b[i] = out;\n        }\n        return Function('val', 'return Snap.path.toString.call([' + b + '])');\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, 'array') || !Snap.is(arr2, 'array')) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve('snap.util.equal', this, name, b).firstDefined();\n    };\n    eve.on('snap.util.equal', function (name, b) {\n        var A,\n            B,\n            a = Str(this.attr(name) || ''),\n            el = this;\n        if (names[name] == 'colour') {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == 'viewBox') {\n            A = this.attr(name).vb.split(' ').map(Number);\n            B = b.split(' ').map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == 'transform' || name == 'gradientTransform' || name == 'patternTransform') {\n            if (typeof b == 'string') {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == 'd' || name == 'path') {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == 'points') {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) {\n                    return val;\n                }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n","import eve from 'eve';\nimport Snap from './svg';\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != 'svg') {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $('filter');\n        $(filter, {\n            id: id\n            // filterUnits: 'userSpaceOnUse'\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on('snap.util.getattr.filter', function () {\n        eve.stop();\n        var p = $(this.node, 'filter');\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on('snap.util.attr.filter', function (value) {\n        if (value instanceof Element && value.type == 'filter') {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, { id: value.id });\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == 'none') {\n            eve.stop();\n            this.node.removeAttribute('filter');\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = '#000';\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format(\n            '<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n            {\n                color: color,\n                dx: dx,\n                dy: dy,\n                blur: blur,\n                opacity: opacity\n            }\n        );\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format(\n            '<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',\n            {\n                a: 0.2126 + 0.7874 * (1 - amount),\n                b: 0.7152 - 0.7152 * (1 - amount),\n                c: 0.0722 - 0.0722 * (1 - amount),\n                d: 0.2126 - 0.2126 * (1 - amount),\n                e: 0.7152 + 0.2848 * (1 - amount),\n                f: 0.0722 - 0.0722 * (1 - amount),\n                g: 0.2126 - 0.2126 * (1 - amount),\n                h: 0.0722 + 0.9278 * (1 - amount)\n            }\n        );\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format(\n            '<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',\n            {\n                a: 0.393 + 0.607 * (1 - amount),\n                b: 0.769 - 0.769 * (1 - amount),\n                c: 0.189 - 0.189 * (1 - amount),\n                d: 0.349 - 0.349 * (1 - amount),\n                e: 0.686 + 0.314 * (1 - amount),\n                f: 0.168 - 0.168 * (1 - amount),\n                g: 0.272 - 0.272 * (1 - amount),\n                h: 0.534 - 0.534 * (1 - amount),\n                i: 0.131 + 0.869 * (1 - amount)\n            }\n        );\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        //        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format(\n            '<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',\n            {\n                amount: amount,\n                amount2: 1 - amount\n            }\n        );\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format(\n            '<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',\n            {\n                amount: amount\n            }\n        );\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format(\n            '<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n            {\n                amount: amount,\n                amount2: 0.5 - amount / 2\n            }\n        );\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n","import Snap from './svg';\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = '';\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == '[object SVGMatrix]') {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(\n                me.d / x,\n                -me.b / x,\n                -me.c / x,\n                me.a / x,\n                (me.c * me.f - me.d * me.e) / x,\n                (me.b * me.e - me.a * me.f) / x\n            );\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return (\n                'matrix(' + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ')'\n            );\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [\n                [this.a, this.b],\n                [this.c, this.d]\n            ];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return (\n                    (s.dx || s.dy ? 't' + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                    (s.rotate ? 'r' + [+s.rotate.toFixed(4), 0, 0] : E) +\n                    (s.scalex != 1 || s.scaley != 1 ? 's' + [s.scalex, s.scaley, 0, 0] : E)\n                );\n            } else {\n                return 'm' + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n","import mina from './mina';\nimport eve from 'eve';\nimport Snap from './svg';\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n            this.items = [];\n            this.bindings = {};\n            this.length = 0;\n            this.type = 'set';\n            if (items) {\n                for (var i = 0, ii = items.length; i < ii; i++) {\n                    if (items[i]) {\n                        this[this.items.length] = this.items[this.items.length] = items[i];\n                        this.length++;\n                    }\n                }\n            }\n        },\n        setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item, len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == 'function' && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, 'array') && Snap.is(args[args.length - 1], 'array')) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker =\n                callback &&\n                function () {\n                    if (++cb == set.length) {\n                        callback.call(this);\n                    }\n                };\n        return this.forEach(function (el, i) {\n            eve.once('snap.animcreated.' + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == 'function') {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++)\n            if (this[i] == el) {\n                this.splice(i, 1);\n                return true;\n            }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--; )\n            if (!this.items[i].removed) {\n                var box = this.items[i].getBBox();\n                x.push(box.x);\n                y.push(box.y);\n                x2.push(box.x + box.width);\n                y2.push(box.y + box.height);\n            }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set();\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return 'Snap\\u2018s set';\n    };\n    setproto.type = 'set';\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set();\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n","import Snap from './svg';\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = 'hasOwnProperty',\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = (paths.ps = paths.ps || {});\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p)\n                if (p[has](key) && key != ps) {\n                    p[key].sleep--;\n                    !p[key].sleep && delete p[key];\n                }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(' ')\n        };\n    }\n    function toString() {\n        return this.join(',').replace(p2s, '$1');\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(\n                p1x,\n                p1y,\n                c1x,\n                c1y,\n                c2x,\n                c2y,\n                p2x,\n                p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length)\n            );\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(\n            function (path, length, onlystart) {\n                if (path instanceof Element) {\n                    path = path.attr('d');\n                }\n                path = path2curve(path);\n                var x,\n                    y,\n                    p,\n                    l,\n                    sp = '',\n                    subpaths = {},\n                    point,\n                    len = 0;\n                for (var i = 0, ii = path.length; i < ii; i++) {\n                    p = path[i];\n                    if (p[0] == 'M') {\n                        x = +p[1];\n                        y = +p[2];\n                    } else {\n                        l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                        if (len + l > length) {\n                            if (subpath && !subpaths.start) {\n                                point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                                sp += [\n                                    'C' + O(point.start.x),\n                                    O(point.start.y),\n                                    O(point.m.x),\n                                    O(point.m.y),\n                                    O(point.x),\n                                    O(point.y)\n                                ];\n                                if (onlystart) {\n                                    return sp;\n                                }\n                                subpaths.start = sp;\n                                sp = [\n                                    'M' + O(point.x),\n                                    O(point.y) + 'C' + O(point.n.x),\n                                    O(point.n.y),\n                                    O(point.end.x),\n                                    O(point.end.y),\n                                    O(p[5]),\n                                    O(p[6])\n                                ].join();\n                                len += l;\n                                x = +p[5];\n                                y = +p[6];\n                                continue;\n                            }\n                            if (!istotal && !subpath) {\n                                point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                                return point;\n                            }\n                        }\n                        len += l;\n                        x = +p[5];\n                        y = +p[6];\n                    }\n                    sp += p.shift() + p;\n                }\n                subpaths.end = sp;\n                point = istotal\n                    ? len\n                    : subpath\n                    ? subpaths\n                    : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n                return point;\n            },\n            null,\n            Snap._.clone\n        );\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - (math.atan2(mx - nx, my - ny) * 180) / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: { x: mx, y: my },\n            n: { x: nx, y: ny },\n            start: { x: ax, y: ay },\n            end: { x: cx, y: cy },\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, 'array')) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return (\n            isPointInsideBBox(bbox2, bbox1.x, bbox1.y) ||\n            isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) ||\n            isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) ||\n            isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) ||\n            isPointInsideBBox(bbox1, bbox2.x, bbox2.y) ||\n            isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) ||\n            isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) ||\n            isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) ||\n            (((bbox1.x < bbox2.x2 && bbox1.x > bbox2.x) || (bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)) &&\n                ((bbox1.y < bbox2.y2 && bbox1.y > bbox2.y) || (bbox2.y < bbox1.y2 && bbox2.y > bbox1.y)))\n        );\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [\n                -0.1252,\n                0.1252,\n                -0.3678,\n                0.3678,\n                -0.5873,\n                0.5873,\n                -0.7699,\n                0.7699,\n                -0.9041,\n                0.9041,\n                -0.9816,\n                0.9816\n            ],\n            Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = 0.01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return { x: px, y: py };\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({ x: p.x, y: p.y, t: i / n1 });\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({ x: p.x, y: p.y, t: i / n2 });\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < 0.001 ? 'y' : 'x',\n                    cj = abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x',\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1,\n            y1,\n            x2,\n            y2,\n            x1m,\n            y1m,\n            x2m,\n            y2m,\n            bez1,\n            bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == 'M') {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == 'C') {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == 'M') {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == 'C') {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return (\n            isPointInsideBBox(bbox, x, y) &&\n            interPathHelper(\n                path,\n                [\n                    ['M', x, y],\n                    ['H', bbox.x2 + 10]\n                ],\n                1\n            ) %\n                2 ==\n                1\n        );\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == 'M') {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                ['M', +x + +r, y],\n                ['l', w - r * 2, 0],\n                ['a', r, r, 0, 0, 1, r, r],\n                ['l', 0, h - r * 2],\n                ['a', r, r, 0, 0, 1, -r, r],\n                ['l', r * 2 - w, 0],\n                ['a', r, r, 0, 0, 1, -r, -r],\n                ['l', 0, r * 2 - h],\n                ['a', r, r, 0, 0, 1, r, -r],\n                ['z']\n            ];\n        }\n        var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [\n                    ['M', x1, y1],\n                    ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]\n                ];\n        } else {\n            res = [\n                ['M', x, y],\n                ['m', 0, -ry],\n                ['a', rx, ry, 0, 1, 1, 0, 2 * ry],\n                ['a', rx, ry, 0, 1, 1, 0, -2 * ry],\n                ['z']\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n            path: function (el) {\n                return el.attr('path');\n            },\n            circle: function (el) {\n                var attr = unit2px(el);\n                return ellipsePath(attr.cx, attr.cy, attr.r);\n            },\n            ellipse: function (el) {\n                var attr = unit2px(el);\n                return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n            },\n            rect: function (el) {\n                var attr = unit2px(el);\n                return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n            },\n            image: function (el) {\n                var attr = unit2px(el);\n                return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n            },\n            line: function (el) {\n                return 'M' + [el.attr('x1') || 0, el.attr('y1') || 0, el.attr('x2'), el.attr('y2')];\n            },\n            polyline: function (el) {\n                return 'M' + el.attr('points');\n            },\n            polygon: function (el) {\n                return 'M' + el.attr('points') + 'z';\n            },\n            deflt: function (el) {\n                var bbox = el.node.getBBox();\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n            }\n        };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, 'array') || !Snap.is(pathArray && pathArray[0], 'array')) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == 'M') {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push(['M', x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = (res[i] = []),\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case 'a':\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case 'v':\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case 'm':\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == 'm') {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case 'z':\n                    x = mx;\n                    y = my;\n                    break;\n                case 'h':\n                    x += +res[i][len - 1];\n                    break;\n                case 'v':\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, 'array') || !is(pathArray && pathArray[0], 'array')) {\n            // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [['M', 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == 'M') {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = ['M', x, y];\n        }\n        var crz =\n            pathArray.length == 3 &&\n            pathArray[0][0] == 'M' &&\n            pathArray[1][0].toUpperCase() == 'R' &&\n            pathArray[2][0].toUpperCase() == 'Z';\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push((r = []));\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case 'A':\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case 'V':\n                        r[1] = +pa[1] + y;\n                        break;\n                    case 'H':\n                        r[1] = +pa[1] + x;\n                        break;\n                    case 'R':\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case 'O':\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case 'U':\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = ['U'].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case 'M':\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == 'R') {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = ['R'].concat(pa.slice(-2));\n            } else if (pa0 == 'O') {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == 'U') {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = ['U'].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != 'O') {\n                switch (r[0]) {\n                    case 'Z':\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case 'H':\n                        x = r[1];\n                        break;\n                    case 'V':\n                        y = r[1];\n                        break;\n                    case 'M':\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = (PI * 120) / 180,\n            rad = (PI / 180) * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return { x: X, y: Y };\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos((PI / 180) * angle),\n                sin = math.sin((PI / 180) * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k =\n                    (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = (k * rx * y) / ry + (x1 + x2) / 2,\n                cy = (k * -ry * x) / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = (4 / 3) * rx * t,\n            hy = (4 / 3) * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(',');\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a,\n            b,\n            c,\n            t,\n            t1,\n            t2,\n            b2ac,\n            sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x,\n            y,\n            j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n        return {\n            min: { x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1]) },\n            max: { x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1]) }\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n            attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in { T: 1, Q: 1 }) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case 'M':\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case 'A':\n                        path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case 'S':\n                        if (pcom == 'C' || pcom == 'S') {\n                            // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx; // And reflect the previous\n                            ny = d.y * 2 - d.by; // command's control point relative to the current point.\n                        } else {\n                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = ['C', nx, ny].concat(path.slice(1));\n                        break;\n                    case 'T':\n                        if (pcom == 'Q' || pcom == 'T') {\n                            // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx; // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy; // to case \"S\".\n                        } else {\n                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case 'Q':\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case 'L':\n                        path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case 'H':\n                        path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case 'V':\n                        path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case 'Z':\n                        path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = 'A'); // the same as above\n                        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, (p2 && p2.length) || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == 'M' && path2[i][0] != 'M') {\n                    path2.splice(i, 0, ['M', a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, (p2 && p2.length) || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = '', // temporary holder for original path command\n            pcom = ''; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, (p2 && p2.length) || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != 'C') {\n                // C is not saved yet, because it may be result of conversion\n                pcoms1[i] = pfirst; // Save current path command\n                i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != 'A' && pfirst == 'C') pcoms1[i] = 'C'; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) {\n                // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != 'C') {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != 'A' && pfirst == 'C') {\n                    pcoms2[i] = 'C';\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                { x: +crp[i - 2], y: +crp[i - 1] },\n                { x: +crp[i], y: +crp[i + 1] },\n                { x: +crp[i + 2], y: +crp[i + 3] },\n                { x: +crp[i + 4], y: +crp[i + 5] }\n            ];\n            if (z) {\n                if (!i) {\n                    p[0] = { x: +crp[iLen - 2], y: +crp[iLen - 1] };\n                } else if (iLen - 4 == i) {\n                    p[3] = { x: +crp[0], y: +crp[1] };\n                } else if (iLen - 2 == i) {\n                    p[2] = { x: +crp[0], y: +crp[1] };\n                    p[3] = { x: +crp[2], y: +crp[3] };\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = { x: +crp[i], y: +crp[i + 1] };\n                }\n            }\n            d.push([\n                'C',\n                (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                (p[1].y + 6 * p[2].y - p[3].y) / 6,\n                p[2].x,\n                p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr('d'), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr('d'), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty('x')\n                ? function (i) {\n                      return {\n                          x: X[i].x,\n                          y: X[i].y\n                      };\n                  }\n                : function (i) {\n                      return {\n                          x: X[i],\n                          y: Y[i]\n                      };\n                  },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r);\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n","import eve from 'eve';\nimport Snap from './svg';\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, 'object') && x == '[object Object]') {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el('rect', attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, 'object') && cx == '[object Object]') {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el('circle', attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement('img'),\n                body = glob.doc.body;\n            img.style.cssText = 'position:absolute;left:-9999em;top:-9999em';\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    })();\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el('image');\n        if (is(src, 'object') && 'src' in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                'xlink:href': src,\n                preserveAspectRatio: 'none'\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, 'object') && cx == '[object Object]') {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el('ellipse', attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, 'object') && !is(d, 'array')) {\n            attr = d;\n        } else if (d) {\n            attr = { d: d };\n        }\n        return this.el('path', attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el('g');\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, 'object') && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el('svg', attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el('mask');\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n\n    proto.clipPath = function (first) {\n        var attr,\n            el = this.el('clipPath');\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, 'object')) {\n            var attr = x;\n        } else {\n            attr = { patternUnits: 'userSpaceOnUse' };\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el('pattern', attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr('id')) {\n                    id.attr({ id: Snap._.id(id) });\n                }\n                id = id.attr('id');\n            }\n            if (String(id).charAt() == '#') {\n                id = id.substring(1);\n            }\n            return this.el('use', { 'xlink:href': '#' + id });\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el('symbol', attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, 'object')) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || ''\n            };\n        }\n        return this.el('text', attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, 'object')) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el('line', attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, 'object') && !is(points, 'array')) {\n            attr = points;\n        } else if (points != null) {\n            attr = { points: points };\n        }\n        return this.el('polyline', attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, 'object') && !is(points, 'array')) {\n            attr = points;\n        } else if (points != null) {\n            attr = { points: points };\n        }\n        return this.el('polygon', attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll('stop');\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $('stop'),\n                attr = {\n                    offset: +offset + '%'\n                };\n            color = Snap.color(color);\n            attr['stop-color'] = color.hex;\n            if (color.opacity < 1) {\n                attr['stop-opacity'] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr('offset'));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == 'linearGradient') {\n                var x1 = $(this.node, 'x1') || 0,\n                    x2 = $(this.node, 'x2') || 1,\n                    y1 = $(this.node, 'y1') || 0,\n                    y2 = $(this.node, 'y2') || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || 0.5,\n                    cy = this.node.cy || 0.5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == 'string') {\n                grad = eve('snap.util.grad.parse', null, 'l(0,0,0,1)' + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, 'array')) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = { offset: grad[i].offset + '%' };\n                    attr['stop-color'] = color.hex;\n                    if (color.opacity < 1) {\n                        attr['stop-opacity'] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve('snap.util.grad.parse', null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == 'l') {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: 'userSpaceOnUse'\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make('linearGradient', defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make('radialGradient', defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement('div'),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, { xmlns: 'http://www.w3.org/2000/svg' });\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != 'defs') {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({ node: node });\n                }\n                node = next;\n            }\n        };\n    })();\n});\n","import eve from 'eve';\nimport Snap from './svg';\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        has = 'hasOwnProperty',\n        supportsTouch = navigator.maxTouchPoints || 'ontouchstart' in glob.doc,\n        events = [\n            'click',\n            'dblclick',\n            'mousedown',\n            'mousemove',\n            'mouseout',\n            'mouseover',\n            'mouseup',\n            'touchstart',\n            'touchmove',\n            'touchend',\n            'touchcancel',\n            'pointerover',\n            'pointerenter',\n            'pointerdown',\n            'pointermove',\n            'pointerup',\n            'pointerout',\n            'pointercancel',\n            'pointerleave'\n        ],\n        touchMap = {\n            mousedown: 'touchstart',\n            mousemove: 'touchmove',\n            mouseup: 'touchend'\n        },\n        getScroll = function (xy, el) {\n            var name = xy == 'y' ? 'scrollTop' : 'scrollLeft',\n                doc = el && el.node ? el.node.ownerDocument : glob.doc;\n            return doc[name in doc.documentElement ? 'documentElement' : 'body'][name];\n        },\n        preventDefault = function () {\n            this.returnValue = false;\n        },\n        preventTouch = function () {\n            return this.originalEvent.preventDefault();\n        },\n        stopPropagation = function () {\n            this.cancelBubble = true;\n        },\n        stopTouch = function () {\n            return this.originalEvent.stopPropagation();\n        },\n        addEvent = function (obj, type, fn, element) {\n            var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n                f = function (e) {\n                    var scrollY = getScroll('y', element),\n                        scrollX = getScroll('x', element);\n                    if (supportsTouch && touchMap[has](type)) {\n                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                            if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                                var olde = e;\n                                e = e.targetTouches[i];\n                                e.originalEvent = olde;\n                                e.preventDefault = preventTouch;\n                                e.stopPropagation = stopTouch;\n                                break;\n                            }\n                        }\n                    }\n                    var x = e.clientX + scrollX,\n                        y = e.clientY + scrollY;\n                    return fn.call(element, e, x, y);\n                };\n\n            if (type !== realName) {\n                obj.addEventListener(type, f, false);\n            }\n\n            obj.addEventListener(realName, f, false);\n\n            return function () {\n                if (type !== realName) {\n                    obj.removeEventListener(type, f, false);\n                }\n\n                obj.removeEventListener(realName, f, false);\n                return true;\n            };\n        },\n        drag = [],\n        dragMove = function (e) {\n            var x = e.clientX,\n                y = e.clientY,\n                scrollY = getScroll('y'),\n                scrollX = getScroll('x'),\n                dragi,\n                j = drag.length;\n            while (j--) {\n                dragi = drag[j];\n                if (supportsTouch) {\n                    var i = e.touches && e.touches.length,\n                        touch;\n                    while (i--) {\n                        touch = e.touches[i];\n                        if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                            x = touch.clientX;\n                            y = touch.clientY;\n                            (e.originalEvent ? e.originalEvent : e).preventDefault();\n                            break;\n                        }\n                    }\n                } else {\n                    e.preventDefault();\n                }\n                var node = dragi.el.node,\n                    o,\n                    next = node.nextSibling,\n                    parent = node.parentNode,\n                    display = node.style.display;\n                // glob.win.opera && parent.removeChild(node);\n                // node.style.display = \"none\";\n                // o = dragi.el.paper.getElementByPoint(x, y);\n                // node.style.display = display;\n                // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n                // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n                x += scrollX;\n                y += scrollY;\n                eve(\n                    'snap.drag.move.' + dragi.el.id,\n                    dragi.move_scope || dragi.el,\n                    x - dragi.el._drag.x,\n                    y - dragi.el._drag.y,\n                    x,\n                    y,\n                    e\n                );\n            }\n        },\n        dragUp = function (e) {\n            Snap.unmousemove(dragMove).unmouseup(dragUp);\n            var i = drag.length,\n                dragi;\n            while (i--) {\n                dragi = drag[i];\n                dragi.el._drag = {};\n                eve(\n                    'snap.drag.end.' + dragi.el.id,\n                    dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el,\n                    e\n                );\n                eve.off('snap.drag.*.' + dragi.el.id);\n            }\n            drag = [];\n        };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--; ) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, 'function')) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++)\n                        if (this.events[i].name == eventName) {\n                            try {\n                                this.events[i].f.call(this);\n                            } catch (e) {}\n                        }\n                }\n                return this;\n            };\n            Snap['un' + eventName] = elproto['un' + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--)\n                    if (events[l].name == eventName && (events[l].f == fn || !fn)) {\n                        events[l].unbind();\n                        events.splice(l, 1);\n                        !events.length && delete this.events;\n                        return this;\n                    }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope, preventDefault = true) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(\n                function (dx, dy) {\n                    this.attr({\n                        transform: origTransform + (origTransform ? 'T' : 't') + [dx, dy]\n                    });\n                },\n                function () {\n                    origTransform = this.transform().local;\n                }\n            );\n        }\n        function start(e, x, y) {\n            preventDefault && (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({ el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope });\n            onstart && eve.on('snap.drag.start.' + el.id, onstart);\n            onmove && eve.on('snap.drag.move.' + el.id, onmove);\n            onend && eve.on('snap.drag.end.' + el.id, onend);\n            eve('snap.drag.start.' + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve('snap.draginit.' + el.id, el, e, x, y);\n        }\n        eve.on('snap.draginit.' + el.id, start);\n        el._drag = {};\n        draggable.push({ el: el, start: start, init: init });\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--)\n            if (draggable[i].el == this) {\n                this.unmousedown(draggable[i].init);\n                draggable.splice(i, 1);\n                eve.unbind('snap.drag.*.' + this.id);\n                eve.unbind('snap.draginit.' + this.id);\n            }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n","import './align';\nimport './animation';\nimport './attr';\nimport './attradd';\nimport './class';\nimport './element';\nimport './equal';\nimport './filter';\nimport './matrix';\nimport './set';\nimport './path';\nimport './paper';\nimport './mouse';\nimport Snap from './svg';\nexport default Snap;\n","import { image } from 'sol-common';\nimport Snap from '../snap';\nimport { get2dimArray, getPointInMatrixForm, getRandomArrayElement, getTransposeArray, getUniquArray, shuffle } from '../utils/util';\nimport D1drag from '../components/D1drag';\nimport D1Animate from '../utils/D1Animate';\n\nexport default function DM000002({ canvas, ...p }) {\n    const g = canvas;\n    const callback = p.callback;\n\n    const items = p.items;\n    const position = p.position;\n\n    const testG = g.g();\n\n    test({\n        g: testG,\n        items,\n        position\n    });\n}\n\nconst test = ({ g, items, position }) => {\n    const { center, rows, columns, size } = position;\n    const itemG = g.g().addClass('D1-item-group');\n    const itemLength = items.length;\n    const totalNum = rows * columns;\n    const remainNum = totalNum - itemLength;\n    const addItem = getRandomArrayElement(items, remainNum);\n    const point = getPointInMatrixForm({\n        startPoint: { x: center.cx, y: center.cy },\n        rows,\n        columns,\n        gap: { x: size.width, y: size.height },\n        center: true\n    });\n    const sameNum = 3;\n\n    const shapes = shuffle(items.concat(addItem)).map((el, i) => {\n        const { type, imageIndex: url } = el;\n        const { x, y } = point[i];\n        const imageG = image({ canvas: itemG, img: { url, scale: 0.7 }, x, y, center: true });\n\n        imageG\n            .rect(x - size.width / 2, y - size.height / 2, size.width, size.height)\n            .attr({ stroke: 'blue', opacity: '0' })\n            .after(imageG.select('use'));\n\n        imageG.data('data', { type, index: i });\n\n        return D1drag({\n            dragItem: imageG,\n            startCallback: () => dragStartCallback(imageG),\n            moveCallback: () => dragMoveCallback(imageG),\n            endCallback: () => dragEndCallback(imageG)\n        });\n    });\n\n    const dragStartCallback = self => {\n        itemG.append(self);\n    };\n\n    const dragMoveCallback = self => {\n        // const dropIndex = getUserDropElementIndex(self);\n    };\n\n    const dragEndCallback = async self => {\n        shapes.forEach(el => el.attr({ pointerEvents: 'none' }));\n        const userIndex = self.data('data').index;\n        const dropIndex = getUserDropElementIndex(self);\n\n        if (typeof dropIndex === 'number') {\n            const dropElement = shapes[dropIndex];\n\n            await swapItem(self, dropElement);\n            const { answer } = answerCheck();\n\n            if (answer) await answerAnimHandler();\n            else await swapItem(dropElement, self);\n        } else {\n            const { x, y } = point[userIndex];\n            await self.moveAnimate({ x: x - size.width / 2, y: y - size.height / 2 });\n        }\n\n        shapes.forEach(el => el.attr({ pointerEvents: 'auto' }));\n    };\n\n    const answerAnimHandler = async (bool = true) => {\n        while (bool) {\n            const { answer, removeIndex } = answerCheck();\n            if (answer) {\n                await removeItem(removeIndex);\n                const emptyIndex = await downItem(removeIndex);\n                await fillItem(emptyIndex);\n            } else break;\n        }\n    };\n\n    const removeItem = async index => {\n        await Promise.all(index.map(el => D1Animate.blink({ interval: 0.5, duration: 500, element: shapes[el], opacity: 1 })));\n        await Promise.all(index.map(el => D1Animate.blink({ interval: 0.5, duration: 500, element: shapes[el], opacity: 1 })));\n        await Promise.all(index.map(el => D1Animate.blink({ interval: 1, duration: 250, element: shapes[el], opacity: 1 })));\n    };\n\n    const downItem = async index => {\n        shapes.forEach((el, i) => index.includes(i) && el.remove());\n        const columnCheckArr = getTransposeArray(get2dimArray(shapes, columns));\n        const totalIndex = shapes.map((el, i) => i);\n        const remainIndex = [];\n        const animate = [];\n        columnCheckArr.forEach(el => {\n            el.forEach((el2, i) => {\n                const { index } = el2.data('data');\n                if (!el2.removed) {\n                    const count = el.reduce((p, c, j) => {\n                        if (i < j && c.removed) return (p += 1);\n                        else return p;\n                    }, 0);\n                    if (count > 0) {\n                        const moveIndex = index + columns * count;\n                        const { x, y } = point[moveIndex];\n                        el2.data('data').index = moveIndex;\n                        animate.push(el2.moveAnimate.bind(null, { x: x - size.width / 2, y: y - size.height / 2 }, window.mina.bounce, true));\n                        remainIndex.push(moveIndex);\n                    } else {\n                        remainIndex.push(index);\n                    }\n                }\n            });\n        });\n        const emptyIndex = totalIndex.filter(el => !remainIndex.includes(el));\n\n        await Promise.all(animate.map(el => el()));\n        return emptyIndex;\n    };\n\n    const fillItem = async index => {\n        const nextEmptyIndex = getNextArrayElement(index);\n        const animate = [];\n        shapes.forEach((el, i) => {\n            if (el.removed) {\n                const index = nextEmptyIndex.next().value;\n                const { type, imageIndex: url } = shuffle(getRandomArrayElement(items, 5))[0];\n\n                const { x, y } = point[index];\n                const imageG = image({ canvas: itemG, img: { url, scale: 0.7 }, x, y: 0, center: true });\n\n                imageG\n                    .rect(x - size.width / 2, -size.height / 2, size.width, size.height)\n                    .attr({ stroke: 'blue', opacity: '0' })\n                    .after(imageG.select('use'));\n\n                imageG.data('data', { type, index });\n\n                shapes[i] = D1drag({\n                    dragItem: imageG,\n                    startCallback: () => dragStartCallback(imageG),\n                    moveCallback: () => dragMoveCallback(imageG),\n                    endCallback: () => dragEndCallback(imageG)\n                });\n\n                animate[i] = shapes[i].moveAnimate.bind(null, { x: x - size.width / 2, y: y - size.height / 2 }, window.mina.bounce, true);\n            }\n        });\n        shapes.sort((a, b) => a.data('data').index - b.data('data').index);\n\n        await Promise.all(animate.map(el => el()));\n\n        function* getNextArrayElement(arr) {\n            for (let index = 0; index < arr.length; index++) yield arr[index];\n        }\n    };\n\n    const swapItem = async (first, second) => {\n        const firstIndex = first.data('data').index;\n        const secondIndex = second.data('data').index;\n        const indexes = [secondIndex, firstIndex];\n        const elements = [first, second];\n        const animates = indexes.map((el, i) => {\n            const { x, y } = point[el];\n            return elements[i].moveAnimate.bind(null, { x: x - size.width / 2, y: y - size.height / 2 });\n        });\n\n        await Promise.all(animates.map(el => el()));\n\n        first.data('data').index = secondIndex;\n        second.data('data').index = firstIndex;\n        shapes.sort((a, b) => a.data('data').index - b.data('data').index);\n    };\n\n    const answerCheck = () => {\n        const rowRemoveIndex = rowCheck();\n        const columRemoveIndex = columnCheck();\n        const totalRemoveIndex = getUniquArray([...rowRemoveIndex, ...columRemoveIndex]);\n        return { answer: Boolean(totalRemoveIndex.length > 0), removeIndex: totalRemoveIndex };\n    };\n\n    const rowCheck = () => {\n        let removeTargetIndex = [];\n        const rowCheckArr = get2dimArray(shapes, columns);\n\n        const rowResult = rowCheckArr.map(el3 => {\n            const removeIndex = [];\n            el3.forEach((el, i) => {\n                const currentType = el.data('data').type;\n                removeIndex[i] = [];\n                el3.some((el2, j) => {\n                    if (i > j) return false;\n                    if (currentType === el2.data('data').type) {\n                        removeIndex[i].push(el2.data('data').index);\n                        return false;\n                    } else return true;\n                });\n            });\n            return removeIndex;\n        });\n\n        rowResult.forEach(el =>\n            el.forEach(el2 => {\n                if (el2.length > sameNum - 1) removeTargetIndex = [...removeTargetIndex, ...el2];\n            })\n        );\n\n        return getUniquArray(removeTargetIndex);\n    };\n\n    const columnCheck = () => {\n        let removeTargetIndex = [];\n        const columnCheckArr = getTransposeArray(get2dimArray(shapes, columns));\n        const columnResult = columnCheckArr.map(el3 => {\n            const removeIndex = [];\n            el3.forEach((el, i) => {\n                const currentType = el.data('data').type;\n                removeIndex[i] = [];\n                el3.some((el2, j) => {\n                    if (i > j) return false;\n                    if (currentType === el2.data('data').type) {\n                        removeIndex[i].push(el2.data('data').index);\n                        return false;\n                    } else return true;\n                });\n            });\n            return removeIndex;\n        });\n\n        columnResult.forEach(el =>\n            el.forEach(el2 => {\n                if (el2.length > sameNum - 1) removeTargetIndex = [...removeTargetIndex, ...el2];\n            })\n        );\n        return getUniquArray(removeTargetIndex);\n    };\n\n    const getUserDropElementIndex = userDragItem => {\n        const { cx, cy } = userDragItem.getBBox();\n        const data = userDragItem.data('data');\n        let targetIndex;\n        shapes.some((el, i) => {\n            const shapeBBox = el.getBBox();\n            if (Snap.path.isPointInsideBBox(shapeBBox, cx, cy) && data.index !== i) {\n                targetIndex = i;\n                return true;\n            }\n            return false;\n        });\n        return targetIndex;\n    };\n\n    const start = async () => {\n        const { answer } = answerCheck();\n        answerAnimHandler(answer);\n    };\n\n    start();\n};\n","import Snap from 'sol-common/snap';\n\nexport const getSVGPoint = event => {\n    const svg = document.querySelector('#frame2d');\n    const pt = svg.createSVGPoint();\n    pt.x = event.clientX;\n    pt.y = event.clientY;\n    return pt.matrixTransform(svg.getScreenCTM().inverse());\n};\nexport const getUniquArray = arr => arr.filter((el, i) => arr.indexOf(el) === i);\nexport const get2dimArray = (arr, n) => {\n    const newArray = [];\n    arr.forEach((el, i) => {\n        const q = Math.floor(i / n);\n        const r = i % n;\n        if (r === 0) newArray[q] = [];\n        newArray[q][r] = el;\n    });\n    return newArray;\n};\nexport const getTransposeArray = arr => {\n    const newArray = [];\n    for (let i = 0; i < arr[0].length; i++) {\n        const tempArr = arr.map(el => el[i]);\n        newArray.push(tempArr);\n    }\n    return newArray;\n};\n\nexport const getClassNames = element => element.node.className.baseVal;\n\nexport const getPointInMatrixForm = ({ startPoint = { x: 0, y: 0 }, rows, columns, gap = { x: 0, y: 0 }, reverse = false, center = true }) => {\n    const point = [];\n    const offset = { x: center ? -gap.x * 0.5 * (columns - 1) : 0, y: center ? -gap.y * 0.5 * (rows - 1) : 0 };\n\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < columns; j++) {\n            const index = i * columns + j;\n            const [x, y] = [startPoint.x + gap.x * j + offset.x, startPoint.y + offset.y + (reverse ? -gap.y * i : gap.y * i)];\n            point[index] = { x, y };\n        }\n    }\n    return point;\n};\nexport const getPointInScatterForm = ({ area, pointNum, neighborhood }) => {\n    const points = [];\n    const isPointInsideBBox = (bbox, x, y) => Math.abs(bbox.cx - x) <= bbox.width / 2 && Math.abs(bbox.cy - y) <= bbox.height / 2;\n    const isBBoxIntersect = (bbox1, bbox2) =>\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2);\n\n    const limit = 1000;\n    let n = 0;\n\n    for (let index = 0; index < pointNum; index++) {\n        let repeat = true;\n        while (repeat && n < limit) {\n            const cx = getRandomNumber(area.x + neighborhood.width / 2, area.x + area.width - neighborhood.width / 2);\n            const cy = getRandomNumber(area.y + neighborhood.height / 2, area.y + area.height - neighborhood.height / 2);\n            const boundingBox = {\n                x: cx - neighborhood.width / 2,\n                x2: cx + neighborhood.width / 2,\n                cx,\n                y: cy - neighborhood.height / 2,\n                y2: cy + neighborhood.height / 2,\n                cy,\n                width: neighborhood.width,\n                height: neighborhood.height\n            };\n            const isOverlap = points.some(el => isBBoxIntersect(el, boundingBox));\n            if (!isOverlap) {\n                points.push(boundingBox);\n                repeat = false;\n            }\n            n += 1;\n        }\n    }\n\n    if (n === limit) console.error('CAN NOT GENERATE!!!');\n    return points;\n};\n\nexport const getCloseElement = (targetElement, elements) =>\n    elements.reduce((a, b) => {\n        const currentPoint = targetElement.getBBox().cx;\n        const beforeDx = Math.abs(a.getBBox().cx - currentPoint);\n        const currentDx = Math.abs(b.getBBox().cx - currentPoint);\n        return beforeDx > currentDx ? b : a;\n    }, elements[0]);\n\nexport const wait = (delay = 300) => new Promise(resolve => setTimeout(resolve, delay));\n\nexport const removeArrayElement = (arr, element) => arr.filter(el => el !== element);\nexport const getRandomArrayElement = (arr, n) => {\n    const newArray = shuffle(arr).slice(0, n);\n    while (newArray.length < n) {\n        newArray.push(shuffle(arr)[0]);\n    }\n    return newArray;\n};\nexport const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const getRandomNumberArray = (min, max, n, isUnique = true) => {\n    let randArr = [];\n    let uniqueArr = [];\n    if (isUnique) {\n        while (uniqueArr.length !== n) {\n            for (let index = 0; index < n; index++) {\n                randArr[index] = getRandomNumber(min, max);\n            }\n            uniqueArr = getUniquArray(randArr);\n        }\n    } else {\n        for (let index = 0; index < n; index++) {\n            randArr[index] = getRandomNumber(min, max);\n        }\n    }\n\n    return randArr;\n};\nexport const getSumArray = (arr) => arr.reduce((acc, num) => acc + num);\n\nexport const getSimultaneousEquationConstant = ([x1, y1], [x2, y2]) => {\n    const a = (y2 - y1) / (x2 - x1);\n    const b = y2 - a * x2;\n    return { a, b };\n};\n\nexport const convertToPathStr = {\n    line: ({ x1 = 0, y1 = 0, x2 = 0, y2 = 0 }) => 'M' + [x1, y1] + ' L' + [x2, y2],\n    rect: ({ x = 0, y = 0, width = 0, height = 0 }) => 'M' + [x, y] + ' l' + [0, height] + ' l' + [width, 0] + ' l' + [0, -height] + ' l' + [-width, 0],\n    circle: ({ cx = 0, cy = 0, r = 0 }) => 'M' + [cx + r, cy - r] + 'm' + [-r, 0] + 'a' + [r, r, 0, 1, 1, 0, r * 2] + 'a' + [r, r, 0, 1, 1, 0, -(r * 2)],\n    polygon: (..._rest) => {\n        const rest = Array.isArray(_rest[0]) ? _rest[0] : _rest;\n        return rest.reduce((a, b, i) => {\n            if (i === 0) return (a += b + ',');\n            else if (i === 1) return (a += b + ' ');\n            else if (i % 2 === 0) return (a += 'L' + b + ',');\n            else return (a += b + ' ');\n        }, 'M');\n    }\n};\n\nexport const shuffle = array => {\n    const copyArray = array.map(el => el);\n    for (let i = copyArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const k = copyArray[i];\n        copyArray[i] = copyArray[j];\n        copyArray[j] = k;\n    }\n    return copyArray;\n};\n\nexport const makeArrayNumber = ({ startNum = 1, endNum }) => {\n    const rangeNum = [];\n    for (let i = startNum; i < endNum + 1; i++) {\n        rangeNum.push(i);\n    }\n    return rangeNum;\n};\n\nexport const isSameArray = (a, b) => {\n    let n;\n    if (a.length === b.length) {\n        n = 0;\n        a.forEach((el, i) => {\n            if (el === b[i]) n += 1;\n        });\n    }\n    return n === a.length;\n};\n\nexport const saveImage = svg => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 800;\n    canvas.height = 800;\n    const data = new XMLSerializer().serializeToString(svg);\n    const blob = new Blob([data], { type: 'image/svg+xml' });\n    const img = new Image();\n    const url = URL.createObjectURL(blob);\n    img.src = url;\n\n    img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        canvas.getContext('2d')?.drawImage(img, 0, 0);\n        URL.revokeObjectURL(url);\n        const uri = canvas.toDataURL('image/png').replace('image/png', 'octet/stream');\n        console.log(uri);\n        const a = document.createElement('a');\n        a.href = uri;\n        a.download = 'myPhoto.png';\n        a.click();\n        URL.revokeObjectURL(uri);\n    };\n};\n\nexport const calculateAnswer = (num, sign) => {\n    let ans;\n    switch (sign) {\n        case '+':\n            ans = 0;\n            num.forEach(el => {\n                ans = ans + el;\n            });\n            break;\n        case '-':\n            num.forEach((el, i) => {\n                ans = i === 0 ? el : ans + el;\n            });\n            break;\n        case '*':\n            ans = 1;\n            num.forEach(el => {\n                ans = ans * el;\n            });\n            break;\n        case '/':\n            ans = {};\n            ans.q = Math.floor(num[0] / num[1]);\n            ans.r = num[0] % num[1];\n            break;\n    }\n    return ans;\n};\n","import Snap from 'sol-common/snap';\n\nconst D1Animate = {\n    drawPath: ({ path, duration }) => {\n        const totalLength = path.getTotalLength();\n        const pathStr = path.attr('d');\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const subPath = Snap.path.getSubpath(pathStr, 0, val * totalLength);\n                    path.attr({ d: subPath });\n                },\n                duration,\n                undefined,\n                resolve\n            );\n        });\n    },\n    moveTo: ({ dx, dy, duration, element, r = '' }) => {\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    element.transform(`t ${dx * val} ${dy * val} ${r && 'r ' + r}`);\n                },\n                duration,\n                undefined,\n                resolve\n            );\n        });\n    },\n\n    onPath: ({ path, duration = 3000, element, local = '', easing }) => {\n        const startPt = Snap.path.getPointAtLength(path, 0);\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const { x, y } = Snap.path.getPointAtLength(path, val * Snap.path.getTotalLength(path));\n                    const transform = local + 't' + [x - startPt.x, y - startPt.y];\n                    element.transform(transform);\n                },\n                duration,\n                easing,\n                resolve\n            );\n        });\n    },\n    blink: ({ interval = 0.5, duration = 500, element, opacity = 1 }) => {\n        element.attr({ pointerEvents: 'none' });\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    element.attr({ opacity: val });\n                },\n                duration,\n                val => {\n                    if (val < interval) return (-(1 / interval) * val + 1) * opacity;\n                    else return (1 / (1 - interval)) * (val - interval) * opacity;\n                },\n                resolve\n            );\n        });\n    },\n    flip: ({ front, duration }) => {\n        const { cx } = front.getBBox();\n        return new Promise(resolve => {\n            Snap.animate(0, 1, val => front.transform(Snap.matrix(1 - val, 0, 0, 1, val * cx, 0)), duration, undefined, resolve);\n        });\n    },\n    sliding: ({ element, dx, dy, hiddenTime, duration }) => {\n        const { local } = element.transform();\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const opacity = val < hiddenTime ? 1 : -(1 / (1 - hiddenTime)) * val + 1 / (1 - hiddenTime);\n                    element.attr({ opacity }).transform(local + 't' + [dx * val * val, dy * val * val]);\n                },\n                duration,\n                undefined,\n                () => {\n                    element.remove();\n                    resolve();\n                }\n            );\n        });\n    },\n    rolling: ({ element, directionAngle, duration, multiple, revolutions, easing = window.mina.linear, dxy }) => {\n        const { local } = element.transform();\n        const radius = element.getBBox().w / 2;\n        const radian = directionAngle * (Math.PI / 180);\n        const [x, y] = dxy\n            ? [dxy.x / revolutions / multiple, dxy.y / revolutions / multiple]\n            : [radius * Math.cos(radian) * Math.PI, -radius * Math.sin(radian) * Math.PI];\n        const sign = Math.cos(radian) < 0 ? -1 : 1;\n        const diretion = Math.abs(Math.sin(radian)) === 1 ? -Math.sin(radian) : sign;\n\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const translate = local + 't' + [revolutions * x * multiple * val, revolutions * y * multiple * val];\n                    const rotate = 'r' + diretion * val * (revolutions * 360);\n                    const scale = 's' + (1 + (multiple - 1) * val);\n                    element.transform(translate + rotate + scale);\n                },\n                duration,\n                easing,\n                resolve\n            );\n        });\n    },\n    shake: ({ duration, rotate, element, reverse = true }) => {\n        const sign = reverse ? 1 : -1;\n        const { local } = element.transform();\n        return new Promise(resolve =>\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    if (val < 0.25) val = 4 * val;\n                    else if (val < 0.75) val = -4 * val + 2;\n                    else val = 4 * val - 4;\n                    element.transform(local + 'r' + sign * rotate * val);\n                },\n                duration,\n                undefined,\n                resolve\n            )\n        );\n    },\n    fadeIn: ({ element, duration, from = 0, to = 1 }) => {\n        return new Promise(resolve => {\n            const opacityNum = Number(element.attr('opacity'));\n            Snap.animate(\n                from,\n                to,\n                val => {\n                    element.attr('opacity', opacityNum + (1 - opacityNum) * val);\n                },\n                duration,\n                null,\n                resolve\n            );\n        });\n    },\n    zoom: ({ type, element, duration, begin, end, local = '', from = 0, to = 1 }) => {\n        return new Promise(resolve => {\n            let scale = 0;\n            !begin && (begin = type === 'in' ? 0 : 1);\n            !end && (end = type === 'in' ? 1 : 0);\n\n            Snap.animate(\n                from,\n                to,\n                val => {\n                    scale = type === 'in' ? begin + (1 - begin) * val + (end - 1) : 1 - val + (begin - 1) * (1 - val) + end * val;\n                    element.transform(`${local}s ${scale}`);\n                },\n                duration,\n                null,\n                resolve\n            );\n        });\n    }\n};\n\nexport default D1Animate;\n","import Snap from 'sol-common/snap';\nimport D1Animate from '../utils/D1Animate';\nimport { getRandomNumber } from '../utils/util';\n\nexport default function D1drag({ dragItem, draggingItem, startCallback, moveCallback, endCallback }) {\n    dragItem = dragItem.addClass('cp');\n    draggingItem && draggingItem.attr({ opacity: '0', pointerEvents: 'none' });\n\n    const originPoint = dragItem.getBBox();\n    const dragStart = element => element.data('originTransform', element.transform().local);\n    const dragMove = (elemenet, dx, dy) => {\n        const origin = elemenet.data('originTransform') || '';\n        const snapInvMatrix = elemenet.transform().diffMatrix.invert();\n        dx = snapInvMatrix.x(dx, dy);\n        dy = snapInvMatrix.y(dx, dy);\n        elemenet.transform(origin + 't' + [dx, dy]);\n    };\n    const dragEnd = element => element.data('originTransform', element.transform().local);\n\n    const start = () => {\n        dragStart(dragItem);\n        if (draggingItem) {\n            setDragState(false);\n            dragStart(draggingItem);\n        }\n        if (startCallback) startCallback();\n    };\n    const move = (dx, dy) => {\n        dragMove(dragItem, dx, dy);\n        if (draggingItem) {\n            setDragState(false);\n            dragMove(draggingItem, dx, dy);\n        }\n        if (moveCallback) moveCallback();\n    };\n    const end = () => {\n        dragEnd(dragItem);\n        if (draggingItem) {\n            setDragState(true);\n            dragEnd(draggingItem);\n        }\n        if (endCallback) endCallback();\n    };\n\n    const setDragState = bool => {\n        dragItem.attr({ opacity: Number(bool) });\n        draggingItem.attr({ opacity: Number(!bool) });\n    };\n\n    const animate = async ({ pathStr, easing, randomDuration: _randomDuration }) => {\n        const { local } = dragItem.transform();\n        dragItem.attr({ pointerEvents: 'none' });\n        const randomDuration = _randomDuration ? getRandomNumber(800, 1100) : 500;\n        if (draggingItem) {\n            D1Animate.onPath({ path: pathStr, duration: randomDuration, element: dragItem, local, easing });\n            await D1Animate.onPath({ path: pathStr, duration: randomDuration, element: draggingItem, local, easing });\n        } else {\n            await D1Animate.onPath({ path: pathStr, duration: randomDuration, element: dragItem, local, easing });\n        }\n        dragItem.attr({ pointerEvents: 'auto' });\n    };\n\n    dragItem.spectrumEffect = ({ interval: _interval = 100, duration = 750 }) => {\n        const interval = setInterval(() => {\n            const clone = dragItem.clone();\n            clone.after(dragItem);\n            Snap.animate(\n                1,\n                0,\n                val => clone.attr({ opacity: val }),\n                duration,\n                undefined,\n                () => clone.remove()\n            );\n        }, _interval);\n\n        const remove = () => clearInterval(interval);\n\n        return { remove };\n    };\n\n    dragItem.moveAnimate = async (point, easing, randomDuration) => {\n        const { x, y } = dragItem.getBBox();\n        const pathStr = 'M' + [x, y] + 'L' + [point.x, point.y];\n        await animate({ pathStr, easing, randomDuration });\n    };\n    dragItem.reset = async (dx = 0, dy = 0) => {\n        const { x, y } = dragItem.getBBox();\n        const pathStr = 'M' + [x, y] + 'L' + [originPoint.x + dx, originPoint.y + dy];\n        await animate({ pathStr });\n    };\n    dragItem.moveAnimateWithScale = ({ dx, dy, scale }) => {\n        const { local } = dragItem.transform();\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const move = 't' + [val * dx, val * dy];\n                    const _scale = 's' + (1 - ((scale.from - scale.to) / scale.from) * val);\n                    dragItem.transform(local + move + _scale);\n                },\n                750,\n                undefined,\n                resolve\n            );\n        });\n    };\n    dragItem.hidden = () => dragItem.attr({ opacity: '0', pointerEvents: 'none' });\n    dragItem.drag(move, start, end);\n\n    return dragItem;\n}\n"],"sourceRoot":""}