{"version":3,"sources":["webpack:///./src/modules/DM000004.js","webpack:///./src/libs/D1checkShape.js","webpack:///./src/utils/util.js","webpack:///./src/utils/D1Animate.js","webpack:///./src/components/D1drag.js","webpack:///./src/assets/images/D1circle.svg","webpack:///./src/assets/images/D1rect.svg","webpack:///./src/assets/images/D1triangle.svg"],"names":["DM000004","canvas","SOL","SVG","p","g","background","callback","shapes","drag","backgroundG","addClass","checkG","drawBackground","_image","image","x","y","url","imageIndex","scale","img","center","drawCheck","attr","pointerEvents","shapesG","dragG","hintG","feedbackG","D1Shape","D1DragItems","dropItemBBoxes","userAnswerCount","isHint","handHint","dragStartCallback","self","append","parent","remove","dragMoveCallback","setShapeFillColor","dragEndCallback","dropIndex","getUserDropElementIndex","answer","D1type","done","feedback","el","bool","answerHandler","resetDragItem","setHintState","rearrangeDragItems","animates","shapeList","map","shapeNum","reduce","a","b","i","getBBox","cx","cy","type","getPointInMatrixForm","startPoint","rows","columns","gap","forEach","filter","el2","el3","w","h","push","moveAnimate","bind","Promise","all","length","wait","dragItem","spectrum","spectrumEffect","interval","duration","reset","D1class","D1original","target","classes","default","choice","removeClass","Number","dragItemBBox","targetIndex","undefined","hintIndex","findIndex","some","Snap","path","isBBoxIntersect","targetDragItem","targetDropElement","find","dragX","dragY","dropX","dropY","hint","XY","moveTo","pathStr","shakeDragItem","index","D1Animate","shake","rotate","element","reverse","Boolean","animate1","animate2","generate","common","items","centerOffest","shapeImageSrc","circle","D1circle","rect","D1rect","triangle","D1triangle","shffleItems","shuffle","slice","point","className","offset","itemG","loadShape","loadImage","src","key","rx","ry","shape","use","transform","appendTo","original","select","children","drawShape","includes","selectIndexList","selectIndex","remainSelectIndexList","remainDragNum","dragNum","remainSelectIndex","getRandomArrayElement","totalSelectIndex","shuffleTotalSelectIndex","dragItemContainer","dragItemG","draggingItemG","D1drag","draggingItem","startCallback","moveCallback","endCallback","drawDragItems","start","D1checkShape","end","console","log","getUniquArray","arr","indexOf","get2dimArray","n","newArray","q","Math","floor","r","getTransposeArray","tempArr","j","getPointInScatterForm","area","pointNum","neighborhood","points","isPointInsideBBox","bbox","abs","width","height","repeat","getRandomNumber","boundingBox","x2","y2","bbox2","bbox1","error","delay","resolve","setTimeout","min","max","random","getRandomNumberArray","isUnique","randArr","uniqueArr","getSumArray","acc","num","getSimultaneousEquationConstant","x1","y1","convertToPathStr","line","polygon","_rest","rest","Array","isArray","array","copyArray","k","makeArrayNumber","startNum","endNum","rangeNum","isSameArray","saveImage","svg","document","createElement","data","XMLSerializer","serializeToString","blob","Blob","Image","URL","createObjectURL","onload","getContext","drawImage","revokeObjectURL","uri","toDataURL","replace","href","download","click","calculateAnswer","sign","ans","drawPath","totalLength","getTotalLength","animate","val","subPath","getSubpath","d","dx","dy","onPath","local","easing","startPt","getPointAtLength","blink","opacity","flip","front","matrix","sliding","hiddenTime","rolling","directionAngle","multiple","revolutions","window","mina","linear","dxy","radius","radian","PI","cos","sin","diretion","translate","fadeIn","from","to","opacityNum","zoom","begin","originPoint","dragStart","dragMove","elemenet","origin","snapInvMatrix","diffMatrix","invert","dragEnd","setDragState","_randomDuration","randomDuration","_interval","setInterval","clone","after","clearInterval","moveAnimateWithScale","move","_scale","hidden","module","exports"],"mappings":"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","file":"static/js/6.4a7a0041.chunk.js","sourcesContent":["import { hint, image, loadImage } from 'sol-common';\nimport Snap from 'sol-common/snap';\nimport { SOL } from 'sol-common/util';\n\nimport D1checkShape from '../libs/D1checkShape';\n\nexport default function DM000004({ canvas = SOL.SVG, ...p }) {\n    const g = canvas;\n    const callback = p.callback;\n\n    const background = p.background;\n    const shapes = p.shapes;\n    const drag = p.drag;\n\n    const backgroundG = g.g().addClass('D1-background');\n    const checkG = g.g().addClass('D1-check');\n\n    const drawBackground = () => {\n        const { image: _image } = background;\n        const { x, y, imageIndex: url, scale } = _image;\n        image({ canvas: backgroundG, x, y, img: { url, scale }, center: true });\n    };\n\n    const drawCheck = () => {\n        const D1CheckShape = D1checkShape({\n            g: checkG,\n            shapes,\n            drag,\n            callback: end => {\n                console.log(end);\n            }\n        });\n\n        D1CheckShape.start();\n    };\n\n    const start = async () => {\n        drawBackground();\n        drawCheck();\n    };\n\n    start();\n}\n","import { hint, image, loadImage } from 'sol-common';\nimport { feedback } from 'sol-common/util';\nimport Snap from 'sol-common/snap';\nimport D1circle from '../assets/images/D1circle.svg';\nimport D1rect from '../assets/images/D1rect.svg';\nimport D1triangle from '../assets/images/D1triangle.svg';\nimport D1drag from '../components/D1drag';\nimport D1Animate from '../utils/D1Animate';\nimport { getPointInMatrixForm, getRandomArrayElement, shuffle, wait } from '../utils/util';\n\nexport default function D1checkShape({ g, shapes, drag, callback }) {\n    g.attr({ pointerEvents: 'none' });\n    const shapesG = g.g().addClass('D1-shapes');\n    const dragG = g.g().addClass('D1-drag');\n    const hintG = g.g().addClass('D1-hint');\n    const feedbackG = g;\n\n    let D1Shape = [];\n    let D1DragItems = [];\n    let dropItemBBoxes = [];\n\n    let userAnswerCount = 0;\n    let hintCount = 1;\n    let isHint = true;\n    let handHint = null;\n\n    const drawShape = () => {\n        const { generate, common, items } = shapes;\n        const { centerOffest = { x: 0, y: 0 } } = common;\n        const shapeImageSrc = { circle: D1circle, rect: D1rect, triangle: D1triangle };\n        const shffleItems = shuffle(items).slice(0, generate.shapeNum);\n\n        const point = getPointInMatrixForm({\n            startPoint: { x: 400 + centerOffest.x, y: 200 + centerOffest.y },\n            rows: 1,\n            columns: shffleItems.length,\n            gap: { x: common.gap, y: 0 },\n            center: true\n        });\n\n        D1Shape = shffleItems.map((el, i) => {\n            const { type, scale = common.scale, className = common.className, offset = common.offset || { x: 0, y: 0 } } = el;\n            const itemG = shapesG.g().addClass('D1-shapes-item');\n            const loadShape = loadImage({ src: shapeImageSrc[type], key: `D1shape-${type}`, type: 'svg', rx: 0, ry: 0 });\n            const { w, h } = loadShape.getBBox();\n            const { x, y } = point[i];\n\n            const shape = loadShape\n                .use()\n                .transform('t' + [x + offset.x - w / 2, y + offset.y - h / 2] + 's' + scale)\n                .appendTo(itemG);\n\n            const original = shape.original.select('g').children()[1];\n            original.addClass(className.default);\n            dropItemBBoxes.push(shape.getBBox());\n\n            shape.D1original = original;\n            shape.D1type = type;\n            shape.D1class = className;\n\n            return shape;\n        });\n    };\n\n    const drawDragItems = () => {\n        const { generate, common, items } = drag;\n        const { centerOffest = { x: 0, y: 0 } } = common;\n        const shapeList = D1Shape.map(el => el.D1type);\n        const shffleItems = shuffle(items.filter(el => shapeList.includes(el.type)));\n\n        //그릴 이미지 선정\n        const selectIndexList = shffleItems.map((el, i) => i);\n        const selectIndex = shapeList.map(el => shffleItems.findIndex(el2 => el === el2.type)); // 초기 1개값 넣어주기\n        const remainSelectIndexList = selectIndexList.filter(el => !selectIndex.includes(el));\n        const remainDragNum = generate.dragNum - selectIndex.length;\n        const remainSelectIndex = getRandomArrayElement(remainSelectIndexList, remainDragNum);\n        const totalSelectIndex = [...selectIndex, ...remainSelectIndex];\n        const shuffleTotalSelectIndex = shuffle(totalSelectIndex);\n\n        const point = getPointInMatrixForm({\n            startPoint: { x: 400 + centerOffest.x, y: 420 + centerOffest.y },\n            rows: 1,\n            columns: generate.dragNum,\n            gap: { x: common.gap, y: 0 },\n            center: true\n        });\n\n        D1DragItems = shuffleTotalSelectIndex.map((el, i) => {\n            const target = shffleItems[el];\n            const { type, imageIndex: url, scale = common.scale, offset = common.offset || { x: 0, y: 0 } } = target;\n            const dragItemContainer = dragG.g().addClass('D1-drag-items');\n            const dragItemG = dragItemContainer.g().addClass('D1-drag-item');\n            const draggingItemG = dragItemContainer.g().addClass('D1-dragging-item');\n            const { x, y } = point[i];\n\n            image({ canvas: dragItemG, x: x + offset.x, y: y + offset.y, img: { url, scale }, center: true });\n            image({ canvas: draggingItemG, x: x + offset.x, y: y + offset.y, img: { url, scale: scale * 1.3 }, center: true });\n\n            dragItemG.D1type = type;\n\n            return D1drag({\n                dragItem: dragItemG,\n                draggingItem: draggingItemG,\n                startCallback: () => dragStartCallback(dragItemG),\n                moveCallback: () => dragMoveCallback(dragItemG),\n                endCallback: () => dragEndCallback(dragItemG)\n            });\n        });\n    };\n\n    const dragStartCallback = self => {\n        dragG.append(self.parent());\n        if (handHint) handHint.remove();\n    };\n    const dragMoveCallback = self => setShapeFillColor(self);\n    const dragEndCallback = async self => {\n        const dropIndex = getUserDropElementIndex(self);\n        self.attr({ pointerEvents: 'none' });\n        setShapeFillColor();\n        if (typeof dropIndex === 'number') {\n            const answer = self.D1type === D1Shape[dropIndex].D1type;\n            if (answer) {\n                self.done = true;\n                self.dropIndex = dropIndex;\n                feedback({ canvas: feedbackG, el: self, bool: answer, scale: 0.8 });\n                answerHandler();\n            } else {\n                feedback({ canvas: feedbackG, el: self, bool: answer, scale: 0.8 });\n                await resetDragItem(self);\n                self.attr({ pointerEvents: 'auto' });\n            }\n        } else {\n            await resetDragItem(self);\n            self.attr({ pointerEvents: 'auto' });\n        }\n        isHint && setHintState();\n    };\n\n    const answerHandler = async () => {\n        userAnswerCount += 1;\n\n        if (userAnswerCount === D1DragItems.length) {\n            await rearrangeDragItems();\n            D1DragItems.forEach(el => el.attr({ pointerEvents: 'none' }));\n            await wait(100);\n            D1Shape.forEach(el => el.remove());\n        }\n\n        callback();\n\n        async function rearrangeDragItems() {\n            const animates = [];\n            const shapeList = D1Shape.map(el => el.D1type);\n            const shapeNum = D1DragItems.reduce((a, b) => {\n                if (a[b.D1type]) a[b.D1type] += 1;\n                else a[b.D1type] = 1;\n\n                return a;\n            }, {});\n            const point = shapeList.map((el, i) => {\n                const { cx, cy } = D1Shape[i].getBBox();\n                const point = getPointInMatrixForm({\n                    startPoint: { x: cx, y: cy },\n                    rows: 1,\n                    columns: shapeNum[el],\n                    gap: { x: 90, y: 0 },\n                    center: true\n                });\n                return { type: el, center: { cx, cy }, ...point };\n            });\n\n            point.forEach(el => {\n                const targetList = D1DragItems.filter(el2 => el2.D1type === el.type);\n                targetList.forEach((el3, i) => {\n                    const { w, h } = el3.getBBox();\n                    animates.push(el3.moveAnimate.bind(null, { x: el[i].x - w / 2, y: el[i].y - h / 2 }));\n                });\n            });\n\n            await Promise.all(animates.map(el => el()));\n        }\n    };\n\n    const resetDragItem = async dragItem => {\n        const spectrum = dragItem.spectrumEffect({ interval: 100, duration: 750 });\n        await dragItem.reset();\n        spectrum.remove();\n    };\n\n    const setShapeFillColor = dragG => {\n        const dropIndex = dragG && getUserDropElementIndex(dragG);\n        if (typeof dropIndex === 'number') {\n            D1Shape.forEach((el, i) => {\n                const { D1class, D1original } = el;\n                const target = dropIndex === i;\n                const classes = [D1class.default, D1class.choice];\n                D1original.removeClass(classes[Number(!target)]).addClass(classes[Number(target)]);\n            });\n        } else {\n            D1Shape.forEach(el => {\n                const { D1class, D1original } = el;\n                D1original.removeClass(D1class.choice).addClass(D1class.default);\n            });\n        }\n    };\n\n    const getUserDropElementIndex = dragG => {\n        const dragItemBBox = dragG.parent().getBBox();\n        let targetIndex = undefined;\n        const hintIndex = D1Shape.findIndex(el => el.D1type === dragG.D1type);\n        const realDropBBoxes = isHint ? dropItemBBoxes.filter((el, i) => i === hintIndex) : dropItemBBoxes;\n\n        realDropBBoxes.some((el, i) => {\n            if (Snap.path.isBBoxIntersect(dragItemBBox, el)) {\n                targetIndex = isHint ? hintIndex : i;\n                return true;\n            } else {\n                targetIndex = undefined;\n                return false;\n            }\n        });\n        return targetIndex;\n    };\n\n    const setHintState = () => {\n        D1DragItems.forEach(el => el.attr({ pointerEvents: 'none' }));\n        if (userAnswerCount < hintCount) {\n            const targetDragItem = D1DragItems[userAnswerCount].attr({ pointerEvents: 'auto' });\n            const targetDropElement = D1Shape.find(el => el.D1type === targetDragItem.D1type);\n            const { cx: dragX, cy: dragY } = targetDragItem.getBBox();\n            const { cx: dropX, cy: dropY } = targetDropElement?.getBBox() || {};\n            handHint = hint({ canvas: hintG, scale: 0.8, type: 1, XY: [dragX, dragY], moveTo: [dropX, dropY], pathStr: undefined });\n        } else {\n            D1DragItems.forEach(el => !el.done && el.attr({ pointerEvents: 'auto' }));\n            isHint = false;\n        }\n    };\n\n    const shakeDragItem = async index => {\n        if (typeof index === 'number') {\n            const target = D1DragItems[index];\n            target.attr({ pointerEvents: 'none' });\n            await D1Animate.shake({ duration: 1000, rotate: 8, element: D1DragItems[index], reverse: Boolean(index % 2) });\n            await D1Animate.shake({ duration: 1000, rotate: 10, element: D1DragItems[index], reverse: Boolean(index % 2) });\n            target.attr({ pointerEvents: 'auto' });\n        } else {\n            const animate1 = [];\n            const animate2 = [];\n            D1DragItems.forEach((el, i) => {\n                el.attr({ pointerEvents: 'none' });\n                animate1.push(D1Animate.shake.bind(null, { duration: 1000, rotate: 8, element: el, reverse: Boolean(i % 2) }));\n                animate2.push(D1Animate.shake.bind(null, { duration: 1000, rotate: 10, element: el, reverse: Boolean(i % 2) }));\n            });\n\n            await Promise.all(animate1.map(el => el()));\n            await Promise.all(animate2.map(el => el()));\n\n            D1DragItems.forEach(el => el.attr({ pointerEvents: 'auto' }));\n        }\n    };\n\n    drawShape();\n    drawDragItems();\n\n    g.start = async () => {\n        g.attr({ pointerEvents: 'auto' });\n        await shakeDragItem();\n        isHint && setHintState();\n    };\n\n    return g;\n}\n","import Snap from 'sol-common/snap';\n\nexport const getSVGPoint = event => {\n    const svg = document.querySelector('#frame2d');\n    const pt = svg.createSVGPoint();\n    pt.x = event.clientX;\n    pt.y = event.clientY;\n    return pt.matrixTransform(svg.getScreenCTM().inverse());\n};\nexport const getUniquArray = arr => arr.filter((el, i) => arr.indexOf(el) === i);\nexport const get2dimArray = (arr, n) => {\n    const newArray = [];\n    arr.forEach((el, i) => {\n        const q = Math.floor(i / n);\n        const r = i % n;\n        if (r === 0) newArray[q] = [];\n        newArray[q][r] = el;\n    });\n    return newArray;\n};\nexport const getTransposeArray = arr => {\n    const newArray = [];\n    for (let i = 0; i < arr[0].length; i++) {\n        const tempArr = arr.map(el => el[i]);\n        newArray.push(tempArr);\n    }\n    return newArray;\n};\n\nexport const getClassNames = element => element.node.className.baseVal;\n\nexport const getPointInMatrixForm = ({ startPoint = { x: 0, y: 0 }, rows, columns, gap = { x: 0, y: 0 }, reverse = false, center = true }) => {\n    const point = [];\n    const offset = { x: center ? -gap.x * 0.5 * (columns - 1) : 0, y: center ? -gap.y * 0.5 * (rows - 1) : 0 };\n\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < columns; j++) {\n            const index = i * columns + j;\n            const [x, y] = [startPoint.x + gap.x * j + offset.x, startPoint.y + offset.y + (reverse ? -gap.y * i : gap.y * i)];\n            point[index] = { x, y };\n        }\n    }\n    return point;\n};\nexport const getPointInScatterForm = ({ area, pointNum, neighborhood }) => {\n    const points = [];\n    const isPointInsideBBox = (bbox, x, y) => Math.abs(bbox.cx - x) <= bbox.width / 2 && Math.abs(bbox.cy - y) <= bbox.height / 2;\n    const isBBoxIntersect = (bbox1, bbox2) =>\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2);\n\n    const limit = 1000;\n    let n = 0;\n\n    for (let index = 0; index < pointNum; index++) {\n        let repeat = true;\n        while (repeat && n < limit) {\n            const cx = getRandomNumber(area.x + neighborhood.width / 2, area.x + area.width - neighborhood.width / 2);\n            const cy = getRandomNumber(area.y + neighborhood.height / 2, area.y + area.height - neighborhood.height / 2);\n            const boundingBox = {\n                x: cx - neighborhood.width / 2,\n                x2: cx + neighborhood.width / 2,\n                cx,\n                y: cy - neighborhood.height / 2,\n                y2: cy + neighborhood.height / 2,\n                cy,\n                width: neighborhood.width,\n                height: neighborhood.height\n            };\n            const isOverlap = points.some(el => isBBoxIntersect(el, boundingBox));\n            if (!isOverlap) {\n                points.push(boundingBox);\n                repeat = false;\n            }\n            n += 1;\n        }\n    }\n\n    if (n === limit) console.error('CAN NOT GENERATE!!!');\n    return points;\n};\n\nexport const getCloseElement = (targetElement, elements) =>\n    elements.reduce((a, b) => {\n        const currentPoint = targetElement.getBBox().cx;\n        const beforeDx = Math.abs(a.getBBox().cx - currentPoint);\n        const currentDx = Math.abs(b.getBBox().cx - currentPoint);\n        return beforeDx > currentDx ? b : a;\n    }, elements[0]);\n\nexport const wait = (delay = 300) => new Promise(resolve => setTimeout(resolve, delay));\n\nexport const removeArrayElement = (arr, element) => arr.filter(el => el !== element);\nexport const getRandomArrayElement = (arr, n) => {\n    const newArray = shuffle(arr).slice(0, n);\n    while (newArray.length < n) {\n        newArray.push(shuffle(arr)[0]);\n    }\n    return newArray;\n};\nexport const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const getRandomNumberArray = (min, max, n, isUnique = true) => {\n    let randArr = [];\n    let uniqueArr = [];\n    if (isUnique) {\n        while (uniqueArr.length !== n) {\n            for (let index = 0; index < n; index++) {\n                randArr[index] = getRandomNumber(min, max);\n            }\n            uniqueArr = getUniquArray(randArr);\n        }\n    } else {\n        for (let index = 0; index < n; index++) {\n            randArr[index] = getRandomNumber(min, max);\n        }\n    }\n\n    return randArr;\n};\nexport const getSumArray = (arr) => arr.reduce((acc, num) => acc + num);\n\nexport const getSimultaneousEquationConstant = ([x1, y1], [x2, y2]) => {\n    const a = (y2 - y1) / (x2 - x1);\n    const b = y2 - a * x2;\n    return { a, b };\n};\n\nexport const convertToPathStr = {\n    line: ({ x1 = 0, y1 = 0, x2 = 0, y2 = 0 }) => 'M' + [x1, y1] + ' L' + [x2, y2],\n    rect: ({ x = 0, y = 0, width = 0, height = 0 }) => 'M' + [x, y] + ' l' + [0, height] + ' l' + [width, 0] + ' l' + [0, -height] + ' l' + [-width, 0],\n    circle: ({ cx = 0, cy = 0, r = 0 }) => 'M' + [cx + r, cy - r] + 'm' + [-r, 0] + 'a' + [r, r, 0, 1, 1, 0, r * 2] + 'a' + [r, r, 0, 1, 1, 0, -(r * 2)],\n    polygon: (..._rest) => {\n        const rest = Array.isArray(_rest[0]) ? _rest[0] : _rest;\n        return rest.reduce((a, b, i) => {\n            if (i === 0) return (a += b + ',');\n            else if (i === 1) return (a += b + ' ');\n            else if (i % 2 === 0) return (a += 'L' + b + ',');\n            else return (a += b + ' ');\n        }, 'M');\n    }\n};\n\nexport const shuffle = array => {\n    const copyArray = array.map(el => el);\n    for (let i = copyArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const k = copyArray[i];\n        copyArray[i] = copyArray[j];\n        copyArray[j] = k;\n    }\n    return copyArray;\n};\n\nexport const makeArrayNumber = ({ startNum = 1, endNum }) => {\n    const rangeNum = [];\n    for (let i = startNum; i < endNum + 1; i++) {\n        rangeNum.push(i);\n    }\n    return rangeNum;\n};\n\nexport const isSameArray = (a, b) => {\n    let n;\n    if (a.length === b.length) {\n        n = 0;\n        a.forEach((el, i) => {\n            if (el === b[i]) n += 1;\n        });\n    }\n    return n === a.length;\n};\n\nexport const saveImage = svg => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 800;\n    canvas.height = 800;\n    const data = new XMLSerializer().serializeToString(svg);\n    const blob = new Blob([data], { type: 'image/svg+xml' });\n    const img = new Image();\n    const url = URL.createObjectURL(blob);\n    img.src = url;\n\n    img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        canvas.getContext('2d')?.drawImage(img, 0, 0);\n        URL.revokeObjectURL(url);\n        const uri = canvas.toDataURL('image/png').replace('image/png', 'octet/stream');\n        console.log(uri);\n        const a = document.createElement('a');\n        a.href = uri;\n        a.download = 'myPhoto.png';\n        a.click();\n        URL.revokeObjectURL(uri);\n    };\n};\n\nexport const calculateAnswer = (num, sign) => {\n    let ans;\n    switch (sign) {\n        case '+':\n            ans = 0;\n            num.forEach(el => {\n                ans = ans + el;\n            });\n            break;\n        case '-':\n            num.forEach((el, i) => {\n                ans = i === 0 ? el : ans + el;\n            });\n            break;\n        case '*':\n            ans = 1;\n            num.forEach(el => {\n                ans = ans * el;\n            });\n            break;\n        case '/':\n            ans = {};\n            ans.q = Math.floor(num[0] / num[1]);\n            ans.r = num[0] % num[1];\n            break;\n    }\n    return ans;\n};\n","import Snap from 'sol-common/snap';\n\nconst D1Animate = {\n    drawPath: ({ path, duration }) => {\n        const totalLength = path.getTotalLength();\n        const pathStr = path.attr('d');\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const subPath = Snap.path.getSubpath(pathStr, 0, val * totalLength);\n                    path.attr({ d: subPath });\n                },\n                duration,\n                undefined,\n                resolve\n            );\n        });\n    },\n    moveTo: ({ dx, dy, duration, element, r = '' }) => {\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    element.transform(`t ${dx * val} ${dy * val} ${r && 'r ' + r}`);\n                },\n                duration,\n                undefined,\n                resolve\n            );\n        });\n    },\n\n    onPath: ({ path, duration = 3000, element, local = '', easing }) => {\n        const startPt = Snap.path.getPointAtLength(path, 0);\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const { x, y } = Snap.path.getPointAtLength(path, val * Snap.path.getTotalLength(path));\n                    const transform = local + 't' + [x - startPt.x, y - startPt.y];\n                    element.transform(transform);\n                },\n                duration,\n                easing,\n                resolve\n            );\n        });\n    },\n    blink: ({ interval = 0.5, duration = 500, element, opacity = 1 }) => {\n        element.attr({ pointerEvents: 'none' });\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    element.attr({ opacity: val });\n                },\n                duration,\n                val => {\n                    if (val < interval) return (-(1 / interval) * val + 1) * opacity;\n                    else return (1 / (1 - interval)) * (val - interval) * opacity;\n                },\n                resolve\n            );\n        });\n    },\n    flip: ({ front, duration }) => {\n        const { cx } = front.getBBox();\n        return new Promise(resolve => {\n            Snap.animate(0, 1, val => front.transform(Snap.matrix(1 - val, 0, 0, 1, val * cx, 0)), duration, undefined, resolve);\n        });\n    },\n    sliding: ({ element, dx, dy, hiddenTime, duration }) => {\n        const { local } = element.transform();\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const opacity = val < hiddenTime ? 1 : -(1 / (1 - hiddenTime)) * val + 1 / (1 - hiddenTime);\n                    element.attr({ opacity }).transform(local + 't' + [dx * val * val, dy * val * val]);\n                },\n                duration,\n                undefined,\n                () => {\n                    element.remove();\n                    resolve();\n                }\n            );\n        });\n    },\n    rolling: ({ element, directionAngle, duration, multiple, revolutions, easing = window.mina.linear, dxy }) => {\n        const { local } = element.transform();\n        const radius = element.getBBox().w / 2;\n        const radian = directionAngle * (Math.PI / 180);\n        const [x, y] = dxy\n            ? [dxy.x / revolutions / multiple, dxy.y / revolutions / multiple]\n            : [radius * Math.cos(radian) * Math.PI, -radius * Math.sin(radian) * Math.PI];\n        const sign = Math.cos(radian) < 0 ? -1 : 1;\n        const diretion = Math.abs(Math.sin(radian)) === 1 ? -Math.sin(radian) : sign;\n\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const translate = local + 't' + [revolutions * x * multiple * val, revolutions * y * multiple * val];\n                    const rotate = 'r' + diretion * val * (revolutions * 360);\n                    const scale = 's' + (1 + (multiple - 1) * val);\n                    element.transform(translate + rotate + scale);\n                },\n                duration,\n                easing,\n                resolve\n            );\n        });\n    },\n    shake: ({ duration, rotate, element, reverse = true }) => {\n        const sign = reverse ? 1 : -1;\n        const { local } = element.transform();\n        return new Promise(resolve =>\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    if (val < 0.25) val = 4 * val;\n                    else if (val < 0.75) val = -4 * val + 2;\n                    else val = 4 * val - 4;\n                    element.transform(local + 'r' + sign * rotate * val);\n                },\n                duration,\n                undefined,\n                resolve\n            )\n        );\n    },\n    fadeIn: ({ element, duration, from = 0, to = 1 }) => {\n        return new Promise(resolve => {\n            const opacityNum = Number(element.attr('opacity'));\n            Snap.animate(\n                from,\n                to,\n                val => {\n                    element.attr('opacity', opacityNum + (1 - opacityNum) * val);\n                },\n                duration,\n                null,\n                resolve\n            );\n        });\n    },\n    zoom: ({ type, element, duration, begin, end, local = '', from = 0, to = 1 }) => {\n        return new Promise(resolve => {\n            let scale = 0;\n            !begin && (begin = type === 'in' ? 0 : 1);\n            !end && (end = type === 'in' ? 1 : 0);\n\n            Snap.animate(\n                from,\n                to,\n                val => {\n                    scale = type === 'in' ? begin + (1 - begin) * val + (end - 1) : 1 - val + (begin - 1) * (1 - val) + end * val;\n                    element.transform(`${local}s ${scale}`);\n                },\n                duration,\n                null,\n                resolve\n            );\n        });\n    }\n};\n\nexport default D1Animate;\n","import Snap from 'sol-common/snap';\nimport D1Animate from '../utils/D1Animate';\nimport { getRandomNumber } from '../utils/util';\n\nexport default function D1drag({ dragItem, draggingItem, startCallback, moveCallback, endCallback }) {\n    dragItem = dragItem.addClass('cp');\n    draggingItem && draggingItem.attr({ opacity: '0', pointerEvents: 'none' });\n\n    const originPoint = dragItem.getBBox();\n    const dragStart = element => element.data('originTransform', element.transform().local);\n    const dragMove = (elemenet, dx, dy) => {\n        const origin = elemenet.data('originTransform') || '';\n        const snapInvMatrix = elemenet.transform().diffMatrix.invert();\n        dx = snapInvMatrix.x(dx, dy);\n        dy = snapInvMatrix.y(dx, dy);\n        elemenet.transform(origin + 't' + [dx, dy]);\n    };\n    const dragEnd = element => element.data('originTransform', element.transform().local);\n\n    const start = () => {\n        dragStart(dragItem);\n        if (draggingItem) {\n            setDragState(false);\n            dragStart(draggingItem);\n        }\n        if (startCallback) startCallback();\n    };\n    const move = (dx, dy) => {\n        dragMove(dragItem, dx, dy);\n        if (draggingItem) {\n            setDragState(false);\n            dragMove(draggingItem, dx, dy);\n        }\n        if (moveCallback) moveCallback();\n    };\n    const end = () => {\n        dragEnd(dragItem);\n        if (draggingItem) {\n            setDragState(true);\n            dragEnd(draggingItem);\n        }\n        if (endCallback) endCallback();\n    };\n\n    const setDragState = bool => {\n        dragItem.attr({ opacity: Number(bool) });\n        draggingItem.attr({ opacity: Number(!bool) });\n    };\n\n    const animate = async ({ pathStr, easing, randomDuration: _randomDuration }) => {\n        const { local } = dragItem.transform();\n        dragItem.attr({ pointerEvents: 'none' });\n        const randomDuration = _randomDuration ? getRandomNumber(800, 1100) : 500;\n        if (draggingItem) {\n            D1Animate.onPath({ path: pathStr, duration: randomDuration, element: dragItem, local, easing });\n            await D1Animate.onPath({ path: pathStr, duration: randomDuration, element: draggingItem, local, easing });\n        } else {\n            await D1Animate.onPath({ path: pathStr, duration: randomDuration, element: dragItem, local, easing });\n        }\n        dragItem.attr({ pointerEvents: 'auto' });\n    };\n\n    dragItem.spectrumEffect = ({ interval: _interval = 100, duration = 750 }) => {\n        const interval = setInterval(() => {\n            const clone = dragItem.clone();\n            clone.after(dragItem);\n            Snap.animate(\n                1,\n                0,\n                val => clone.attr({ opacity: val }),\n                duration,\n                undefined,\n                () => clone.remove()\n            );\n        }, _interval);\n\n        const remove = () => clearInterval(interval);\n\n        return { remove };\n    };\n\n    dragItem.moveAnimate = async (point, easing, randomDuration) => {\n        const { x, y } = dragItem.getBBox();\n        const pathStr = 'M' + [x, y] + 'L' + [point.x, point.y];\n        await animate({ pathStr, easing, randomDuration });\n    };\n    dragItem.reset = async (dx = 0, dy = 0) => {\n        const { x, y } = dragItem.getBBox();\n        const pathStr = 'M' + [x, y] + 'L' + [originPoint.x + dx, originPoint.y + dy];\n        await animate({ pathStr });\n    };\n    dragItem.moveAnimateWithScale = ({ dx, dy, scale }) => {\n        const { local } = dragItem.transform();\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const move = 't' + [val * dx, val * dy];\n                    const _scale = 's' + (1 - ((scale.from - scale.to) / scale.from) * val);\n                    dragItem.transform(local + move + _scale);\n                },\n                750,\n                undefined,\n                resolve\n            );\n        });\n    };\n    dragItem.hidden = () => dragItem.attr({ opacity: '0', pointerEvents: 'none' });\n    dragItem.drag(move, start, end);\n\n    return dragItem;\n}\n","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"221px\\\" height=\\\"221px\\\" viewBox=\\\"0 0 221 221\\\" style=\\\"enable-background:new 0 0 221 221;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#FFFFFF;} .st1{stroke:#999999;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:10.1323,15.1985;} </style><g><circle class=\\\"st0\\\" cx=\\\"110.5\\\" cy=\\\"110.5\\\" r=\\\"108.8\\\"></circle><circle class=\\\"st1\\\" cx=\\\"110.5\\\" cy=\\\"110.5\\\" r=\\\"108.8\\\"></circle></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"203px\\\" height=\\\"203px\\\" viewBox=\\\"0 0 203 203\\\" style=\\\"enable-background:new 0 0 203 203;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#FFFFFF;} .st1{stroke:#999999;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:10.1097,15.1645;} </style><g><path class=\\\"st0\\\" d=\\\"M192.6,201.3H10.4c-4.8,0-8.7-3.9-8.7-8.7V10.4c0-4.8,3.9-8.7,8.7-8.7h182.2c4.8,0,8.7,3.9,8.7,8.7v182.2 C201.3,197.4,197.4,201.3,192.6,201.3z\\\"></path><path class=\\\"st1\\\" d=\\\"M192.6,201.3H10.4c-4.8,0-8.7-3.9-8.7-8.7V10.4c0-4.8,3.9-8.7,8.7-8.7h182.2c4.8,0,8.7,3.9,8.7,8.7v182.2 C201.3,197.4,197.4,201.3,192.6,201.3z\\\"></path></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"234px\\\" height=\\\"205px\\\" viewBox=\\\"0 0 234 205\\\" style=\\\"enable-background:new 0 0 234 205;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#FFFFFF;} .st1{stroke:#999999;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:9.9134,14.8701;} </style><g><path class=\\\"st0\\\" d=\\\"M109.5,5.9L2.9,190.4c-3.4,5.8,0.8,13.1,7.5,13.1h213.2c6.7,0,10.9-7.3,7.5-13.1L124.5,5.9 C121.2,0.1,112.8,0.1,109.5,5.9z\\\"></path><path class=\\\"st1\\\" d=\\\"M109.5,5.9L2.9,190.4c-3.4,5.8,0.8,13.1,7.5,13.1h213.2c6.7,0,10.9-7.3,7.5-13.1L124.5,5.9 C121.2,0.1,112.8,0.1,109.5,5.9z\\\"></path></g></svg>\""],"sourceRoot":""}