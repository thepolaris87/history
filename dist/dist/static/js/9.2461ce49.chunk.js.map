{"version":3,"sources":["webpack:///./src/components/D1Order.js","webpack:///./src/modules/DM000007.js","webpack:///./src/utils/util.js","webpack:///./src/utils/D1Animate.js","webpack:///./src/assets/images/D1circle.svg","webpack:///./src/assets/images/D1rect.svg","webpack:///./src/assets/images/D1triangle.svg"],"names":["Ordering","type","items","dx","dy","dragArea","startCallback","moveCallback","endCallback","newItems","position","forEach","el","i","getBBox","data","cx","cy","area","areaBB","x","y","length","x2","y2","width","w","height","h","dragStart","element","localMatrix","transform","local","e","f","dragMove","elemenet","origin","snapInvMatrix","diffMatrix","invert","dragEnd","totalMatrix","start","makeTopEl","this","move","end","check","ind","dragBBox","Snap","path","isPointInsideBBox","sort","a","b","Promise","all","map","moveAnimate","point","animate","pathStr","attr","pointerEvents","D1Animate","onPath","duration","before","addClass","drag","stop","removeClass","undrag","item","DM000007","ordering","canvas","SOL","SVG","p","g","arrange","generate","callback","orderingG","rect","imageInfo","src","D1circle","key","D1rect","D1triangle","arrSort","arr","genNumber","rangeEndNumber","count","makeArrayNumber","endNum","rangeNum","getRandomArrayElement","startNum","orderingNum","shuffle","isSameArray","makeOrderElement","backImage","numberArray","dragEl","gap","isH","getPointInMatrixForm","startPoint","rows","columns","center","loadImage","use","matrix","appendTo","original","select","children","text","fs","toString","shakeDragItem","animate1","animate2","push","shake","bind","rotate","reverse","Boolean","answerCheck","elements","answer","console","warn","userNumber","log","wait","orderingFunction","getUniquArray","filter","indexOf","get2dimArray","n","newArray","q","Math","floor","r","getTransposeArray","tempArr","offset","j","index","getPointInScatterForm","pointNum","neighborhood","points","bbox","abs","repeat","getRandomNumber","boundingBox","some","bbox2","bbox1","error","delay","resolve","setTimeout","slice","min","max","random","getRandomNumberArray","isUnique","randArr","uniqueArr","getSumArray","reduce","acc","num","getSimultaneousEquationConstant","x1","y1","convertToPathStr","line","circle","polygon","_rest","rest","Array","isArray","array","copyArray","k","saveImage","svg","document","createElement","XMLSerializer","serializeToString","blob","Blob","img","Image","url","URL","createObjectURL","onload","getContext","drawImage","revokeObjectURL","uri","toDataURL","replace","href","download","click","calculateAnswer","sign","ans","drawPath","totalLength","getTotalLength","val","subPath","getSubpath","d","undefined","moveTo","easing","startPt","getPointAtLength","blink","interval","opacity","flip","front","sliding","hiddenTime","remove","rolling","directionAngle","multiple","revolutions","window","mina","linear","dxy","radius","radian","PI","cos","sin","diretion","translate","scale","fadeIn","from","to","opacityNum","Number","zoom","begin","module","exports"],"mappings":"ydAGA,IAeaA,EAAW,YASpB,IAAD,IARCC,YAQD,MARQ,IAQR,EAPCC,EAOD,EAPCA,MAOD,IANCC,UAMD,MANM,EAMN,MALCC,UAKD,MALM,EAKN,EAJCC,EAID,EAJCA,SACAC,EAGD,EAHCA,cACAC,EAED,EAFCA,aACAC,EACD,EADCA,YAEIC,EAAW,GACXC,EAAW,GAEfR,EAAMS,SAAQ,SAACC,EAAIC,GACfJ,EAASI,GAAKD,EACdF,EAASG,GAAKD,EAAGE,UACjBL,EAASI,GAAGE,KAAK,gBAAiBF,GAClCJ,EAASI,GAAGE,KAAK,MAAOF,GACxBJ,EAASI,GAAGE,KAAK,WAAY,CACzB,GAAML,EAASG,GAAGG,GAClB,GAAMN,EAASG,GAAGI,QAG1B,IAtCgBC,EAsCVC,EArCC,CACHC,GAFYF,EAsCUb,GAAY,CAACK,EAAS,GAAGU,EAAI,GAAIV,EAAS,GAAGW,EAAI,GAAIX,EAASA,EAASY,OAAS,GAAGC,GAAK,GAAIb,EAASA,EAASY,OAAS,GAAGE,GAAK,KApC7I,GACRH,EAAGH,EAAK,GACRK,GAAIL,EAAK,GACTM,GAAIN,EAAK,GACTF,IAAKE,EAAK,GAAKA,EAAK,IAAM,EAC1BD,IAAKC,EAAK,GAAKA,EAAK,IAAM,EAC1BO,MAAOP,EAAK,GAAKA,EAAK,GACtBQ,EAAGR,EAAK,GAAKA,EAAK,GAClBS,OAAQT,EAAK,GAAKA,EAAK,GACvBU,EAAGV,EAAK,GAAKA,EAAK,IA4BhBW,EAAY,SAAAC,GACd,IAAOC,EAAiBD,EAAQE,YAAzBD,YACDE,EAAO,IAAO,CAACF,EAAYG,EAAI/B,EAAI4B,EAAYI,EAAI/B,GACzD0B,EAAQf,KAAK,kBAAmBkB,IAG9BG,EAAW,SAACC,EAAUlC,EAAIC,GAC5B,IAAMkC,EAASD,EAAStB,KAAK,oBAAsB,GAE7CwB,EAAgBF,EAASL,YAAYQ,WAAWC,SACtDtC,EAAKoC,EAAcnB,EAAEjB,EAAIC,GACzBA,EAAKmC,EAAclB,EAAElB,EAAIC,GACzBiC,EAASL,UAAUM,EAAS,IAAM,CAACnC,EAAKC,KAGtCsC,EAAU,SAACZ,GACb,MAAoCA,EAAQE,YAArCD,EAAP,EAAOA,YAAaY,EAApB,EAAoBA,YACdV,EAAO,IAAO,CAACF,EAAYG,EAAIS,EAAYT,EAAGH,EAAYI,EAAIQ,EAAYR,GAChFL,EAAQf,KAAK,kBAAmBkB,IAjCrC,SAoCgBW,IApChB,gFAoCC,6FACIC,EAAUC,MACVjB,EAAUiB,MACNxC,GAAeA,IAHvB,iDApCD,+BA0CgByC,EA1ChB,qFA0CC,WAAoB5C,EAAIC,GAAxB,gFACIgC,EAASU,KAAM3C,EAAIC,GACfG,GAAcA,IAFtB,iDA1CD,+BA8CgByC,IA9ChB,gFA8CC,6GACUN,EAAQI,MADlB,uBAEUG,EAAMH,MAFhB,OAGQtC,GAAaA,IAHrB,iDA9CD,sBAqDC,IAAMyC,EAAK,4CAAG,WAAMnB,GAAN,2FACJoB,EAAMpB,EAAQf,KAAK,OACnBoC,EAAWrB,EAAQhB,WACZsC,IAAKC,KAAKC,kBAAkBnC,EAAQgC,EAASnC,GAAImC,EAASlC,IAH7D,wBAKNa,EAAQf,KAAK,WAAY,CACrB,GAAMoC,EAASnC,GACf,GAAMmC,EAASlC,KAGN,MAAThB,EACAQ,EAAS8C,MAAK,SAACC,EAAGC,GACd,OAAID,EAAEzC,KAAK,YAAYE,GAAKwC,EAAE1C,KAAK,YAAYE,GAAW,GAC7C,KAGjBR,EAAS8C,MAAK,SAACC,EAAGC,GACd,OAAID,EAAEzC,KAAK,YAAYC,GAAKyC,EAAE1C,KAAK,YAAYC,GAAW,GAC7C,KAlBf,SAmCA0C,QAAQC,IAAIlD,EAASmD,IAAT,4CAAa,WAAOhD,EAAIC,GAAX,uFAC3BD,EAAGG,KAAK,MAAOF,GAAGE,KAAK,WAAY,CAC/B,GAAML,EAASG,GAAGG,GAClB,GAAMN,EAASG,GAAGI,KAHK,SAKrB4C,EAAY,CACd/B,QAASlB,EACTkD,MAAO,CACH,EAAKpD,EAASG,GAAGO,EACjB,EAAKV,EAASG,GAAGQ,KATE,2CAAb,0DAnCZ,gDAkDDwC,EAAY,CACb/B,UACAgC,MAAO,CACH,EAAKpD,EAASwC,GAAK9B,EACnB,EAAKV,EAASwC,GAAK7B,KAtDrB,4CAAH,sDA6DL0C,EAAO,4CAAG,iHAASjC,EAAT,EAASA,QAASkC,EAAlB,EAAkBA,QAAlB,EACMlC,EAAQE,YAAlBC,EADI,EACJA,MACRH,EAAQmC,KAAK,CACTC,cAAe,SAHP,SAKNC,IAAUC,OAAO,CACnBf,KAAMW,EACNK,SAAU,IACVvC,QAASA,EACTG,UATQ,OAWZH,EAAQmC,KAAK,CACTC,cAAe,SAZP,2CAAH,sDAgBPL,EAAW,4CAAG,qHAAS/B,EAAT,EAASA,QAASgC,EAAlB,EAAkBA,MAAlB,EACChC,EAAQhB,UAAjBM,EADQ,EACRA,EAAGC,EADK,EACLA,EACL2C,EAAU,IAAM,CAAC5C,EAAGC,GAAK,IAAM,CAACyC,EAAM1C,EAAG0C,EAAMzC,GAFrC,SAGV0C,EAAQ,CAAEjC,UAASkC,YAHT,2CAAH,sDAMXnB,EAAY,SAAAf,GACdrB,EAASE,SAAQ,SAACC,EAAIC,GACdiB,EAAQf,KAAK,SAAWF,GAAGiB,EAAQwC,OAAO1D,OAsBtD,MAAO,CAAEgC,MAlBa,WAClBnC,EAASE,SAAQ,SAAAC,GACbA,EAAG2D,SAAS,MAAMN,KAAK,CACnB,cAAiB,SAErBrD,EAAG4D,KAAKzB,EAAMH,EAAOI,OAaEyB,KATV,WACjBhE,EAASE,SAAQ,SAAAC,GACbA,EAAG8D,YAAY,MAAMT,KAAK,CACtB,cAAiB,SAErBrD,EAAG+D,aAIwCC,KAAMnE,I,27CChL9C,SAASoE,EAAT,GAA+C,IAItDC,EAJqD,IAA1BC,cAA0B,MAAjBC,IAAIC,IAAa,EAALC,EAAK,OACnDC,EAAIJ,EACHK,EAA+BF,EAA/BE,QAASC,EAAsBH,EAAtBG,SAAUC,EAAYJ,EAAZI,SACpBC,EAAYJ,EAAEA,IAAIZ,SAAS,YAEjCY,EAAEK,KAAK,EAAE,EAAE,IAAI,KAAKjB,SAAS,WAG7B,IAAMkB,EAAY,CAAC,CACfC,IAAKC,IACLC,IAAK,WACL3F,KAAM,OACR,CACEyF,IAAKG,IACLD,IAAK,SACL3F,KAAM,OACR,CACEyF,IAAKI,IACLF,IAAK,aACL3F,KAAM,QAQJ8F,EAAU,SAACC,GAAD,OAASA,EAAIpC,KAAI,SAAAhD,GAAE,OAAIA,KAAI2C,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAEC,MAGrDwC,EAAS,4CAAG,8GAAQhG,EAAR,EAAQA,KAAMiG,EAAd,EAAcA,eAAgBC,EAA9B,EAA8BA,MAA9B,KAGNlG,EAHM,OAIL,MAJK,OASL,MATK,wCAKUmG,YAAgB,CAAEC,OAASH,EAAeC,EAAM,IAL1D,cAKNG,EALM,gBAMiBC,YAAsBD,EAAS,GAAG,GANnD,cAMAE,EANA,OAONC,EAAcC,YAAQN,YAAgB,CAAEI,SAAWA,EAAUH,OAASG,EAASL,EAAM,KAP/E,8CAUUC,YAAgB,CAAEC,OAAOH,IAVnC,eAUNI,EAVM,OAWNG,EAAcF,YAAsBD,EAASH,GAXvC,oCAcNM,EAAc,GAdR,6BAiBd,KAAOE,YAAYF,EAAaV,EAAQU,KAAeA,EAAcC,YAAQD,GAjB/D,yBAkBPA,GAlBO,4CAAH,sDAsBTG,EAAmB,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YAC5BC,EAAS,GAER3F,EAAmBgE,EAAnBhE,EAAGC,EAAgB+D,EAAhB/D,EAAGpB,EAAamF,EAAbnF,KAAM+G,EAAO5B,EAAP4B,IACbC,EAAa,MAAPhH,EACNqB,EAASwF,EAAYxF,OACrBwC,EAAQoD,YAAqB,CAC/BC,WAAY,CAAC/F,IAAEC,KACf+F,KAAMH,EAAM,EAAI3F,EAChB+F,QAASJ,EAAM3F,EAAS,EACxB0F,IAAK,CACD5F,EAAG6F,EAAMD,EAAM,EACf3F,EAAG4F,EAAM,EAAID,GAEjBM,QAAQ,IAYZ,OAVAR,EAAYnG,SAAQ,SAACC,EAAGC,GAEpB,IA9CiB,EA6CjBkG,EAAOlG,GAAK0E,EAAUJ,IAAIpE,KAAK,SAASH,GAC9B2G,YAAUV,GAAWW,MAAMxF,UAAUoB,IAAKqE,OAAO,GAAI,EAAE,EAAE,GAAI3D,EAAMjD,GAAGO,EAAE0C,EAAMjD,GAAGQ,IAAIiG,SAASI,SAASX,EAAOlG,IACnG8G,SAASC,OAAO,KAAKC,WAAW,GAC5CtD,SAAS,WAClBwC,EAAOlG,GAAGiH,KAAKhE,EAAMjD,GAAGO,GAjDP,EAiD0B,CAACC,EAAEyC,EAAMjD,GAAGQ,EAAE0G,GAnBlD,IA9BS,EAAE1G,EAAF,EAAI0G,GAAe,GAiD4BnH,EAAGoH,YAAYzD,SAAS,YAAYN,KAAK,CACpG,SApBG,GAqBH,WAAa,cAGd,EAAP,CACI8C,UACGxB,EAAUzE,YAKfmH,EAAa,4CAAG,WAAO/H,GAAP,+FACRgI,EAAW,GACXC,EAAU,GAChBjI,EAAM0E,KAAKjE,SAAQ,SAACC,EAAIC,GACpBD,EAAGqD,KAAK,CAAEC,cAAe,SACzBgE,EAASE,KAAKjE,IAAUkE,MAAMC,KAAK,KAAM,CAAEjE,SAAU,IAAMkE,OAAQ,EAAGzG,QAASlB,EAAI4H,QAASC,QAAQ5H,EAAI,MACxGsH,EAASC,KAAKjE,IAAUkE,MAAMC,KAAK,KAAM,CAAEjE,SAAU,IAAMkE,OAAQ,GAAIzG,QAASlB,EAAI4H,QAASC,QAAQ5H,EAAI,SAN/F,SASR6C,QAAQC,IAAIuE,EAAStE,KAAI,SAAAhD,GAAE,OAAIA,QATvB,uBAUR8C,QAAQC,IAAIwE,EAASvE,KAAI,SAAAhD,GAAE,OAAIA,QAVvB,OAWdV,EAAM0C,QAXQ,2CAAH,sDAeb8F,EAAW,4CAAG,6GAAQC,EAAR,EAAQA,SAAU7B,EAAlB,EAAkBA,YAC5B8B,EAAS7C,EAAQe,GACvB+B,QAAQC,KAAK,6BAAShC,EAAa,gBAAO8B,GACpCG,EAAaJ,EAAS/E,KAAI,SAAAhD,GAAE,OAAIA,EAAGG,KAAK,aAC9C8H,QAAQG,IAAI,CACR,KAAQD,EACR,IAAOH,EACP,KAAOjC,YAAYoC,EAAWH,GAC9B,GAAKD,KAENhC,YAAYoC,EAAWH,GAVV,wBAWZD,EAAShI,SAAQ,SAAAC,GAAE,OAAIA,EAAGqD,KAAK,gBAAgB,WAXnC,SAYNgE,EAAcnD,GAZR,wBAaNmE,YAAK,KAbC,QAcT3D,GAAUA,IAdD,4CAAH,sDAmBX4D,EAAgB,4CAAG,+HACKjD,EAAU,EAAD,GAAKZ,IADnB,cACfyB,EADe,gBAEYF,EAAiB,CAAEC,UAAUH,YAAQjB,GAAW,GAAIqB,gBAFhE,uBAEdC,EAFc,EAEdA,OAAO3F,EAFO,EAEPA,EAAEC,EAFK,EAELA,EAAEE,EAFG,EAEHA,GAAGC,EAFA,EAEAA,GACL,GAChBsD,EAAW,IAAI9E,EAAS,CACpBC,KAAMmF,EAAQnF,KACdC,MAAO6G,EACP1G,SAAU,CAACe,EAJC,GAIUC,EAJV,GAIqBE,EAJrB,GAIiCC,EAJjC,IAKZhB,YAAa,WACTkI,EAAY,CACRC,SAAS7D,EAASF,KAClBkC,mBAXS,kBAedhC,GAfc,4CAAH,sDAmBX,4CAAG,6GACJoE,IADI,OAEVjB,EAAcnD,GAFJ,2CAAH,qDAKXlC,K,0jDCxJG,IAOMuG,EAAgB,SAAAnD,GAAG,OAAIA,EAAIoD,QAAO,SAACxI,EAAIC,GAAL,OAAWmF,EAAIqD,QAAQzI,KAAQC,MACjEyI,EAAe,SAACtD,EAAKuD,GAC9B,IAAMC,EAAW,GAOjB,OANAxD,EAAIrF,SAAQ,SAACC,EAAIC,GACb,IAAM4I,EAAIC,KAAKC,MAAM9I,EAAI0I,GACnBK,EAAI/I,EAAI0I,EACJ,IAANK,IAASJ,EAASC,GAAK,IAC3BD,EAASC,GAAGG,GAAKhJ,KAEd4I,GAEEK,EAAoB,SAAA7D,GAE7B,IADA,IAAMwD,EAAW,GADmB,WAE3B3I,GACL,IAAMiJ,EAAU9D,EAAIpC,KAAI,SAAAhD,GAAE,OAAIA,EAAGC,MACjC2I,EAASpB,KAAK0B,IAFTjJ,EAAI,EAAGA,EAAImF,EAAI,GAAG1E,OAAQT,IAAM,EAAhCA,GAIT,OAAO2I,GAKEtC,EAAuB,SAAC,GAIjC,IAJ2I,IAAD,IAAvGC,kBAAuG,MAA1F,CAAE/F,EAAG,EAAGC,EAAG,GAA+E,EAA1E+F,EAA0E,EAA1EA,KAAMC,EAAoE,EAApEA,QAAoE,IAA3DL,WAA2D,MAArD,CAAE5F,EAAG,EAAGC,EAAG,GAA0C,MAArCmH,eAAqC,aAApBlB,cAAoB,SACpIxD,EAAQ,GACRiG,EAAczC,EAAkB,IAARN,EAAI5F,GAAWiG,EAAU,GAAK,EAAtD0C,EAA4DzC,EAAkB,IAARN,EAAI3F,GAAW+F,EAAO,GAAK,EAE9FvG,EAAI,EAAGA,EAAIuG,EAAMvG,IACtB,IAAK,IAAImJ,EAAI,EAAGA,EAAI3C,EAAS2C,IAAK,CAC9B,IAAMC,EAAQpJ,EAAIwG,EAAU2C,EAC5B,EAAe,CAAC7C,EAAW/F,EAAI4F,EAAI5F,EAAI4I,EAAID,EAAU5C,EAAW9F,EAAI0I,GAAYvB,GAAWxB,EAAI3F,EAAIR,EAAImG,EAAI3F,EAAIR,IAAxGO,EAAP,KAAUC,EAAV,KACAyC,EAAMmG,GAAS,CAAE7I,IAAGC,KAG5B,OAAOyC,GAEEoG,EAAwB,SAAC,GAgBlC,IAhBwE,IAApChJ,EAAmC,EAAnCA,KAAMiJ,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAC9CC,EAAS,GACT/G,EAAoB,SAACgH,EAAMlJ,EAAGC,GAAV,OAAgBqI,KAAKa,IAAID,EAAKtJ,GAAKI,IAAMkJ,EAAK7I,MAAQ,GAAKiI,KAAKa,IAAID,EAAKrJ,GAAKI,IAAMiJ,EAAK3I,OAAS,GAYxH4H,EAAI,EAECU,EAAQ,EAAGA,EAAQE,EAAUF,IAElC,IADA,IAAIO,GAAS,EAD8B,aAGvC,IAAMxJ,EAAKyJ,EAAgBvJ,EAAKE,EAAIgJ,EAAa3I,MAAQ,EAAGP,EAAKE,EAAIF,EAAKO,MAAQ2I,EAAa3I,MAAQ,GACjGR,EAAKwJ,EAAgBvJ,EAAKG,EAAI+I,EAAazI,OAAS,EAAGT,EAAKG,EAAIH,EAAKS,OAASyI,EAAazI,OAAS,GACpG+I,EAAc,CAChBtJ,EAAGJ,EAAKoJ,EAAa3I,MAAQ,EAC7BF,GAAIP,EAAKoJ,EAAa3I,MAAQ,EAC9BT,KACAK,EAAGJ,EAAKmJ,EAAazI,OAAS,EAC9BH,GAAIP,EAAKmJ,EAAazI,OAAS,EAC/BV,KACAQ,MAAO2I,EAAa3I,MACpBE,OAAQyI,EAAazI,QAEP0I,EAAOM,MAAK,SAAA/J,GAAE,OA3BpC0C,EAD4BsH,EA4BgCF,GA5BvCG,EA4BmCjK,GA3BzBQ,EAAGyJ,EAAMxJ,IACxCiC,EAAkBsH,EAAOC,EAAMtJ,GAAIsJ,EAAMxJ,IACzCiC,EAAkBsH,EAAOC,EAAMzJ,EAAGyJ,EAAMrJ,KACxC8B,EAAkBsH,EAAOC,EAAMtJ,GAAIsJ,EAAMrJ,KACzC8B,EAAkBuH,EAAOD,EAAMxJ,EAAGwJ,EAAMvJ,IACxCiC,EAAkBuH,EAAOD,EAAMrJ,GAAIqJ,EAAMvJ,IACzCiC,EAAkBuH,EAAOD,EAAMxJ,EAAGwJ,EAAMpJ,KACxC8B,EAAkBuH,EAAOD,EAAMrJ,GAAIqJ,EAAMpJ,IARrB,IAACqJ,EAAOD,OA8BpBP,EAAOjC,KAAKsC,GACZF,GAAS,GAEbjB,GAAK,GAlBFiB,GAAUjB,EALP,KAKmB,IAuBjC,OA5Bc,MA2BVA,GAAaV,QAAQiC,MAAM,uBACxBT,GAWEpB,EAAO,eAAC8B,EAAD,uDAAS,IAAT,OAAiB,IAAIrH,SAAQ,SAAAsH,GAAO,OAAIC,WAAWD,EAASD,OAGnExE,EAAwB,SAACP,EAAKuD,GAEvC,IADA,IAAMC,EAAW9C,EAAQV,GAAKkF,MAAM,EAAG3B,GAChCC,EAASlI,OAASiI,GACrBC,EAASpB,KAAK1B,EAAQV,GAAK,IAE/B,OAAOwD,GAEEiB,EAAkB,SAACU,EAAKC,GAAN,OAAc1B,KAAKC,MAAMD,KAAK2B,UAAYD,EAAMD,EAAM,IAAMA,GAC9EG,EAAuB,SAACH,EAAKC,EAAK7B,GAAwB,IAArBgC,IAAoB,yDAC9DC,EAAU,GACVC,EAAY,GAChB,GAAIF,EACA,KAAOE,EAAUnK,SAAWiI,GAAG,CAC3B,IAAK,IAAIU,EAAQ,EAAGA,EAAQV,EAAGU,IAC3BuB,EAAQvB,GAASQ,EAAgBU,EAAKC,GAE1CK,EAAYtC,EAAcqC,QAG9B,IAAK,IAAIvB,EAAQ,EAAGA,EAAQV,EAAGU,IAC3BuB,EAAQvB,GAASQ,EAAgBU,EAAKC,GAI9C,OAAOI,GAEEE,EAAc,SAAC1F,GAAD,OAASA,EAAI2F,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,MAEtDC,EAAkC,SAAC,EAAD,GAAyB,IAAD,SAAtBC,EAAsB,KAAlBC,EAAkB,cAAZzK,EAAY,KAARC,EAAQ,KAC7DgC,GAAKhC,EAAKwK,IAAOzK,EAAKwK,GAE5B,MAAO,CAAEvI,IAAGC,EADFjC,EAAKgC,EAAIjC,IAIV0K,EAAmB,CAC5BC,KAAM,oBAAGH,UAAH,MAAQ,EAAR,MAAWC,UAAX,MAAgB,EAAhB,MAAmBzK,UAAnB,MAAwB,EAAxB,MAA2BC,GAA3B,MAAwC,IAAM,CAACuK,EAAIC,GAAM,KAAO,CAACzK,OAAjE,MAAgC,EAAhC,IACNiE,KAAM,oBAAGpE,SAAH,MAAO,EAAP,MAAUC,SAAV,MAAc,EAAd,MAAiBI,aAAjB,MAAyB,EAAzB,MAA4BE,cAA5B,MAAqC,EAArC,QAA6C,IAAM,CAACP,EAAGC,GAAK,KAAO,CAAC,EAAGM,GAAU,KAAO,CAACF,EAAO,GAAK,KAAO,CAAC,GAAIE,GAAU,KAAO,EAAEF,EAAO,IACjJ0K,OAAQ,oBAAGnL,UAAH,MAAQ,EAAR,MAAWC,UAAX,MAAgB,EAAhB,MAAmB2I,SAAnB,MAAuB,EAAvB,QAA+B,IAAM,CAAC5I,EAAK4I,EAAG3I,EAAK2I,GAAK,IAAM,EAAEA,EAAG,GAAK,IAAM,CAACA,EAAGA,EAAG,EAAG,EAAG,EAAG,EAAO,EAAJA,GAAS,IAAM,CAACA,EAAGA,EAAG,EAAG,EAAG,EAAG,GAAS,EAAJA,IAC7IwC,QAAS,WAAe,IAAD,uBAAVC,EAAU,yBAAVA,EAAU,gBACnB,IAAMC,EAAOC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAClD,OAAOC,EAAKX,QAAO,SAACnI,EAAGC,EAAG5C,GACtB,OAAU,IAANA,EAAiB2C,GAAKC,EAAI,KACf,IAAN5C,EAAiB2C,GAAKC,EAAI,KAC1B5C,EAAI,IAAM,EAAW2C,EAAK,IAAMC,EAAI,IAChCD,GAAKC,EAAI,OACvB,OAIEiD,EAAU,SAAA+F,GAEnB,IADA,IAAMC,EAAYD,EAAM7I,KAAI,SAAAhD,GAAE,OAAIA,KACzBC,EAAI6L,EAAUpL,OAAS,EAAGT,EAAI,EAAGA,IAAK,CAC3C,IAAMmJ,EAAIN,KAAKC,MAAMD,KAAK2B,UAAYxK,EAAI,IACpC8L,EAAID,EAAU7L,GACpB6L,EAAU7L,GAAK6L,EAAU1C,GACzB0C,EAAU1C,GAAK2C,EAEnB,OAAOD,GAGEtG,EAAkB,SAAC,GAE5B,IAF0D,IAAD,IAA3BI,gBAA2B,MAAhB,EAAgB,EAAbH,EAAa,EAAbA,OACtCC,EAAW,GACRzF,EAAI2F,EAAU3F,EAAIwF,EAAS,EAAGxF,IACnCyF,EAAS8B,KAAKvH,GAElB,OAAOyF,GAGEK,EAAc,SAACnD,EAAGC,GAC3B,IAAI8F,EAOJ,OANI/F,EAAElC,SAAWmC,EAAEnC,SACfiI,EAAI,EACJ/F,EAAE7C,SAAQ,SAACC,EAAIC,GACPD,IAAO6C,EAAE5C,KAAI0I,GAAK,OAGvBA,IAAM/F,EAAElC,QAGNsL,EAAY,SAAAC,GACrB,IAAM9H,EAAS+H,SAASC,cAAc,UACtChI,EAAOtD,MAAQ,IACfsD,EAAOpD,OAAS,IAChB,IAAMZ,GAAO,IAAIiM,eAAgBC,kBAAkBJ,GAC7CK,EAAO,IAAIC,KAAK,CAACpM,GAAO,CAAEd,KAAM,kBAChCmN,EAAM,IAAIC,MACVC,EAAMC,IAAIC,gBAAgBN,GAChCE,EAAI1H,IAAM4H,EAEVF,EAAIK,OAAS,WAAO,IAAD,EACf1I,EAAOtD,MAAQ2L,EAAI3L,MACnBsD,EAAOpD,OAASyL,EAAIzL,OACpB,UAAAoD,EAAO2I,WAAW,aAAlB,SAAyBC,UAAUP,EAAK,EAAG,GAC3CG,IAAIK,gBAAgBN,GACpB,IAAMO,EAAM9I,EAAO+I,UAAU,aAAaC,QAAQ,YAAa,gBAC/DlF,QAAQG,IAAI6E,GACZ,IAAMrK,EAAIsJ,SAASC,cAAc,KACjCvJ,EAAEwK,KAAOH,EACTrK,EAAEyK,SAAW,cACbzK,EAAE0K,QACFX,IAAIK,gBAAgBC,KAIfM,EAAkB,SAACtC,EAAKuC,GACjC,IAAIC,EACJ,OAAQD,GACJ,IAAK,IACDC,EAAM,EACNxC,EAAIlL,SAAQ,SAAAC,GACRyN,GAAYzN,KAEhB,MACJ,IAAK,IACDiL,EAAIlL,SAAQ,SAACC,EAAIC,GACbwN,EAAY,IAANxN,EAAUD,EAAKyN,EAAMzN,KAE/B,MACJ,IAAK,IACDyN,EAAM,EACNxC,EAAIlL,SAAQ,SAAAC,GACRyN,GAAYzN,KAEhB,MACJ,IAAK,KACDyN,EAAM,IACF5E,EAAIC,KAAKC,MAAMkC,EAAI,GAAKA,EAAI,IAChCwC,EAAIzE,EAAIiC,EAAI,GAAKA,EAAI,GAG7B,OAAOwC,I,8/BCnOX,IAAMlK,EAAY,CACdmK,SAAU,YAAyB,IAAtBjL,EAAqB,EAArBA,KAAMgB,EAAe,EAAfA,SACTkK,EAAclL,EAAKmL,iBACnBxK,EAAUX,EAAKY,KAAK,KAC1B,OAAO,IAAIP,SAAQ,SAAAsH,GACf5H,IAAKW,QACD,EACA,GACA,SAAA0K,GACI,IAAMC,EAAUtL,IAAKC,KAAKsL,WAAW3K,EAAS,EAAGyK,EAAMF,GACvDlL,EAAKY,KAAK,CAAE2K,EAAGF,MAEnBrK,OACAwK,EACA7D,OAIZ8D,OAAQ,YAA4C,IAAzC3O,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,GAAIiE,EAAgC,EAAhCA,SAAUvC,EAAsB,EAAtBA,QAAsB,IAAb8H,SAAa,MAAT,GAAS,EAC/C,OAAO,IAAIlG,SAAQ,SAAAsH,GACf5H,IAAKW,QACD,EACA,GACA,SAAA0K,GACI3M,EAAQE,UAAR,YAAuB7B,EAAKsO,EAA5B,YAAmCrO,EAAKqO,EAAxC,YAA+C7E,GAAK,KAAOA,MAE/DvF,OACAwK,EACA7D,OAKZ5G,OAAQ,YAA6D,IAA1Df,EAAyD,EAAzDA,KAAyD,IAAnDgB,gBAAmD,MAAxC,IAAwC,EAAlCvC,EAAkC,EAAlCA,QAAkC,IAAzBG,aAAyB,MAAjB,GAAiB,EAAb8M,EAAa,EAAbA,OAC7CC,EAAU5L,IAAKC,KAAK4L,iBAAiB5L,EAAM,GACjD,OAAO,IAAIK,SAAQ,SAAAsH,GACf5H,IAAKW,QACD,EACA,GACA,SAAA0K,GACI,MAAiBrL,IAAKC,KAAK4L,iBAAiB5L,EAAMoL,EAAMrL,IAAKC,KAAKmL,eAAenL,IAAzEjC,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACLW,EAAYC,EAAQ,IAAM,CAACb,EAAI4N,EAAQ5N,EAAGC,EAAI2N,EAAQ3N,GAC5DS,EAAQE,UAAUA,KAEtBqC,EACA0K,EACA/D,OAIZkE,MAAO,YAA+D,IAAD,IAA3DC,gBAA2D,MAAhD,GAAgD,MAA3C9K,gBAA2C,MAAhC,IAAgC,EAA3BvC,EAA2B,EAA3BA,QAA2B,IAAlBsN,eAAkB,MAAR,EAAQ,EAEjE,OADAtN,EAAQmC,KAAK,CAAEC,cAAe,SACvB,IAAIR,SAAQ,SAAAsH,GACf5H,IAAKW,QACD,EACA,GACA,SAAA0K,GACI3M,EAAQmC,KAAK,CAAEmL,QAASX,MAE5BpK,GACA,SAAAoK,GACI,OAAIA,EAAMU,IAAoB,EAAIA,EAAYV,EAAM,GAAKW,EAC5C,GAAK,EAAID,IAAcV,EAAMU,GAAYC,IAE1DpE,OAIZqE,KAAM,YAA0B,IAAvBC,EAAsB,EAAtBA,MAAOjL,EAAe,EAAfA,SACJrD,EAAOsO,EAAMxO,UAAbE,GACR,OAAO,IAAI0C,SAAQ,SAAAsH,GACf5H,IAAKW,QAAQ,EAAG,GAAG,SAAA0K,GAAG,OAAIa,EAAMtN,UAAUoB,IAAKqE,OAAO,EAAIgH,EAAK,EAAG,EAAG,EAAGA,EAAMzN,EAAI,MAAKqD,OAAUwK,EAAW7D,OAGpHuE,QAAS,YAAgD,IAA7CzN,EAA4C,EAA5CA,QAAS3B,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,GAAIoP,EAA2B,EAA3BA,WAAYnL,EAAe,EAAfA,SAC7BpC,EAAUH,EAAQE,YAAlBC,MACR,OAAO,IAAIyB,SAAQ,SAAAsH,GACf5H,IAAKW,QACD,EACA,GACA,SAAA0K,GACI,IAAMW,EAAUX,EAAMe,EAAa,GAAM,GAAK,EAAIA,GAAef,EAAM,GAAK,EAAIe,GAChF1N,EAAQmC,KAAK,CAAEmL,YAAWpN,UAAUC,EAAQ,IAAM,CAAC9B,EAAKsO,EAAMA,EAAKrO,EAAKqO,EAAMA,MAElFpK,OACAwK,GACA,WACI/M,EAAQ2N,SACRzE,WAKhB0E,QAAS,YAAqG,IAAlG5N,EAAiG,EAAjGA,QAAS6N,EAAwF,EAAxFA,eAAgBtL,EAAwE,EAAxEA,SAAUuL,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,YAAoD,IAAvCd,cAAuC,MAA9Be,OAAOC,KAAKC,OAAkB,EAAVC,EAAU,EAAVA,IACvFhO,EAAUH,EAAQE,YAAlBC,MACFiO,EAASpO,EAAQhB,UAAUY,EAAI,EAC/ByO,EAASR,GAAkBjG,KAAK0G,GAAK,KAC3C,IAAeH,EACT,CAACA,EAAI7O,EAAIyO,EAAcD,EAAUK,EAAI5O,EAAIwO,EAAcD,GACvD,CAACM,EAASxG,KAAK2G,IAAIF,GAAUzG,KAAK0G,IAAKF,EAASxG,KAAK4G,IAAIH,GAAUzG,KAAK0G,IAF9E,GAAOhP,EAAP,KAAUC,EAAV,KAGM+M,EAAO1E,KAAK2G,IAAIF,GAAU,GAAK,EAAI,EACnCI,EAA0C,IAA/B7G,KAAKa,IAAIb,KAAK4G,IAAIH,KAAkBzG,KAAK4G,IAAIH,GAAU/B,EAExE,OAAO,IAAI1K,SAAQ,SAAAsH,GACf5H,IAAKW,QACD,EACA,GACA,SAAA0K,GACI,IAAM+B,EAAYvO,EAAQ,IAAM,CAAC4N,EAAczO,EAAIwO,EAAWnB,EAAKoB,EAAcxO,EAAIuO,EAAWnB,GAC1FlG,EAAS,IAAMgI,EAAW9B,GAAqB,IAAdoB,GACjCY,EAAQ,KAAO,GAAKb,EAAW,GAAKnB,GAC1C3M,EAAQE,UAAUwO,EAAYjI,EAASkI,KAE3CpM,EACA0K,EACA/D,OAIZ3C,MAAO,YAAoD,IAAjDhE,EAAgD,EAAhDA,SAAUkE,EAAsC,EAAtCA,OAAQzG,EAA8B,EAA9BA,QAA8B,IAArB0G,QAC3B4F,OADgD,SAC/B,GAAK,EACpBnM,EAAUH,EAAQE,YAAlBC,MACR,OAAO,IAAIyB,SAAQ,SAAAsH,GAAO,OACtB5H,IAAKW,QACD,EACA,GACA,SAAA0K,GACQA,EAAM,IAAMA,GAAM,EACDA,EAAZA,EAAM,KAAa,EAAIA,EAAM,EAC3B,EAAIA,EAAM,EACrB3M,EAAQE,UAAUC,EAAQ,IAAMmM,EAAO7F,EAASkG,KAEpDpK,OACAwK,EACA7D,OAIZ0F,OAAQ,YAA8C,IAA3C5O,EAA0C,EAA1CA,QAASuC,EAAiC,EAAjCA,SAAiC,IAAvBsM,YAAuB,MAAhB,EAAgB,MAAbC,UAAa,MAAR,EAAQ,EACjD,OAAO,IAAIlN,SAAQ,SAAAsH,GACf,IAAM6F,EAAaC,OAAOhP,EAAQmC,KAAK,YACvCb,IAAKW,QACD4M,EACAC,GACA,SAAAnC,GACI3M,EAAQmC,KAAK,UAAW4M,GAAc,EAAIA,GAAcpC,KAE5DpK,EACA,KACA2G,OAIZ+F,KAAM,YAA4E,IAAzE9Q,EAAwE,EAAxEA,KAAM6B,EAAkE,EAAlEA,QAASuC,EAAyD,EAAzDA,SAAU2M,EAA+C,EAA/CA,MAAOhO,EAAwC,EAAxCA,IAAwC,IAAnCf,aAAmC,MAA3B,GAA2B,MAAvB0O,YAAuB,MAAhB,EAAgB,MAAbC,UAAa,MAAR,EAAQ,EAC7E,OAAO,IAAIlN,SAAQ,SAAAsH,GACf,IAAIyF,EAAQ,GACXO,IAAUA,EAAiB,OAAT/Q,EAAgB,EAAI,IACtC+C,IAAQA,EAAe,OAAT/C,EAAgB,EAAI,GAEnCmD,IAAKW,QACD4M,EACAC,GACA,SAAAnC,GACIgC,EAAiB,OAATxQ,EAAgB+Q,GAAS,EAAIA,GAASvC,GAAOzL,EAAM,GAAK,EAAIyL,GAAOuC,EAAQ,IAAM,EAAIvC,GAAOzL,EAAMyL,EAC1G3M,EAAQE,UAAR,UAAqBC,EAArB,aAA+BwO,MAEnCpM,EACA,KACA2G,QAMD7G,O,kBChLf8M,EAAOC,QAAU,8iB,kBCAjBD,EAAOC,QAAU,swB,kBCAjBD,EAAOC,QAAU","file":"static/js/9.2461ce49.chunk.js","sourcesContent":["import Snap from 'sol-common/snap';\nimport D1Animate from '../utils/D1Animate';\n\nconst areaToBBox = (area) => {\n    return {\n        x: area[0],\n        y: area[1],\n        x2: area[2],\n        y2: area[3],\n        cx: (area[0] + area[2]) / 2,\n        cy: (area[1] + area[3]) / 2,\n        width: area[2] - area[0],\n        w: area[2] - area[0],\n        height: area[3] - area[1],\n        h: area[3] - area[1]\n    };\n}\n\nexport const Ordering = function ({\n    type = \"v\",\n    items,\n    dx = 0,\n    dy = 0,\n    dragArea,\n    startCallback,\n    moveCallback,\n    endCallback\n}) {\n    let newItems = [];\n    let position = [];\n    \n    items.forEach((el, i) => {\n        newItems[i] = el;\n        position[i] = el.getBBox();\n        newItems[i].data('originalIndex', i);\n        newItems[i].data('ind', i);\n        newItems[i].data('position', {\n            \"cx\": position[i].cx,\n            \"cy\": position[i].cy\n        });\n    });\n    const areaBB = areaToBBox(dragArea || [position[0].x - 10, position[0].y - 10, position[position.length - 1].x2 + 10, position[position.length - 1].y2 + 10]); \n    const dragStart = element => {        \n        const {localMatrix  } = element.transform(); \n        const local ='t' +  [localMatrix.e + dx, localMatrix.f + dy];\n        element.data('originTransform', local);\n    }\n\n    const dragMove = (elemenet, dx, dy) => {\n        const origin = elemenet.data('originTransform') || '';\n        \n        const snapInvMatrix = elemenet.transform().diffMatrix.invert();\n        dx = snapInvMatrix.x(dx, dy);\n        dy = snapInvMatrix.y(dx, dy);\n        elemenet.transform(origin + 't' + [dx , dy]);\n    };\n\n    const dragEnd = (element) => {\n        const {localMatrix, totalMatrix } = element.transform(); \n        const local ='t' +  [localMatrix.e + totalMatrix.e, localMatrix.f + totalMatrix.f]        \n        element.data('originTransform', local);\n    }\n\n    async function start() {\n        makeTopEl(this);\n        dragStart(this);\n        if (startCallback) startCallback();\n\n    }\n    async function move(dx, dy) {\n        dragMove(this, dx, dy);\n        if (moveCallback) moveCallback();\n    }\n    async function end() {\n        await dragEnd(this);\n        await check(this);\n        if (endCallback) endCallback();\n\n    }\n\n    const check = async element => {\n        const ind = element.data('ind');\n        const dragBBox = element.getBBox();\n        const bool = Snap.path.isPointInsideBBox(areaBB, dragBBox.cx, dragBBox.cy);\n        if (bool) { // 영역에 들어와 있으면\n            element.data('position', {\n                \"cx\": dragBBox.cx,\n                \"cy\": dragBBox.cy\n            });\n            // 순서 체크 (type)\n            if (type === 'v') { // 세로\n                newItems.sort((a, b) => {\n                    if (a.data('position').cy > b.data('position').cy) return 1;\n                    else return -1;\n                });\n            } else {\n                newItems.sort((a, b) => {\n                    if (a.data('position').cx > b.data('position').cx) return 1;\n                    else return -1;\n                });\n                \n            }\n            // newItems.forEach((el, i) => {\n            //     el.data('ind', i).data('position', {\n            //         \"cx\": position[i].cx,\n            //         \"cy\": position[i].cy\n            //     });\n            //     moveAnimate({\n            //         element: el,\n            //         point: {\n            //             \"x\": position[i].x,\n            //             \"y\": position[i].y\n            //         }\n            //     });\n            // });\n            await Promise.all(newItems.map(async (el, i) => {\n                el.data('ind', i).data('position', {\n                    \"cx\": position[i].cx,\n                    \"cy\": position[i].cy\n                });\n                await moveAnimate({\n                    element: el,\n                    point: {\n                        \"x\": position[i].x,\n                        \"y\": position[i].y\n                    }\n                });\n            }));\n        } else { // 영역에 들어와 있지 않으면 \n            // 원래 자리로\n           await moveAnimate({\n                element,\n                point: {\n                    \"x\": position[ind].x,\n                    \"y\": position[ind].y\n                }\n            })\n        }\n\n    }\n\n    const animate = async ({ element, pathStr }) => {\n        const { local } = element.transform();\n        element.attr({\n            pointerEvents: 'none'\n        });\n        await D1Animate.onPath({\n            path: pathStr,\n            duration: 300,\n            element: element,\n            local,\n        });\n        element.attr({\n            pointerEvents: 'auto'\n        });\n    };\n\n    const moveAnimate = async ({ element, point }) => {\n        const { x, y } = element.getBBox();\n        const pathStr = 'M' + [x, y] + 'L' + [point.x, point.y];\n        await animate({ element, pathStr });\n    };\n\n    const makeTopEl = element => {\n        newItems.forEach((el, i) => { \n            if (element.data('ind') !== i) element.before(el);\n        });\n    }\n\n    const orderingStart = () => {\n        newItems.forEach(el => {\n            el.addClass('cp').attr({\n                'pointerEvents': 'auto'\n            });\n            el.drag(move, start, end);\n        });\n    }\n\n    const orderingStop = () => {\n        newItems.forEach(el => {\n            el.removeClass('cp').attr({\n                'pointerEvents': 'none'\n            });\n            el.undrag();\n        });\n    }\n\n    return { start: orderingStart, stop: orderingStop, item: newItems};\n}","import Snap from 'sol-common/snap';\nimport { Ordering } from '../components/D1Order';\nimport { getRandomArrayElement,shuffle, getPointInMatrixForm, wait, isSameArray, makeArrayNumber} from '../utils/util';\nimport D1Animate from '../utils/D1Animate';\nimport { loadImage } from 'sol-common';\n\nimport D1circle from '../assets/images/D1circle.svg'; //추후 삭제\nimport D1rect from '../assets/images/D1rect.svg'; //추후 삭제\nimport D1triangle from '../assets/images/D1triangle.svg'; //추후 삭제\n\n\nexport default function DM000007({ canvas = SOL.SVG, ...p }) {\n    const g = canvas;\n    const {arrange, generate, callback} = p;\n    const orderingG = g.g().addClass('D1-order');\n    let ordering;\n    g.rect(0,0,800,500).addClass('fno s02')// 확인용\n\n    // 받을 정보 //////////////////////////////////////// //추후 삭제\n    const imageInfo = [{\n        src: D1circle,\n        key: 'D1circle',\n        type: 'svg'\n    },{\n        src: D1rect,\n        key: 'D1rect',\n        type: 'svg'\n    },{\n        src: D1triangle,\n        key: 'D1triangle',\n        type: 'svg'\n    }]\n    //////////////////////////////////////////////////\n\n    //font 높이 조정\n    const numberForMiddle = ({y,fs}) => y + fs/2;\n\n    //배열 안에 숫자를 오름차순으로 정렬\n    const arrSort = (arr) => arr.map(el => el).sort((a,b) => a-b);\n\n    //generate된 숫자 배열 생성\n    const genNumber = async ({type, rangeEndNumber, count}) => {\n        let rangeNum;\n        let orderingNum;\n        switch (type){\n            case 'c':\n                rangeNum= await makeArrayNumber({ endNum : rangeEndNumber-count+1 });\n                const startNum = await getRandomArrayElement(rangeNum,1)[0];\n                orderingNum = shuffle(makeArrayNumber({ startNum : startNum, endNum : startNum+count-1 }))\n                break;\n            case 'r':\n                rangeNum= await makeArrayNumber({ endNum:rangeEndNumber });\n                orderingNum = getRandomArrayElement(rangeNum,count)\n                break;\n            default:\n                orderingNum = []\n                break;\n        }\n        while (isSameArray(orderingNum, arrSort(orderingNum))) orderingNum = shuffle(orderingNum);\n        return orderingNum;\n    };\n\n    //order element 생성 함수\n    const makeOrderElement = ({backImage, numberArray}) => {\n        const dragEl = [];\n        const fs = 50\n        const {x, y, type, gap} = arrange;\n        const isH = type==='h';\n        const length = numberArray.length;\n        const point = getPointInMatrixForm({\n            startPoint: {x,y},\n            rows: isH ? 1 : length,\n            columns: isH ? length : 1,\n            gap: { \n                x: isH ? gap : 0, \n                y: isH ? 0 : gap\n            },\n            center: true\n        });\n        numberArray.forEach((el,i) => {\n            dragEl[i] = orderingG.g().data('number',el);\n            const img=loadImage(backImage).use().transform(Snap.matrix(0.4,0,0,0.4,point[i].x,point[i].y)).center().appendTo(dragEl[i]); // 추후 수정\n            const original = img.original.select('g').children()[1]; // 추후 삭제\n            original.addClass('f14 sno'); // 추후 삭제\n            dragEl[i].text(point[i].x, numberForMiddle({y:point[i].y,fs}), el.toString()).addClass('dn53 f02').attr({\n                'fontSize':fs,\n                'textAnchor':'middle'\n            });\n        });\n        return {\n            dragEl,\n            ...orderingG.getBBox()\n        };\n    };\n\n    //item에 흔드는효과 주는 함수\n    const shakeDragItem = async (items) => {\n            const animate1 = [];\n            const animate2= [];\n            items.item.forEach((el, i) => {\n                el.attr({ pointerEvents: 'none' });\n                animate1.push(D1Animate.shake.bind(null, { duration: 1000, rotate: 8, element: el, reverse: Boolean(i % 2) }));\n                animate2.push(D1Animate.shake.bind(null, { duration: 1000, rotate: 10, element: el, reverse: Boolean(i % 2) }));\n            });\n\n            await Promise.all(animate1.map(el => el()));\n            await Promise.all(animate2.map(el => el()));\n            items.start();\n    };\n\n    //정답 체크 함수\n    const answerCheck = async ({elements, numberArray}) => {\n        const answer = arrSort(numberArray); // 정답 생성\n        console.warn('기존 배열:',numberArray, '정답:', answer);\n        const userNumber = elements.map(el => el.data('number'));\n        console.log({\n            'user': userNumber, \n            'ans': answer, \n            'bool':isSameArray(userNumber,answer),\n            'el':elements\n        });\n        if(isSameArray(userNumber,answer)) {\n            elements.forEach(el => el.attr('pointerEvents','none'));\n            await shakeDragItem(ordering);\n            await wait(300);\n            if(callback) callback();\n        }\n    };\n\n    //ordering 반응 함수\n    const orderingFunction = async () => {\n        const numberArray = await genNumber({...generate});\n        const {dragEl,x,y,x2,y2} = await makeOrderElement({ backImage:shuffle(imageInfo)[0], numberArray });\n        const areaGap = 30;\n        ordering = new Ordering({\n            type: arrange.type,\n            items: dragEl,\n            dragArea: [x-areaGap, y-areaGap, x2+areaGap, y2+areaGap],\n            endCallback: () => {\n                answerCheck({\n                    elements:ordering.item, \n                    numberArray\n                });\n            }\n        });\n        return ordering;\n    };\n\n    //시작\n    const start = async () => {\n        await orderingFunction();\n        shakeDragItem(ordering);\n    };\n\n    start();\n}\n","import Snap from 'sol-common/snap';\n\nexport const getSVGPoint = event => {\n    const svg = document.querySelector('#frame2d');\n    const pt = svg.createSVGPoint();\n    pt.x = event.clientX;\n    pt.y = event.clientY;\n    return pt.matrixTransform(svg.getScreenCTM().inverse());\n};\nexport const getUniquArray = arr => arr.filter((el, i) => arr.indexOf(el) === i);\nexport const get2dimArray = (arr, n) => {\n    const newArray = [];\n    arr.forEach((el, i) => {\n        const q = Math.floor(i / n);\n        const r = i % n;\n        if (r === 0) newArray[q] = [];\n        newArray[q][r] = el;\n    });\n    return newArray;\n};\nexport const getTransposeArray = arr => {\n    const newArray = [];\n    for (let i = 0; i < arr[0].length; i++) {\n        const tempArr = arr.map(el => el[i]);\n        newArray.push(tempArr);\n    }\n    return newArray;\n};\n\nexport const getClassNames = element => element.node.className.baseVal;\n\nexport const getPointInMatrixForm = ({ startPoint = { x: 0, y: 0 }, rows, columns, gap = { x: 0, y: 0 }, reverse = false, center = true }) => {\n    const point = [];\n    const offset = { x: center ? -gap.x * 0.5 * (columns - 1) : 0, y: center ? -gap.y * 0.5 * (rows - 1) : 0 };\n\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < columns; j++) {\n            const index = i * columns + j;\n            const [x, y] = [startPoint.x + gap.x * j + offset.x, startPoint.y + offset.y + (reverse ? -gap.y * i : gap.y * i)];\n            point[index] = { x, y };\n        }\n    }\n    return point;\n};\nexport const getPointInScatterForm = ({ area, pointNum, neighborhood }) => {\n    const points = [];\n    const isPointInsideBBox = (bbox, x, y) => Math.abs(bbox.cx - x) <= bbox.width / 2 && Math.abs(bbox.cy - y) <= bbox.height / 2;\n    const isBBoxIntersect = (bbox1, bbox2) =>\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2);\n\n    const limit = 1000;\n    let n = 0;\n\n    for (let index = 0; index < pointNum; index++) {\n        let repeat = true;\n        while (repeat && n < limit) {\n            const cx = getRandomNumber(area.x + neighborhood.width / 2, area.x + area.width - neighborhood.width / 2);\n            const cy = getRandomNumber(area.y + neighborhood.height / 2, area.y + area.height - neighborhood.height / 2);\n            const boundingBox = {\n                x: cx - neighborhood.width / 2,\n                x2: cx + neighborhood.width / 2,\n                cx,\n                y: cy - neighborhood.height / 2,\n                y2: cy + neighborhood.height / 2,\n                cy,\n                width: neighborhood.width,\n                height: neighborhood.height\n            };\n            const isOverlap = points.some(el => isBBoxIntersect(el, boundingBox));\n            if (!isOverlap) {\n                points.push(boundingBox);\n                repeat = false;\n            }\n            n += 1;\n        }\n    }\n\n    if (n === limit) console.error('CAN NOT GENERATE!!!');\n    return points;\n};\n\nexport const getCloseElement = (targetElement, elements) =>\n    elements.reduce((a, b) => {\n        const currentPoint = targetElement.getBBox().cx;\n        const beforeDx = Math.abs(a.getBBox().cx - currentPoint);\n        const currentDx = Math.abs(b.getBBox().cx - currentPoint);\n        return beforeDx > currentDx ? b : a;\n    }, elements[0]);\n\nexport const wait = (delay = 300) => new Promise(resolve => setTimeout(resolve, delay));\n\nexport const removeArrayElement = (arr, element) => arr.filter(el => el !== element);\nexport const getRandomArrayElement = (arr, n) => {\n    const newArray = shuffle(arr).slice(0, n);\n    while (newArray.length < n) {\n        newArray.push(shuffle(arr)[0]);\n    }\n    return newArray;\n};\nexport const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const getRandomNumberArray = (min, max, n, isUnique = true) => {\n    let randArr = [];\n    let uniqueArr = [];\n    if (isUnique) {\n        while (uniqueArr.length !== n) {\n            for (let index = 0; index < n; index++) {\n                randArr[index] = getRandomNumber(min, max);\n            }\n            uniqueArr = getUniquArray(randArr);\n        }\n    } else {\n        for (let index = 0; index < n; index++) {\n            randArr[index] = getRandomNumber(min, max);\n        }\n    }\n\n    return randArr;\n};\nexport const getSumArray = (arr) => arr.reduce((acc, num) => acc + num);\n\nexport const getSimultaneousEquationConstant = ([x1, y1], [x2, y2]) => {\n    const a = (y2 - y1) / (x2 - x1);\n    const b = y2 - a * x2;\n    return { a, b };\n};\n\nexport const convertToPathStr = {\n    line: ({ x1 = 0, y1 = 0, x2 = 0, y2 = 0 }) => 'M' + [x1, y1] + ' L' + [x2, y2],\n    rect: ({ x = 0, y = 0, width = 0, height = 0 }) => 'M' + [x, y] + ' l' + [0, height] + ' l' + [width, 0] + ' l' + [0, -height] + ' l' + [-width, 0],\n    circle: ({ cx = 0, cy = 0, r = 0 }) => 'M' + [cx + r, cy - r] + 'm' + [-r, 0] + 'a' + [r, r, 0, 1, 1, 0, r * 2] + 'a' + [r, r, 0, 1, 1, 0, -(r * 2)],\n    polygon: (..._rest) => {\n        const rest = Array.isArray(_rest[0]) ? _rest[0] : _rest;\n        return rest.reduce((a, b, i) => {\n            if (i === 0) return (a += b + ',');\n            else if (i === 1) return (a += b + ' ');\n            else if (i % 2 === 0) return (a += 'L' + b + ',');\n            else return (a += b + ' ');\n        }, 'M');\n    }\n};\n\nexport const shuffle = array => {\n    const copyArray = array.map(el => el);\n    for (let i = copyArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const k = copyArray[i];\n        copyArray[i] = copyArray[j];\n        copyArray[j] = k;\n    }\n    return copyArray;\n};\n\nexport const makeArrayNumber = ({ startNum = 1, endNum }) => {\n    const rangeNum = [];\n    for (let i = startNum; i < endNum + 1; i++) {\n        rangeNum.push(i);\n    }\n    return rangeNum;\n};\n\nexport const isSameArray = (a, b) => {\n    let n;\n    if (a.length === b.length) {\n        n = 0;\n        a.forEach((el, i) => {\n            if (el === b[i]) n += 1;\n        });\n    }\n    return n === a.length;\n};\n\nexport const saveImage = svg => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 800;\n    canvas.height = 800;\n    const data = new XMLSerializer().serializeToString(svg);\n    const blob = new Blob([data], { type: 'image/svg+xml' });\n    const img = new Image();\n    const url = URL.createObjectURL(blob);\n    img.src = url;\n\n    img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        canvas.getContext('2d')?.drawImage(img, 0, 0);\n        URL.revokeObjectURL(url);\n        const uri = canvas.toDataURL('image/png').replace('image/png', 'octet/stream');\n        console.log(uri);\n        const a = document.createElement('a');\n        a.href = uri;\n        a.download = 'myPhoto.png';\n        a.click();\n        URL.revokeObjectURL(uri);\n    };\n};\n\nexport const calculateAnswer = (num, sign) => {\n    let ans;\n    switch (sign) {\n        case '+':\n            ans = 0;\n            num.forEach(el => {\n                ans = ans + el;\n            });\n            break;\n        case '-':\n            num.forEach((el, i) => {\n                ans = i === 0 ? el : ans + el;\n            });\n            break;\n        case '*':\n            ans = 1;\n            num.forEach(el => {\n                ans = ans * el;\n            });\n            break;\n        case '/':\n            ans = {};\n            ans.q = Math.floor(num[0] / num[1]);\n            ans.r = num[0] % num[1];\n            break;\n    }\n    return ans;\n};\n","import Snap from 'sol-common/snap';\n\nconst D1Animate = {\n    drawPath: ({ path, duration }) => {\n        const totalLength = path.getTotalLength();\n        const pathStr = path.attr('d');\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const subPath = Snap.path.getSubpath(pathStr, 0, val * totalLength);\n                    path.attr({ d: subPath });\n                },\n                duration,\n                undefined,\n                resolve\n            );\n        });\n    },\n    moveTo: ({ dx, dy, duration, element, r = '' }) => {\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    element.transform(`t ${dx * val} ${dy * val} ${r && 'r ' + r}`);\n                },\n                duration,\n                undefined,\n                resolve\n            );\n        });\n    },\n\n    onPath: ({ path, duration = 3000, element, local = '', easing }) => {\n        const startPt = Snap.path.getPointAtLength(path, 0);\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const { x, y } = Snap.path.getPointAtLength(path, val * Snap.path.getTotalLength(path));\n                    const transform = local + 't' + [x - startPt.x, y - startPt.y];\n                    element.transform(transform);\n                },\n                duration,\n                easing,\n                resolve\n            );\n        });\n    },\n    blink: ({ interval = 0.5, duration = 500, element, opacity = 1 }) => {\n        element.attr({ pointerEvents: 'none' });\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    element.attr({ opacity: val });\n                },\n                duration,\n                val => {\n                    if (val < interval) return (-(1 / interval) * val + 1) * opacity;\n                    else return (1 / (1 - interval)) * (val - interval) * opacity;\n                },\n                resolve\n            );\n        });\n    },\n    flip: ({ front, duration }) => {\n        const { cx } = front.getBBox();\n        return new Promise(resolve => {\n            Snap.animate(0, 1, val => front.transform(Snap.matrix(1 - val, 0, 0, 1, val * cx, 0)), duration, undefined, resolve);\n        });\n    },\n    sliding: ({ element, dx, dy, hiddenTime, duration }) => {\n        const { local } = element.transform();\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const opacity = val < hiddenTime ? 1 : -(1 / (1 - hiddenTime)) * val + 1 / (1 - hiddenTime);\n                    element.attr({ opacity }).transform(local + 't' + [dx * val * val, dy * val * val]);\n                },\n                duration,\n                undefined,\n                () => {\n                    element.remove();\n                    resolve();\n                }\n            );\n        });\n    },\n    rolling: ({ element, directionAngle, duration, multiple, revolutions, easing = window.mina.linear, dxy }) => {\n        const { local } = element.transform();\n        const radius = element.getBBox().w / 2;\n        const radian = directionAngle * (Math.PI / 180);\n        const [x, y] = dxy\n            ? [dxy.x / revolutions / multiple, dxy.y / revolutions / multiple]\n            : [radius * Math.cos(radian) * Math.PI, -radius * Math.sin(radian) * Math.PI];\n        const sign = Math.cos(radian) < 0 ? -1 : 1;\n        const diretion = Math.abs(Math.sin(radian)) === 1 ? -Math.sin(radian) : sign;\n\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const translate = local + 't' + [revolutions * x * multiple * val, revolutions * y * multiple * val];\n                    const rotate = 'r' + diretion * val * (revolutions * 360);\n                    const scale = 's' + (1 + (multiple - 1) * val);\n                    element.transform(translate + rotate + scale);\n                },\n                duration,\n                easing,\n                resolve\n            );\n        });\n    },\n    shake: ({ duration, rotate, element, reverse = true }) => {\n        const sign = reverse ? 1 : -1;\n        const { local } = element.transform();\n        return new Promise(resolve =>\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    if (val < 0.25) val = 4 * val;\n                    else if (val < 0.75) val = -4 * val + 2;\n                    else val = 4 * val - 4;\n                    element.transform(local + 'r' + sign * rotate * val);\n                },\n                duration,\n                undefined,\n                resolve\n            )\n        );\n    },\n    fadeIn: ({ element, duration, from = 0, to = 1 }) => {\n        return new Promise(resolve => {\n            const opacityNum = Number(element.attr('opacity'));\n            Snap.animate(\n                from,\n                to,\n                val => {\n                    element.attr('opacity', opacityNum + (1 - opacityNum) * val);\n                },\n                duration,\n                null,\n                resolve\n            );\n        });\n    },\n    zoom: ({ type, element, duration, begin, end, local = '', from = 0, to = 1 }) => {\n        return new Promise(resolve => {\n            let scale = 0;\n            !begin && (begin = type === 'in' ? 0 : 1);\n            !end && (end = type === 'in' ? 1 : 0);\n\n            Snap.animate(\n                from,\n                to,\n                val => {\n                    scale = type === 'in' ? begin + (1 - begin) * val + (end - 1) : 1 - val + (begin - 1) * (1 - val) + end * val;\n                    element.transform(`${local}s ${scale}`);\n                },\n                duration,\n                null,\n                resolve\n            );\n        });\n    }\n};\n\nexport default D1Animate;\n","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"221px\\\" height=\\\"221px\\\" viewBox=\\\"0 0 221 221\\\" style=\\\"enable-background:new 0 0 221 221;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#FFFFFF;} .st1{stroke:#999999;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:10.1323,15.1985;} </style><g><circle class=\\\"st0\\\" cx=\\\"110.5\\\" cy=\\\"110.5\\\" r=\\\"108.8\\\"></circle><circle class=\\\"st1\\\" cx=\\\"110.5\\\" cy=\\\"110.5\\\" r=\\\"108.8\\\"></circle></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"203px\\\" height=\\\"203px\\\" viewBox=\\\"0 0 203 203\\\" style=\\\"enable-background:new 0 0 203 203;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#FFFFFF;} .st1{stroke:#999999;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:10.1097,15.1645;} </style><g><path class=\\\"st0\\\" d=\\\"M192.6,201.3H10.4c-4.8,0-8.7-3.9-8.7-8.7V10.4c0-4.8,3.9-8.7,8.7-8.7h182.2c4.8,0,8.7,3.9,8.7,8.7v182.2 C201.3,197.4,197.4,201.3,192.6,201.3z\\\"></path><path class=\\\"st1\\\" d=\\\"M192.6,201.3H10.4c-4.8,0-8.7-3.9-8.7-8.7V10.4c0-4.8,3.9-8.7,8.7-8.7h182.2c4.8,0,8.7,3.9,8.7,8.7v182.2 C201.3,197.4,197.4,201.3,192.6,201.3z\\\"></path></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"234px\\\" height=\\\"205px\\\" viewBox=\\\"0 0 234 205\\\" style=\\\"enable-background:new 0 0 234 205;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#FFFFFF;} .st1{stroke:#999999;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:9.9134,14.8701;} </style><g><path class=\\\"st0\\\" d=\\\"M109.5,5.9L2.9,190.4c-3.4,5.8,0.8,13.1,7.5,13.1h213.2c6.7,0,10.9-7.3,7.5-13.1L124.5,5.9 C121.2,0.1,112.8,0.1,109.5,5.9z\\\"></path><path class=\\\"st1\\\" d=\\\"M109.5,5.9L2.9,190.4c-3.4,5.8,0.8,13.1,7.5,13.1h213.2c6.7,0,10.9-7.3,7.5-13.1L124.5,5.9 C121.2,0.1,112.8,0.1,109.5,5.9z\\\"></path></g></svg>\""],"sourceRoot":""}