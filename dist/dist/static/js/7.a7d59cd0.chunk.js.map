{"version":3,"sources":["webpack:///./src/modules/DM000010.js","webpack:///./src/components/D1drag.js","webpack:///./src/assets/testImages/background.svg","webpack:///./src/assets/testImages/D1Calculate_Background.svg","webpack:///./src/assets/testImages/arrow.svg","webpack:///./src/assets/testImages/arrow2.svg","webpack:///./src/assets/testImages/confetti.svg"],"names":["aniBg","src","startBg","key","type","dragBgImage","dragBg","DM000010","currentMeta","generateQ","generateQuestion","canvas","SOL","SVG","p","g","direction","repeatCount","dropMeta","dragMeta","callback","backG","addClass","dropG","dragG","timerG","dropItems","dragItems","timer","Timer","timeout","gatherType","HEIGHT","drag","getAttachPoint","bbox1","bbox2","total","x","cx","width","y","height","attachX","attachY","dropImage","test2","drop","startPoint","rows","columns","areaCount","gap","getDropArea","bbox","LENGTH","x2","cy","test","AMOUNT","test3","eventControler","element","Array","isArray","forEach","el","attr","choiceF","start","els","getBBox","w","h","rect","ansIndex","count","this","data","bool","every","console","log","D1feedback","controller","addUserAction","next","done","pause","wait","ending","dragDropF","makeDropItem","dropAreaType","isTypeLH","point","getPointInMatrixForm","t","originItemG","loadImage","clone","itemG","trG","basicG","selectAll","use","transform","Snap","matrix","appendTo","push","i","touchOrClick","makeDragItem","dragArrangeRandom","dragArrangeType","items","totalDragElementCount","shuffle","shffleItems","filter","pickCountArray","num","isShuffle","countArray","pickCount","center","row","col","gapWH","rIndex","area","isRandom","bboxSet","elementLen","length","maxCount","totalCount","pushIndex","rCount","getRandomArrayElement","makeArrayNumber","startNum","endNum","j","condi1","indexOf","condi2","index","y2","formationPoint","url","imageIndex","tempItem","image","img","scale","newPoint","areaBBox","rotate","areaW","areaH","areaCX","areaCY","getTBox","imgCX","imgCY","imgA","a","imgD","d","imgW","imgH","newWeight","fix","s","Math","min","r","cloneImg","changedImageBbox","remove","random","round","innerGetPoint","local","children","currentItem","D1drag","dragItem","startCallback","moveCallback","endCallback","self","append","dropIndex","searchIndex","autoElement","userDropItem","basicElement","trElement","dropBBox","totalBBox","dragBBox","moveAnimate","pointerEvents","after","newXY","reset","dragItemBBox","targetIndex","undefined","map","some","path","isBBoxIntersect","makeBackgroundElement","meta","textIndex","getRandomNumber","fontSize","ttsOffet","text","D1directive","directive","textG","tts","alignGroup","pickCurrentElementMeta","dropAreaCount","includes","arrangeRandom","arrangeType","clear","warn","opening","openG","openingBg","Promise","resolve","animate","val","endG","el1","circle","el2","el3","el4","smoke","weight","duration","o","opacity","smokingAction","bind","all","init","draggingItem","originPoint","dragStart","dragMove","elemenet","dx","dy","origin","snapInvMatrix","diffMatrix","invert","dragEnd","setDragState","Number","pathStr","easing","_randomDuration","randomDuration","D1Animate","onPath","spectrumEffect","interval","_interval","setInterval","clearInterval","moveAnimateWithScale","move","_scale","from","to","hidden","module","exports"],"mappings":"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","file":"static/js/7.a7d59cd0.chunk.js","sourcesContent":["import Snap from 'sol-common/snap';\nimport { image, loadImage } from 'sol-common';\nimport { alignGroup, SOL } from 'sol-common/util';\nimport { getPointInMatrixForm, getRandomArrayElement, shuffle, makeArrayNumber, wait, getRandomNumber } from '../utils/util';\nimport D1drag from '../components/D1drag';\n\nimport D1feedback from '../components/D1feedback';\nimport D1directive from '../components/D1directive';\n\nimport startBg from '../assets/testImages/background.svg'; //추후 삭제 (시작 배경)\n//끝 배경\nimport dragBg from '../assets/testImages/D1Calculate_Background.svg'; //추후 삭제\nimport test from '../assets/testImages/arrow.svg'; //추후 삭제\nimport test2 from '../assets/testImages/arrow2.svg'; //추후 삭제\nimport test3 from '../assets/testImages/confetti.svg'; //추후 삭제\nimport Timer from '../components/D1Timer';\n\n// const testGuideLine = []; //영역 선 추후 삭제\n//animation 배경 (opening, ending)\nconst aniBg =   [{\n    src: startBg,\n    key: 'startBg',\n    type: 'svg'\n}]\n\n// drag 영역 배경\nconst dragBgImage =   {\n    src: dragBg,\n    key: 'dragBg',\n    type: 'svg'\n}\n// drag 엘리먼트에 쓰일 재료의 개수\nconst pickCount = ({ num,isShuffle }) => {\n    let countArray = [];\n    switch (num) {\n        case 3:\n            countArray = [1, 2];\n            break;\n        case 5:\n            countArray = [2, 3];\n            break;\n        case 7:\n            countArray = [3, 4];\n            break;\n        case 9:\n            countArray = [4, 5];\n            break;\n    }\n    return (isShuffle? shuffle(countArray): countArray);\n}\n//엘리먼트의 각각의 좌표 생성\nconst formationPoint = ({\n    area,\n    type = 'H',\n    isRandom = true,\n    countArray\n}) => {\n        let row;\n        let col;\n        let gapWH;\n        const bboxSet = []; //개별 영역 값 집합,\n        const elementLen = countArray.length;\n        let maxCount = 0;\n        let totalCount = 0;\n        let pushIndex = [];\n        let rIndex;\n        let rCount=0;\n\n        countArray.forEach((el,i) => {\n            if(el > maxCount) maxCount = el;\n            totalCount = totalCount + el;\n            bboxSet.push([]);\n            for (let t = 0; t < el; t++) {\n                pushIndex.push(i);\n            }\n        });\n        \n\n    if(isRandom && type==='H'){ row = 3; col = 3; }\n    else if (isRandom && type==='V'){ row = 3; col = 3; }\n    else if (!isRandom && type==='H'){ row = elementLen; col = 5; }\n    else if(!isRandom && type==='V'){ row = 5;  col = elementLen; }\n    const width = area[2] / row;\n    const height= area[3] / col;\n   \n    if(isRandom) {\n        pushIndex = shuffle(pushIndex);\n        rIndex = getRandomArrayElement(makeArrayNumber({startNum:0, endNum:8}),totalCount);\n    }\n    for (var i = 0; i < row; i++) {\n        for (var j = 0; j < col; j++) {\n            const condi1 = isRandom && rIndex.indexOf(col*i+j)!==-1\n            const condi2 = !isRandom && countArray[type === 'V' ? j:i] > (type === 'V' ? i:j)\n            if(condi1 || condi2){\n                const index = isRandom ? pushIndex[rCount] : (type === 'V' ? j:i)\n                gapWH = [i + 1/2, j + 1/2]; // 중점으로 하려면 centerGap = 2;\n                bboxSet[index].push({\n                    x: area[0] + (gapWH[0] - 1 / 2) * width,\n                    x2: area[0] + (gapWH[0] + 1 / 2) * width,\n                    y: area[1] + (gapWH[1] - 1 / 2) * height,\n                    y2: area[1] + (gapWH[1] + 1 / 2) * height,\n                    cx: area[0] + gapWH[0] * width,\n                    cy: area[1] + gapWH[1] * height,\n                    w: width,\n                    h: height\n                });\n                //영역 선 추후 삭제\n                // testGuideLine[rCount] = SOL.SVG.rect(\n                //                             area[0] + (gapWH[0] - 1 / 2) * width,\n                //                             area[1] + (gapWH[1] - 1 / 2) * height,\n                //                             width,\n                //                             height\n                //                         ).addClass('fno s'+['02','03'][index])\n                // SOL.SVG.text(\n                //    area[0] + gapWH[0] * width,\n                //     area[1] + gapWH[1] * height,\n                //     rCount.toString()\n                // ).addClass('f85 s85')\n                rCount++;\n            }\n        }\n    }\n    return bboxSet;\n}\n\n// 하위 영역 내부에 랜덤하게 포인트가 뽑히도록 좌표를 새로 만들어주는 함수\nconst innerGetPoint = function({areaBBox, isRandom = false, element, scale = 1, rotate = 0}){\n    const { w:areaW, h:areaH, cx:areaCX, cy:areaCY } = areaBBox;\n    const { cx:imgCX, cy:imgCY, a:imgA, d:imgD, w:imgW, h:imgH } = element.getTBox();\n    const newWeight ={\n        w: (rotate === 270 ? imgH : imgW),\n        h: (rotate === 270 ? imgW : imgH)\n    }\n    const fix = {\n        s: Math.min(areaW / newWeight.w * scale, areaH / newWeight.h * scale),\n        r: rotate\n    }\n    const cloneImg = element.clone();\n    const changedImageBbox = cloneImg.transform('s' + [fix.s]+ 'r' + [fix.r]).attr('opacity',  1).getBBox();\n    cloneImg.remove();\n\n    const d = {\n        x: (areaCX - imgCX) / imgA,\n        y: (areaCY - imgCY) / imgD\n    }\n    const gap = {\n        x: isRandom ? (Math.random() * (areaW - changedImageBbox.w) / 2 * scale) : 0,\n        y: isRandom ? (Math.random() * (areaH - changedImageBbox.h) / 2 * scale) : 0\n    }\n\n    fix.x = Math.round((d.x + gap.x) * 1e5) / 1e5;\n    fix.y = Math.round((d.y + gap.y) * 1e5) / 1e5;\n    return fix;\n}\n\n\nexport default function DM000010({ canvas = SOL.SVG, ...p }) {\n    const g = canvas;\n    const {direction, repeatCount = 10, dropMeta, dragMeta, callback } = p\n    const backG = g.g().addClass('D1-back-group')\n    const dropG = g.g().addClass('D1-drop-group');\n    const dragG = g.g().addClass('D1-drag-group');\n    const timerG = g.g().addClass('D1-timer');\n\n    let dropItems = [];\n    let dragItems = [];\n    let currentMeta;\n    let generateQ;\n    const timer = new Timer(timerG, { timeout: 100 });\n\n    const gatherType = {\n        HEIGHT: {\n            drag: {\n                getAttachPoint: (bbox1, bbox2, total) => { //dragBBox, dropBBox, totalBBox\n                    const data = {\n                        x : bbox2.cx - bbox1.width / 2,\n                        y : total.y - bbox1.height,\n                        attachX : bbox2.cx - bbox1.width / 2,\n                        attachY : bbox2.y - bbox1.height\n                    }\n                    return data;\n                }\n            },\n            dropImage: {\n                src: test2,\n                key: 'test2',\n                type: 'svg'\n            },\n            drop: {\n                startPoint: { x: 200, y: 500 },\n                rows: 1,\n                columns: dropMeta?.areaCount,\n                gap: { x: 150, y: 0 },\n                getDropArea: bbox => ({ ...bbox, y: bbox.y - bbox.height * 0.5, height: bbox.height * 1.5 })\n            }\n        },\n        LENGTH: {\n            drag: {\n                getAttachPoint: (bbox1, bbox2, total) => { //dragBBox, dropBBox, totalBBox\n                    const data = {\n                        x : total.x2,\n                        y : bbox2.cy - bbox1.height / 2,\n                        attachX : bbox2.x2,\n                        attachY : bbox2.cy - bbox1.height / 2\n                    }\n                    return data;\n                }\n            },\n            dropImage: {\n                src: test,\n                key: 'test',\n                type: 'svg'\n            },\n            drop: {\n                startPoint: { x: 0, y: 200 },\n                rows: dropMeta?.areaCount,\n                columns: 1,\n                gap: { x: 0, y: 100 },\n                getDropArea: bbox => ({ ...bbox, x2: bbox.x2 + bbox.width * 0.5, width: bbox.width * 1.5 })\n            }\n        },\n        AMOUNT: {\n            drag: {\n                getAttachPoint: (bbox1, bbox2, total) => { //dragBBox, dropBBox, totalBBox\n                    const data = {\n                        x : bbox1.x,\n                        y : bbox1.y\n                    }\n                    return data;\n                }\n            },\n            dropImage: {\n                src: test3,\n                key: 'test3',\n                type: 'svg'\n            },\n            drop: {\n                startPoint: { x: 200, y: 200 },\n                rows: 1,\n                columns: 2,\n                gap: { x: 250, y: 0 },\n                getDropArea: bbox => ({ ...bbox })\n            }\n        }\n    };\n    //이벤트 제어하는 controler\n    const eventControler = (element, type) => { \n        if(Array.isArray(element)) element.forEach(el => { el.attr('pointerEvents', type) })\n        else element.attr('pointerEvents', type)   \n    }\n    //choice 관련 함수 모음\n    const choiceF = {\n        //시작 함수\n        start : (els) => {\n            els.forEach(el => {\n                const {x, y, w, h} = el.getBBox();\n                el.rect(x, y, w, h).addClass('f04 sno').attr('opacity',0);\n                eventControler(el,'auto');\n            });\n        },\n        //callback 함수\n        callback : async function () {\n            const {ansIndex} = currentMeta; // 메타 제ㅣ\n            const element = this;\n            const count = element.data('count'); //해당 엘리먼트의 drag 숫자\n            let bool;\n            if(ansIndex===0) bool = dropItems.every(el => el.data('count') <= count) // 길거나 높은 것이 정답일 때\n            else if(ansIndex===1) bool = dropItems.every(el => el.data('count') >= count)  // 짧거나 낮은 것이 정답일 때\n            eventControler(dropItems, 'none'); // 선택 반응 없애기\n            if(bool){ //정답\n                console.log('정답 피드백 : 불판');\n                await D1feedback({ el: element, bool: true }); //피드백\n            }else{ //오답\n                console.log('오답 피드백 : 다시 시작');\n                SOL.controller.addUserAction(false); //틀린 정보 보내기\n            }\n            //다음 문제 실행\n            const nextCal = generateQ.next();\n            //모든 문제 끝났을 때 (done = true)\n            if (nextCal.done) {\n                timer.pause();\n                await wait(300);\n                await ending(); // 엔딩 시작\n                // await wait(300);\n                callback(); // 모두 종료!!\n            }\n        }\n    }\n\n    //drag and drop 관련 함수 모음\n    const dragDropF = {\n        //drop 영역 생성\n        makeDropItem : () => {\n            const {dropAreaType} = currentMeta; // drop 영역 타입\n            const isTypeLH = dropAreaType === 'LENGTH' || dropAreaType === 'HEIGHT'; // LENGTH, HEIGHT 타입일 때\n            const point = getPointInMatrixForm(gatherType[dropAreaType].drop); // 좌표\n            const { rows,columns } = gatherType[dropAreaType].drop;\n            for (let t = 0; t < (rows * columns); t++) {\n                const { x, y } = point[t];\n                const originItemG = loadImage(gatherType[dropAreaType].dropImage).clone(); // 오리지날 이미지 복사\n                const itemG = dropG.g();\n                const trG = itemG.g().addClass('trElement'); // 이동시킬 이미지\n                const basicG = itemG.g().addClass('basicElement'); //기본이 될 이미지(위치 변동 x)\n                if(isTypeLH){ // LENGTH, HEIGHT 타입일 때\n                    originItemG.selectAll('.basicElement')[0].use().transform(Snap.matrix(0.7,0,0,0.7,x,y)).appendTo(basicG);\n                    originItemG.selectAll('.trElement')[0].use().transform(Snap.matrix(0.7,0,0,0.7,x,y)).appendTo(trG);    \n                }else{ // AMOUNT 타입 일 때\n                    originItemG.transform(Snap.matrix(0.5,0,0,0.5,x,y)).appendTo(basicG);\n                }\n                itemG.addClass('D1-drop-item');\n                dropItems.push(itemG);\n            }\n            // drop 영역 초기 셋팅\n            dropItems.forEach((el,i) => {\n                el.data('index',i).data('count',0);\n                el.touchOrClick(choiceF.callback).attr('pointerEvents','none');\n            })\n        },\n        //drag item 생성\n        makeDragItem : () => {\n            const {dragArrangeRandom, dragArrangeType} = currentMeta;\n            const { items } = dragMeta;\n            // drag 엘리먼트에 쓰일 재료의 개수 구하기\n            const totalDragElementCount = shuffle([3,5,7,9])[0]; // drag 총 개수는 shuffle 후 3, 5, 7, 9 중 하나로 설정\n            const shffleItems = shuffle(items).filter((el,i) => i < 2);\n            const pickCountArray = pickCount({\n                num: totalDragElementCount, \n                isShuffle: true\n            });\n            shffleItems.forEach( (el,i) => el.count = pickCountArray[i]);\n            //drag 엘리먼트 아래 배경\n            const bg=loadImage(dragBgImage).use().transform('t' + [650,250]).center().appendTo(backG);\n            //drag 엘리먼트의 각각의 좌표 구하기\n            const { x:bboxX,y:bboxY, w:bboxW, h:bboxH } = bg.getBBox();\n            const points = formationPoint({ \n                area:[bboxX,bboxY, bboxW, bboxH],\n                type: dragArrangeType,\n                isRandom : dragArrangeRandom,\n                countArray: pickCountArray\n            });\n            // drag 엘리먼트 생성\n            points.forEach((point,i) => {\n                point.forEach(el => {\n                    const { imageIndex: url } = shffleItems[i];\n                    const tempItem = image({ canvas: dragG, x: 0, y: 0, img: { url, scale: 1}, center: true });\n                    const newPoint = innerGetPoint ({\n                        areaBBox : el,\n                        isRandom : dragArrangeRandom, \n                        element: tempItem, \n                        scale : 0.8,\n                        rotate: (dragArrangeType ==='V' ? 270 : 0)\n                    });\n                    tempItem.remove();\n                    const itemG=image({ canvas: dragG, x: newPoint.x, y: newPoint.y, img: { url, scale: newPoint.s}, center: true });\n                    const {local} = itemG.children()[0].transform();\n                    if(dragArrangeType ==='V') itemG.children()[0].transform(local + ' r270')\n                    itemG.addClass('D1-drag-item');\n                    const currentItem = D1drag({\n                        dragItem: itemG,\n                        startCallback: () => dragDropF.startCallback(itemG),\n                        moveCallback: () => dragDropF.moveCallback(itemG),\n                        endCallback: () => dragDropF.endCallback(itemG)\n                    }).data('end',false)\n                    dragItems.push(currentItem);\n                })\n            })\n        },\n        startCallback : self => { dragG.append(self) },\n        moveCallback : self => {},\n        endCallback : async self => {\n            const {dropAreaType} = currentMeta;\n            const dropIndex = dragDropF.searchIndex(self);\n            \n            if (typeof dropIndex === 'number') {\n                //drop 영역에 들어왔을 떄\n                self.data('end', true); // 엘리먼트에 종료 여부 데이터 변경\n                // 남은 drag 엘리먼트 비활성화\n                const autoElement = dragItems.filter(el => !el.data('end'));\n                eventControler(autoElement,'none');\n                //\n                const userDropItem = dropItems[dropIndex];\n                userDropItem.data('count', userDropItem.data('count') + 1)\n                userDropItem.data('count')\n\n                let basicElement, trElement, dropBBox, totalBBox;\n                const isTypeLH = dropAreaType === 'LENGTH' || dropAreaType === 'HEIGHT';\n                if(isTypeLH) {\n                    basicElement = userDropItem.selectAll('.basicElement')[0];\n                    trElement = userDropItem.selectAll('.trElement')[userDropItem.selectAll('.trElement').length-1];\n                    dropBBox = basicElement.getBBox();\n                    totalBBox = userDropItem.getBBox();\n                    console.log(userDropItem);\n                }else{\n                    basicElement = userDropItem;\n                }\n                const dragBBox = self.getBBox();\n                // 해당 좌표에 애니메이션 효과 처리하여 붙이기 \n                const { x, y, attachX, attachY } = gatherType[dropAreaType].drag.getAttachPoint(dragBBox, dropBBox, totalBBox);\n                await self.moveAnimate({ x, y });\n                if(attachX && attachY) await self.moveAnimate({ x:attachX, y:attachY });\n                self.appendTo(basicElement);\n                // 해당 엘리먼트 반응 없애기   \n                self.attr({ pointerEvents: 'none' });\n\n                //LENGTH, HEIGHT 타입일 때 길어지는 효과 내기 위한 작업  \n                if(isTypeLH){         \n                    trElement.clone().after(trElement); //그 위치 복제 후 뒤로 보내기\n                    let newXY;\n                    if(dropAreaType === 'LENGTH') newXY = [dragBBox.w,0]\n                    else if(dropAreaType === 'HEIGHT') newXY = [0,-dragBBox.h]\n                    trElement.transform(trElement.transform().local + 't' + newXY); //기존 이미지 이동\n                }\n                if(dragItems.every(el => el.data('end'))){\n                    //drag가 모두 종료 되었을 때\n                    console.log('drag는 모두 종료!');\n                    choiceF.start(dropItems);\n                }else {\n                    // 남은 drag 엘리먼트 활성화\n                    eventControler(autoElement,'auto');\n                }\n            } else {\n                //drop영역에 들어오지 않았을 때\n                await self.reset(); //리셋\n            }\n        },\n        // drag 인덱스 찾는 함수\n        searchIndex : dragItem => {\n            const {dropAreaType} = currentMeta;\n            const dragItemBBox = dragItem.getBBox();\n            let targetIndex = undefined;\n            const dropBBoxes = dropItems.map(el => {\n                const bbox = el.getBBox();\n                return gatherType[dropAreaType].drop.getDropArea(bbox);\n            });\n            dropBBoxes.some((el, i) => {\n                if (Snap.path.isBBoxIntersect(dragItemBBox, el)) {\n                    targetIndex = i;\n                    return true;\n                } else {\n                    targetIndex = undefined;\n                    return false;\n                }\n            });\n            return targetIndex;\n        }\n    };\n    // 지시문 + 배경(문제 시) 그리는 함수\n    const makeBackgroundElement = ({direction,meta}) => {\n        const directions = [\n                {'type':'LENGTH', 'text':['꼬치를 완성하고 긴 쪽을 고르세요.','꼬치를 완성하고 짧은 쪽을 고르세요.']},\n                {'type':'HEIGHT', 'text':['꼬치를 완성하고 높은 쪽을 고르세요.','꼬치를 완성하고 낮은 쪽을 고르세요.']},\n                {'type':'AMOUNT', 'text':['그림에 모두 올리고 많은 쪽을 고르세요.','그림에 모두 올리고 적은 쪽을 고르세요.']}\n        ]\n        const { dropAreaType:type } = meta;\n        const { textIndex = getRandomNumber(0,1), fontSize, ttsOffet, x=100 , y=50 } = direction;\n        const text = directions.filter(el => el.type===type)[0].text[textIndex];\n        //배경\n        backG.rect(0,0,800,500).addClass('f03').attr('opacity',0.3);\n        //지시문\n        const { directive, text:textG, tts } = D1directive({ g: backG, text, fontSize, ttsOffet });\n        directive.transform('t' + [x,y]);\n        alignGroup({ g: textG, y });\n        alignGroup({ g: tts, y });\n        //메타에 해당 인덱스 추가 -> 정답확인 시 필요함\n        meta.ansIndex = textIndex;\n    };\n    //메타 조정하는 함수 (각각의 메타 중에서 없으면 랜덤으로 추출)\n    const pickCurrentElementMeta = ({dropMeta, dragMeta}) => {\n        const meta = { \n            dropAreaCount: [2,3], // drop 영역 개수\n            dropAreaType: ['LENGTH','HEIGHT','AMOUNT'], // drop 영역 타입\n            dragArrangeRandom: [true, false], // drag 엘리먼트 배치 유형 (랜덤인지 여부)\n            dragArrangeType: ['H','V'] // drag 엘리먼트 배치 유형 (가로, 세로)\n        };\n        let dropAreaType;\n        let dropAreaCount;\n        let dragArrangeRandom;\n        let dragArrangeType;\n        //메타에 없을 때는 랜덤, 있을 때는 있는 값!\n        dropAreaType = (meta.dropAreaType.includes(dropMeta?.type)) ? dropMeta.type : shuffle(meta.dropAreaType)[0];\n        dropAreaCount = (meta.dropAreaCount.includes(dropMeta?.areaCount)) ? dropMeta.areaCount : shuffle(meta.dropAreaCount)[0];\n        // gatherType에 정의된 drop 영역의 행,열 수 조정(메타에 drop 영역의 수가 없을 때)\n        if(!gatherType[dropAreaType]?.drop?.rows) gatherType[dropAreaType].drop.rows = dropAreaCount\n        else if(!gatherType[dropAreaType]?.drop?.columns) gatherType[dropAreaType].drop.columns = dropAreaCount\n        \n        dragArrangeRandom = (meta.dragArrangeRandom.includes(dragMeta?.arrangeRandom)) ? dragMeta.arrangeRandom : shuffle(meta.dragArrangeRandom)[0];\n        dragArrangeType = (meta.dragArrangeType.includes(dragMeta?.arrangeType)) ? dragMeta.arrangeType : shuffle(meta.dragArrangeType)[0]; //dropAreaType과 dragArrangeType을 맞춰야 되는 경우 여기 수정\n        \n        return {dropAreaType, dropAreaCount, dragArrangeRandom, dragArrangeType};\n    }\n    // 회차가 넘어갈 때 clear 시키는 함수\n    const groupClear = () => {\n        backG.clear();\n        dropG.clear();\n        dragG.clear();\n        dropItems = [];\n        dragItems = [];\n        // testGuideLine.forEach(el => el.remove())//추후 삭제\n    }\n\n    //generate 함수 (rc에 따라 진행)\n    function* generateQuestion() {\n        for (let i = 0; i < repeatCount; i++) {\n            if(i!==0) groupClear();\n            currentMeta = pickCurrentElementMeta({ dropMeta, dragMeta });\n            makeBackgroundElement({direction, meta : currentMeta});\n            dragDropF.makeDropItem();\n            dragDropF.makeDragItem();\n            console.warn({currentMeta,dropItems,dragItems});\n            yield;\n        }\n    }\n\n    //오프닝 함수\n    const opening = () => {\n        const openG = g.g();\n        const openingBg=loadImage(aniBg[0]).use().transform('t' + [400,250]).center().appendTo(openG);\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    openingBg.attr('opacity', 1 - val)\n                },\n                3000,\n                undefined,\n                async () => {\n                    await openG.remove();\n                    resolve();\n                }\n            );\n        });\n    }\n\n    //엔딩 함수\n    const ending = async () => {\n        const endG = g.g();\n        loadImage(aniBg[0]).use().transform('t' + [400,250]).center().appendTo(endG);\n        const el1 = endG.circle(100,160,50).addClass('f04').attr('opacity',0);\n        const el2 = endG.circle(600,100,50).addClass('f03').attr('opacity',0);\n        const el3 = endG.circle(400,200,60).addClass('f02').attr('opacity',0);\n        const el4 = endG.circle(200,380,30).addClass('f05').attr('opacity',0);\n        const element = [el1,el2,el3,el4]; // 엘리먼트 추후 이미지에서 가져오기\n        const smoke = ({ element, weight }) =>\n                new Promise(resolve => {\n                    const { local } = element.transform();\n                    const duration = 2000 - (weight * 300); //기본 2초\n                        Snap.animate(\n                            0,\n                            1,\n                            val => {\n                                let o, s;\n                                if (val <= 0.5){ \n                                    o = 2 * val; \n                                    s = 0.4 * val + 1 \n                                }else if (val > 0.5) {\n                                    o = (- 2) * val + 2;\n                                    s = (-0.4) * val + 1.4\n                                }\n                                element.transform(local + ('s' + s)).attr({ opacity: o });\n                            },\n                            duration,\n                            undefined,\n                            resolve\n                        );\n                });\n            const smokingAction = element.map((el,i) => smoke.bind(null, { element: el, weight: i}));\n        await Promise.all(smokingAction.map(el => el()))\n    }\n\n    async function start() {\n        timer.timerG.transform('t35, -50');\n        await opening();\n        timer.init();\n        generateQ = generateQuestion();\n        //처음 시작\n        generateQ.next(); \n    }\n\n    start();\n}","import Snap from 'sol-common/snap';\nimport D1Animate from '../utils/D1Animate';\nimport { getRandomNumber } from '../utils/util';\n\nexport default function D1drag({ dragItem, draggingItem, startCallback, moveCallback, endCallback }) {\n    dragItem = dragItem.addClass('cp');\n    draggingItem && draggingItem.attr({ opacity: '0', pointerEvents: 'none' });\n\n    const originPoint = dragItem.getBBox();\n    const dragStart = element => element.data('originTransform', element.transform().local);\n    const dragMove = (elemenet, dx, dy) => {\n        const origin = elemenet.data('originTransform') || '';\n        const snapInvMatrix = elemenet.transform().diffMatrix.invert();\n        dx = snapInvMatrix.x(dx, dy);\n        dy = snapInvMatrix.y(dx, dy);\n        elemenet.transform(origin + 't' + [dx, dy]);\n    };\n    const dragEnd = element => element.data('originTransform', element.transform().local);\n\n    const start = () => {\n        dragStart(dragItem);\n        if (draggingItem) {\n            setDragState(false);\n            dragStart(draggingItem);\n        }\n        if (startCallback) startCallback();\n    };\n    const move = (dx, dy) => {\n        dragMove(dragItem, dx, dy);\n        if (draggingItem) {\n            setDragState(false);\n            dragMove(draggingItem, dx, dy);\n        }\n        if (moveCallback) moveCallback();\n    };\n    const end = () => {\n        dragEnd(dragItem);\n        if (draggingItem) {\n            setDragState(true);\n            dragEnd(draggingItem);\n        }\n        if (endCallback) endCallback();\n    };\n\n    const setDragState = bool => {\n        dragItem.attr({ opacity: Number(bool) });\n        draggingItem.attr({ opacity: Number(!bool) });\n    };\n\n    const animate = async ({ pathStr, easing, randomDuration: _randomDuration }) => {\n        const { local } = dragItem.transform();\n        dragItem.attr({ pointerEvents: 'none' });\n        const randomDuration = _randomDuration ? getRandomNumber(800, 1100) : 500;\n        if (draggingItem) {\n            D1Animate.onPath({ path: pathStr, duration: randomDuration, element: dragItem, local, easing });\n            await D1Animate.onPath({ path: pathStr, duration: randomDuration, element: draggingItem, local, easing });\n        } else {\n            await D1Animate.onPath({ path: pathStr, duration: randomDuration, element: dragItem, local, easing });\n        }\n        dragItem.attr({ pointerEvents: 'auto' });\n    };\n\n    dragItem.spectrumEffect = ({ interval: _interval = 100, duration = 750 }) => {\n        const interval = setInterval(() => {\n            const clone = dragItem.clone();\n            clone.after(dragItem);\n            Snap.animate(\n                1,\n                0,\n                val => clone.attr({ opacity: val }),\n                duration,\n                undefined,\n                () => clone.remove()\n            );\n        }, _interval);\n\n        const remove = () => clearInterval(interval);\n\n        return { remove };\n    };\n\n    dragItem.moveAnimate = async (point, easing, randomDuration) => {\n        const { x, y } = dragItem.getBBox();\n        const pathStr = 'M' + [x, y] + 'L' + [point.x, point.y];\n        await animate({ pathStr, easing, randomDuration });\n    };\n    dragItem.reset = async (dx = 0, dy = 0) => {\n        const { x, y } = dragItem.getBBox();\n        const pathStr = 'M' + [x, y] + 'L' + [originPoint.x + dx, originPoint.y + dy];\n        await animate({ pathStr });\n    };\n    dragItem.moveAnimateWithScale = ({ dx, dy, scale }) => {\n        const { local } = dragItem.transform();\n        return new Promise(resolve => {\n            Snap.animate(\n                0,\n                1,\n                val => {\n                    const move = 't' + [val * dx, val * dy];\n                    const _scale = 's' + (1 - ((scale.from - scale.to) / scale.from) * val);\n                    dragItem.transform(local + move + _scale);\n                },\n                750,\n                undefined,\n                resolve\n            );\n        });\n    };\n    dragItem.hidden = () => dragItem.attr({ opacity: '0', pointerEvents: 'none' });\n    dragItem.drag(move, start, end);\n\n    return dragItem;\n}\n","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"800px\\\" height=\\\"500px\\\" viewBox=\\\"0 0 800 500\\\" style=\\\"enable-background:new 0 0 800 500;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:url(#BG_00000135692529543292955410000015246865133347124352_);} .st1{fill:#D7F2F2;} .st2{fill:#00AC86;} .st3{fill:#17C6AC;} .st4{fill:#5AD1AC;} </style><linearGradient id=\\\"BG_00000034047314643458070690000015620883270547789238_\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"400\\\" y1=\\\"441.8559\\\" x2=\\\"400\\\" y2=\\\"57.1193\\\" gradientTransform=\\\"matrix(1 0 0 -1 0 500)\\\"><stop offset=\\\"0\\\" style=\\\"stop-color:#96E4FB\\\"></stop><stop offset=\\\"0.2372\\\" style=\\\"stop-color:#AEE7F1\\\"></stop><stop offset=\\\"0.4922\\\" style=\\\"stop-color:#C0E9EA\\\"></stop><stop offset=\\\"0.6712\\\" style=\\\"stop-color:#C7EAE7\\\"></stop></linearGradient><rect id=\\\"BG\\\" style=\\\"fill:url(#BG_00000034047314643458070690000015620883270547789238_);\\\" width=\\\"800\\\" height=\\\"500\\\"></rect><g id=\\\"_x0A_cloud\\\"><path class=\\\"st1\\\" d=\\\"M800,264c-24.7-4.8-51.2,2.4-70.4,21.5c-10.6,10.6-17.5,23.4-20.7,36.9c-19.3-16.2-48-15.2-66.1,2.9 c-9.1,9.1-13.8,20.8-14.3,32.7c-19.8-16.9-49.6-16.1-68.3,2.7c-6.1,6.1-10.3,13.4-12.6,21.1h-3.8c-1.2-1.5-2.4-2.9-3.8-4.3 c-23.4-23.4-61.3-23.4-84.7,0c-23.4,23.4-23.4,61.3,0,84.7h27.9H540h260V264z\\\"></path><path class=\\\"st1\\\" d=\\\"M375.9,431.3c0-28.8-23.3-52.1-52.1-52.1c-3.1,0-6.1,0.3-9,0.8c-2.8-32.4-34.6-57.9-73.5-57.9 c-9.7,0-19,1.6-27.5,4.5c-11.9-29.1-40.5-49.7-73.9-49.7c-38.4,0-70.4,27-78.1,63.1c-7.5-3.2-15.7-4.9-24.3-4.9 c-14,0-27,4.6-37.4,12.5v144H317c22.7,0,44-12.5,53.6-33.1C374.1,451,376.3,441.9,375.9,431.3z\\\"></path></g><g id=\\\"_x0A_under\\\"><path class=\\\"st2\\\" d=\\\"M800,417.4c-0.3,0.1-0.7,0.2-1,0.4c-0.6-8.6-6.5-16.2-15.2-18.5c-5.3-1.4-10.7-0.6-15.1,1.8 c-3.2-13.5-15.3-23.6-29.9-23.6c-14,0-25.7,9.3-29.5,22.1c-3.6-1.1-7.5-1.3-11.5-0.2c-8.7,2.3-14.6,9.8-15.2,18.3 c-2.9-1-6.1-1-8.9,0.4c-5.9,3-7.9,10.8-4.5,17.5c2.4,4.7,15.5,20.5,51.1,13.8c0,0,18.5,6.8,36.9,0.4c0,0,25.1,6.5,42.8-1.9 L800,417.4L800,417.4z\\\"></path><path class=\\\"st2\\\" d=\\\"M529.5,421.3c-2.4-1.2-5.2-1.2-7.7-0.1c-0.5-6.9-5.2-13.1-12.3-15c-4.3-1.1-8.6-0.5-12.2,1.5 c-2.6-10.9-12.4-19.1-24.1-19.1c-11.3,0-20.8,7.5-23.8,17.8c-2.9-0.9-6.1-1-9.3-0.2c-7,1.9-11.8,7.9-12.3,14.8 c-2.4-0.8-4.9-0.8-7.2,0.3c-4.8,2.4-6.4,8.7-3.7,14.2c1.9,3.8,12.5,16.5,41.3,11.2c0,0,15,5.5,29.8,0.3c0,0,34.4,8.9,45.1-11.5 C536,430.1,534.2,423.7,529.5,421.3z\\\"></path><path class=\\\"st3\\\" d=\\\"M0,500h614.1C301.3,376.1,80.6,389.1,0,400.5V500z\\\"></path><path class=\\\"st4\\\" d=\\\"M799.9,431.2c-267-31-700,50.5-792.1,68.8h792.1V431.2z\\\"></path><path class=\\\"st2\\\" d=\\\"M80,481.2c-2.8-1.4-6-1.4-8.9-0.2c-0.5-8-6-15.1-14.2-17.3c-4.9-1.3-9.9-0.6-14.1,1.7c-3-12.6-14.3-22-27.8-22 c-5.5,0-10.7,1.6-15.1,4.3V500h82.8c0.5-0.8,1-1.6,1.5-2.5C87.5,491.3,85.5,483.9,80,481.2z\\\"></path></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"P015\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"178.4px\\\" height=\\\"255.2px\\\" viewBox=\\\"0 0 178.4 255.2\\\" style=\\\"enable-background:new 0 0 178.4 255.2;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:url(#Calculate_Background_SVGID_1_);} .st1{fill:url(#Calculate_Background_SVGID_00000178190790475628909250000006449296112203637409_);} .st2{fill:url(#Calculate_Background_SVGID_00000070091473898791648670000014163387305764301743_);} .st3{opacity:0.3;fill:url(#Calculate_Background_SVGID_00000157988458552836427830000007418247543483379117_);} .st4{fill:url(#Calculate_Background_SVGID_00000015328696823232808110000009579433082813921180_);} .st5{fill:url(#Calculate_Background_SVGID_00000117668381593852031490000004356141466418626459_);} .st6{fill:url(#Calculate_Background_SVGID_00000073002457128177674710000009634639561443869344_);} .st7{opacity:0.3;fill:url(#Calculate_Background_SVGID_00000081629972553768230170000014106269386219717540_);} .st8{fill:url(#Calculate_Background_SVGID_00000044895426392190503810000010744986104899505341_);} .st9{fill:url(#Calculate_Background_SVGID_00000118387982092459657360000011241880083475047853_);} .st10{fill:url(#Calculate_Background_SVGID_00000179642157833037441600000003243783215691234722_);} .st11{opacity:0.3;fill:url(#Calculate_Background_SVGID_00000106833435335319442380000003745381910669672105_);} .st12{fill:#828688;} .st13{fill:url(#Calculate_Background_SVGID_00000024714959132899199230000011231306019161554851_);} .st14{fill:url(#Calculate_Background_SVGID_00000087388422856755093330000014372057839736728974_);} .st15{fill:url(#Calculate_Background_SVGID_00000147905309122491839510000001311947442193609379_);} .st16{opacity:0.3;fill:url(#Calculate_Background_SVGID_00000168094919248101333320000005425785502372966031_);} .st17{fill:#1C7C6A;} .st18{fill:url(#Calculate_Background_SVGID_00000172428633564096480660000000815917313901424789_);} .st19{fill:url(#Calculate_Background_SVGID_00000017482032680930466140000005341938365215087533_);} .st20{fill:url(#Calculate_Background_SVGID_00000167382854937144978620000014309904687539194763_);} .st21{opacity:0.3;fill:url(#Calculate_Background_SVGID_00000022534173264416830050000005205157747062791834_);} .st22{fill:url(#Calculate_Background_SVGID_00000022532420264954478420000011520457309728998579_);} .st23{fill:url(#Calculate_Background_SVGID_00000003795282204784091910000005823692189905153926_);} .st24{fill:url(#Calculate_Background_SVGID_00000114766462113315755610000000977608771870055840_);} .st25{opacity:0.3;fill:url(#Calculate_Background_SVGID_00000012465464479020233790000016809191839987132308_);} .st26{fill:url(#Calculate_Background_SVGID_00000163786258927239904050000003023008587507842476_);} .st27{fill:url(#Calculate_Background_SVGID_00000007394068318345389810000005581003828827779208_);} .st28{opacity:0.64;fill:url(#Calculate_Background_SVGID_00000137125056796858711760000011426344643947396241_);} .st29{fill:url(#Calculate_Background_SVGID_00000161601914326111492040000015386576098847761082_);} .st30{opacity:0;fill:#FFFFFF;} .st31{opacity:2.857143e-02;fill:#FDFDFD;} .st32{opacity:5.714286e-02;fill:#FAFAFA;} .st33{opacity:8.571429e-02;fill:#F8F8F8;} .st34{opacity:0.1143;fill:#F5F6F6;} .st35{opacity:0.1429;fill:#F3F3F4;} .st36{opacity:0.1714;fill:#F0F1F1;} .st37{opacity:0.2;fill:#EEEFEF;} .st38{opacity:0.2286;fill:#ECECED;} .st39{opacity:0.2571;fill:#E9EAEB;} .st40{opacity:0.2857;fill:#E7E8E8;} .st41{opacity:0.3143;fill:#E4E6E6;} .st42{opacity:0.3429;fill:#E2E3E4;} .st43{opacity:0.3714;fill:#DFE1E2;} .st44{opacity:0.4;fill:#DDDFDF;} .st45{opacity:0.4286;fill:#DBDCDD;} .st46{opacity:0.4571;fill:#D8DADB;} .st47{opacity:0.4857;fill:#D6D8D9;} .st48{opacity:0.5143;fill:#D3D5D6;} .st49{opacity:0.5429;fill:#D1D3D4;} .st50{opacity:0.5714;fill:#CED1D2;} .st51{opacity:0.6;fill:#CCCED0;} .st52{opacity:0.6286;fill:#CACCCD;} .st53{opacity:0.6571;fill:#C7CACB;} .st54{opacity:0.6857;fill:#C5C7C9;} .st55{opacity:0.7143;fill:#C2C5C7;} .st56{opacity:0.7429;fill:#C0C3C4;} .st57{opacity:0.7714;fill:#BDC1C2;} .st58{opacity:0.8;fill:#BBBEC0;} .st59{opacity:0.8286;fill:#B9BCBE;} .st60{opacity:0.8571;fill:#B6BABB;} .st61{opacity:0.8857;fill:#B4B7B9;} .st62{opacity:0.9143;fill:#B1B5B7;} .st63{opacity:0.9429;fill:#AFB3B5;} .st64{opacity:0.9714;fill:#ACB0B2;} .st65{fill:#AAAEB0;} .st66{fill:url(#Calculate_Background_SVGID_00000152967934304114943340000011169922676375201201_);} .st67{fill:url(#Calculate_Background_SVGID_00000121992590965052348330000009605365251323898246_);} .st68{fill:url(#Calculate_Background_SVGID_00000003077208613019639360000008968480259644826028_);} .st69{fill:none;} .st70{fill:url(#Calculate_Background_SVGID_00000078758222611078783120000013788017724212745403_);} .st71{fill:#5B5B5B;} .st72{fill:#777777;} .st73{fill:#444444;} .st74{opacity:7.000000e-02;fill:#FFFFFF;} .st75{fill:#878787;} .st76{fill:#FFFFFF;} .st77{fill:#37474F;} .st78{opacity:0.47;fill:#666666;} .st79{opacity:0.47;fill:#A0A0A0;} .st80{fill:url(#Calculate_Background_SVGID_00000054963731843933478630000002644223248006636719_);} .st81{fill:#8C8C8C;} .st82{opacity:0.42;fill:#898989;} .st83{fill:#0DA5A8;} .st84{fill:#E6F3F4;} .st85{fill:none;stroke:#0097A3;stroke-width:2;stroke-miterlimit:10;} .st86{fill:#39BCBC;} .st87{fill:#0B6D6A;} .st88{fill:url(#Calculate_Background_SVGID_00000127036067887088612950000006703289885938758839_);} .st89{opacity:0.13;fill:url(#Calculate_Background_SVGID_00000092432461814559394160000011773032871698271152_);} .st90{fill:#161206;} .st91{opacity:0.21;fill:url(#Calculate_Background_SVGID_00000168077497067110942950000016240146433381525162_);} .st92{opacity:0.38;fill:url(#Calculate_Background_SVGID_00000150823851699808786870000007694814126694505119_);} .st93{opacity:0.64;fill:#14121E;} .st94{fill:#A37714;} .st95{opacity:0.15;fill:url(#Calculate_Background_SVGID_00000157306160296271932030000017896645796568345505_);} .st96{fill:#7F7F7F;} .st97{fill:none;stroke:#7F7F7F;stroke-width:15;stroke-miterlimit:10;} .st98{fill:#A5A5A5;} .st99{fill:#E8BE60;} .st100{fill:#B28D42;} .st101{opacity:0.45;} .st102{fill:#A9ADAA;} .st103{fill:#424242;} .st104{fill:#7A7A7A;} .st105{fill:#4C5356;} .st106{fill:#278282;} .st107{fill:#2F969B;} .st108{opacity:0.52;fill:#283033;} .st109{fill:url(#Calculate_Background_SVGID_00000160173951118479866640000008614112671823145401_);} .st110{opacity:0.77;fill:url(#Calculate_Background_SVGID_00000008861460053901066870000008601008121450256035_);} .st111{fill:url(#Calculate_Background_SVGID_00000150803887915347141160000005469614514930722993_);} .st112{opacity:0.77;fill:url(#Calculate_Background_SVGID_00000079472079552721558500000009931361247717429155_);} .st113{opacity:0.77;fill:url(#Calculate_Background_SVGID_00000115498882389085018840000003961784231202421390_);} .st114{opacity:0.2;} .st115{fill:#2E2E2E;} .st116{fill:url(#Calculate_Background_SVGID_00000017497993885438065790000016355508238660218005_);} .st117{opacity:0.77;} .st118{fill:url(#Calculate_Background_SVGID_00000180329360168614530690000004392563326144527025_);} .st119{fill:#FFD81A;} .st120{fill:#FFB127;} .st121{fill:#FFC136;} .st122{fill:#FFF794;} .st123{opacity:0.4;fill:#FFB127;} .st124{fill:url(#Calculate_Background_SVGID_00000155120307050928081270000001671394211370137257_);} .st125{fill:url(#Calculate_Background_SVGID_00000158717838111245130420000012190689265506857608_);} .st126{fill:#F6B90E;} .st127{fill:#22BFBF;} .st128{fill:#333333;} .st129{fill:#F1F1F1;} .st130{fill:#1A1A1A;} .st131{fill:#199992;} .st132{fill:#F4EEE4;} .st133{opacity:0.24;} </style><g id=\\\"계산기판\\\"><g><path class=\\\"st30\\\" d=\\\"M177.3,0.1H1.1C0.5,0.1,0,0.6,0,1.1v253c0,0.6,0.5,1.1,1.1,1.1h176.2c0.6,0,1.1-0.5,1.1-1.1V1.1 C178.4,0.6,177.9,0.1,177.3,0.1z\\\"></path><path class=\\\"st31\\\" d=\\\"M177,0.1H1.3c-0.6,0-1.1,0.5-1.1,1.1v252.4c0,0.6,0.5,1.1,1.1,1.1H177c0.6,0,1.1-0.5,1.1-1.1V1.1 C178.1,0.6,177.6,0.1,177,0.1z\\\"></path><path class=\\\"st32\\\" d=\\\"M176.7,0.1H1.5c-0.6,0-1.1,0.5-1.1,1.1V253c0,0.6,0.5,1.1,1.1,1.1h175.3c0.6,0,1.1-0.5,1.1-1.1V1.1 C177.8,0.5,177.3,0.1,176.7,0.1z\\\"></path><path class=\\\"st33\\\" d=\\\"M176.4,0.1H1.7c-0.6,0-1,0.5-1,1v251.3c0,0.6,0.5,1,1,1h174.8c0.6,0,1-0.5,1-1V1.1 C177.5,0.5,177,0.1,176.4,0.1z\\\"></path><path class=\\\"st34\\\" d=\\\"M176.2,0.1H1.9c-0.6,0-1,0.5-1,1v250.7c0,0.6,0.5,1,1,1h174.3c0.6,0,1-0.5,1-1V1.1 C177.2,0.5,176.7,0.1,176.2,0.1z\\\"></path><path class=\\\"st35\\\" d=\\\"M175.9,0.1H2.1c-0.6,0-1,0.5-1,1v250.2c0,0.6,0.5,1,1,1h173.8c0.6,0,1-0.5,1-1V1.1 C176.9,0.5,176.4,0.1,175.9,0.1z\\\"></path><path class=\\\"st36\\\" d=\\\"M175.6,0.1H2.3c-0.6,0-1,0.5-1,1v249.6c0,0.6,0.5,1,1,1h173.3c0.6,0,1-0.5,1-1V1.1 C176.6,0.5,176.2,0.1,175.6,0.1z\\\"></path><path class=\\\"st37\\\" d=\\\"M175.3,0.1H2.5c-0.6,0-1,0.5-1,1v249c0,0.6,0.5,1,1,1h172.8c0.6,0,1-0.5,1-1V1.1 C176.3,0.5,175.9,0.1,175.3,0.1z\\\"></path><path class=\\\"st38\\\" d=\\\"M175,0.1H2.7c-0.6,0-1,0.5-1,1v248.5c0,0.6,0.5,1,1,1H175c0.6,0,1-0.5,1-1V1.1C176,0.5,175.6,0.1,175,0.1z\\\"></path><path class=\\\"st39\\\" d=\\\"M174.7,0.1H2.9c-0.6,0-1,0.5-1,1V249c0,0.6,0.5,1,1,1h171.8c0.6,0,1-0.5,1-1V1.1 C175.7,0.5,175.3,0.1,174.7,0.1z\\\"></path><path class=\\\"st40\\\" d=\\\"M174.5,0.1H3.1c-0.6,0-1,0.4-1,1v247.3c0,0.6,0.4,1,1,1h171.3c0.6,0,1-0.4,1-1V1.1 C175.5,0.5,175,0.1,174.5,0.1z\\\"></path><path class=\\\"st41\\\" d=\\\"M174.2,0.1H3.3c-0.6,0-1,0.4-1,1v246.8c0,0.6,0.4,1,1,1h170.8c0.6,0,1-0.4,1-1V1.1 C175.2,0.5,174.7,0.1,174.2,0.1z\\\"></path><path class=\\\"st42\\\" d=\\\"M173.9,0.1H3.5c-0.5,0-1,0.4-1,1v246.2c0,0.5,0.4,1,1,1h170.4c0.5,0,1-0.4,1-1V1.1 C174.9,0.5,174.4,0.1,173.9,0.1z\\\"></path><path class=\\\"st43\\\" d=\\\"M173.6,0.1H3.7c-0.5,0-1,0.4-1,1v245.7c0,0.5,0.4,1,1,1h169.9c0.5,0,1-0.4,1-1V1.1 C174.6,0.5,174.1,0.1,173.6,0.1z\\\"></path><path class=\\\"st44\\\" d=\\\"M173.3,0.1H3.9c-0.5,0-1,0.4-1,1v245.1c0,0.5,0.4,1,1,1h169.4c0.5,0,1-0.4,1-1V1.1 C174.3,0.5,173.9,0.1,173.3,0.1z\\\"></path><path class=\\\"st45\\\" d=\\\"M173,0.1H4.1c-0.5,0-1,0.4-1,1v244.5c0,0.5,0.4,1,1,1H173c0.5,0,1-0.4,1-1V1C174,0.5,173.6,0.1,173,0.1z\\\"></path><path class=\\\"st46\\\" d=\\\"M172.7,0.1H4.4c-0.5,0-1,0.4-1,1v244c0,0.5,0.4,1,1,1h168.4c0.5,0,1-0.4,1-1V1 C173.7,0.5,173.3,0.1,172.7,0.1z\\\"></path><path class=\\\"st47\\\" d=\\\"M172.5,0.1H4.6c-0.5,0-1,0.4-1,1v243.4c0,0.5,0.4,1,1,1h167.9c0.5,0,1-0.4,1-1V1 C173.4,0.5,173,0.1,172.5,0.1z\\\"></path><path class=\\\"st48\\\" d=\\\"M172.2,0.1H4.8c-0.5,0-1,0.4-1,1v242.8c0,0.5,0.4,1,1,1h167.4c0.5,0,1-0.4,1-1V1 C173.1,0.5,172.7,0.1,172.2,0.1z\\\"></path><path class=\\\"st49\\\" d=\\\"M171.9,0.1H5C4.4,0.1,4,0.5,4,1v242.3c0,0.5,0.4,0.9,0.9,0.9h166.9c0.5,0,0.9-0.4,0.9-0.9V1 C172.8,0.5,172.4,0.1,171.9,0.1z\\\"></path><path class=\\\"st50\\\" d=\\\"M171.6,0.1H5.2C4.7,0.1,4.2,0.5,4.2,1v241.7c0,0.5,0.4,0.9,0.9,0.9h166.4c0.5,0,0.9-0.4,0.9-0.9V1 C172.5,0.5,172.1,0.1,171.6,0.1z\\\"></path><path class=\\\"st51\\\" d=\\\"M171.3,0.1H5.4C4.9,0.1,4.5,0.5,4.5,1v241.2c0,0.5,0.4,0.9,0.9,0.9h165.9c0.5,0,0.9-0.4,0.9-0.9V1 C172.3,0.5,171.8,0.1,171.3,0.1z\\\"></path><path class=\\\"st52\\\" d=\\\"M171,0.1H5.6C5.1,0.1,4.7,0.5,4.7,1v240.6c0,0.5,0.4,0.9,0.9,0.9H171c0.5,0,0.9-0.4,0.9-0.9V1 C172,0.5,171.5,0.1,171,0.1z\\\"></path><path class=\\\"st53\\\" d=\\\"M170.8,0.1H5.8C5.3,0.1,4.9,0.5,4.9,1v240c0,0.5,0.4,0.9,0.9,0.9h165c0.5,0,0.9-0.4,0.9-0.9V1 C171.7,0.5,171.3,0.1,170.8,0.1z\\\"></path><path class=\\\"st54\\\" d=\\\"M170.5,0.1H6C5.5,0.1,5.1,0.5,5.1,1v239.5c0,0.5,0.4,0.9,0.9,0.9h164.5c0.5,0,0.9-0.4,0.9-0.9V1 C171.4,0.5,171,0.1,170.5,0.1z\\\"></path><path class=\\\"st55\\\" d=\\\"M170.2,0.1H6.2C5.7,0.1,5.3,0.5,5.3,1v238.9c0,0.5,0.4,0.9,0.9,0.9h164c0.5,0,0.9-0.4,0.9-0.9V1 C171.1,0.5,170.7,0.1,170.2,0.1z\\\"></path><path class=\\\"st56\\\" d=\\\"M169.9,0.1H6.4C5.9,0.1,5.5,0.5,5.5,1v238.4c0,0.5,0.4,0.9,0.9,0.9h163.5c0.5,0,0.9-0.4,0.9-0.9V1 C170.8,0.5,170.4,0.1,169.9,0.1z\\\"></path><path class=\\\"st57\\\" d=\\\"M169.6,0.1H6.6C6.1,0.1,5.7,0.5,5.7,1v237.8c0,0.5,0.4,0.9,0.9,0.9h163c0.5,0,0.9-0.4,0.9-0.9V1 C170.5,0.5,170.1,0.1,169.6,0.1z\\\"></path><path class=\\\"st58\\\" d=\\\"M169.3,0.1H6.8C6.3,0.1,5.9,0.5,5.9,1v237.2c0,0.5,0.4,0.9,0.9,0.9h162.5c0.5,0,0.9-0.4,0.9-0.9V1 C170.2,0.5,169.8,0.1,169.3,0.1z\\\"></path><path class=\\\"st59\\\" d=\\\"M169,0.1H7C6.5,0.1,6.1,0.5,6.1,1v236.7c0,0.5,0.4,0.9,0.9,0.9h162c0.5,0,0.9-0.4,0.9-0.9V1 C169.9,0.5,169.5,0.1,169,0.1z\\\"></path><path class=\\\"st60\\\" d=\\\"M168.8,0.1H7.2c-0.5,0-0.9,0.4-0.9,0.9V237c0,0.5,0.4,0.9,0.9,0.9h161.5c0.5,0,0.9-0.4,0.9-0.9V0.9 C169.6,0.5,169.2,0.1,168.8,0.1z\\\"></path><path class=\\\"st61\\\" d=\\\"M168.5,0.1H7.4C7,0.1,6.6,0.5,6.6,0.9v235.5c0,0.5,0.4,0.9,0.9,0.9h161c0.5,0,0.9-0.4,0.9-0.9V0.9 C169.3,0.5,169,0.1,168.5,0.1z\\\"></path><path class=\\\"st62\\\" d=\\\"M168.2,0.1H7.6c-0.5,0-0.9,0.4-0.9,0.9v235c0,0.5,0.4,0.9,0.9,0.9h160.6c0.5,0,0.9-0.4,0.9-0.9V0.9 C169.1,0.5,168.7,0.1,168.2,0.1z\\\"></path><path class=\\\"st63\\\" d=\\\"M167.9,0.1H7.8C7.4,0.1,7,0.5,7,0.9v234.4c0,0.5,0.4,0.9,0.9,0.9h160.1c0.5,0,0.9-0.4,0.9-0.9V0.9 C168.8,0.5,168.4,0.1,167.9,0.1z\\\"></path><path class=\\\"st64\\\" d=\\\"M167.6,0.1H8.1c-0.5,0-0.8,0.4-0.8,0.8v233.9c0,0.5,0.4,0.8,0.8,0.8h159.6c0.5,0,0.8-0.4,0.8-0.8V0.9 C168.5,0.5,168.1,0.1,167.6,0.1z\\\"></path><path class=\\\"st65\\\" d=\\\"M167.3,0.1H8.3c-0.5,0-0.8,0.4-0.8,0.8v233.3c0,0.5,0.4,0.8,0.8,0.8h159.1c0.5,0,0.8-0.4,0.8-0.8V0.9 C168.2,0.4,167.8,0.1,167.3,0.1z\\\"></path></g><linearGradient id=\\\"Calculate_Background_SVGID_1_\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"90.0324\\\" y1=\\\"253.7916\\\" x2=\\\"90.0324\\\" y2=\\\"4.590900e-02\\\"><stop offset=\\\"1.785710e-02\\\" style=\\\"stop-color:#B7B8B8\\\"></stop><stop offset=\\\"6.150790e-02\\\" style=\\\"stop-color:#ACB2B5\\\"></stop><stop offset=\\\"0.1448\\\" style=\\\"stop-color:#C8CACC\\\"></stop><stop offset=\\\"0.2282\\\" style=\\\"stop-color:#C7C9CB\\\"></stop><stop offset=\\\"0.8353\\\" style=\\\"stop-color:#CBCDCF\\\"></stop><stop offset=\\\"0.9306\\\" style=\\\"stop-color:#DCDDDD\\\"></stop><stop offset=\\\"1\\\" style=\\\"stop-color:#B5B5B5\\\"></stop></linearGradient><polygon class=\\\"st0\\\" points=\\\"172,0 8,0 8,0 8,255.1 172,255.1 172,255 \\\"></polygon><g><linearGradient id=\\\"Calculate_Background_SVGID_00000054244419232386711690000006991764262068369038_\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"172.8285\\\" y1=\\\"253.7919\\\" x2=\\\"172.8285\\\" y2=\\\"4.590900e-02\\\"><stop offset=\\\"0\\\" style=\\\"stop-color:#A6A6A6\\\"></stop><stop offset=\\\"6.944400e-02\\\" style=\\\"stop-color:#CDCECE\\\"></stop><stop offset=\\\"0.1647\\\" style=\\\"stop-color:#BCBEC0\\\"></stop><stop offset=\\\"0.7718\\\" style=\\\"stop-color:#B8BABC\\\"></stop><stop offset=\\\"0.8552\\\" style=\\\"stop-color:#B9BBBD\\\"></stop><stop offset=\\\"0.9385\\\" style=\\\"stop-color:#9EA3A6\\\"></stop><stop offset=\\\"0.9821\\\" style=\\\"stop-color:#A8A9A9\\\"></stop></linearGradient><path style=\\\"fill:url(#Calculate_Background_SVGID_00000054244419232386711690000006991764262068369038_);\\\" d=\\\"M171.1,0H170v255.1h1.1 c2.5,0,4.5-2,4.5-4.4V4.4C175.6,2,173.6,0,171.1,0z\\\"></path><linearGradient id=\\\"Calculate_Background_SVGID_00000053533803583117839820000012487386711408849567_\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"7.6118\\\" y1=\\\"253.7919\\\" x2=\\\"7.6118\\\" y2=\\\"4.590900e-02\\\"><stop offset=\\\"0\\\" style=\\\"stop-color:#A6A6A6\\\"></stop><stop offset=\\\"6.944400e-02\\\" style=\\\"stop-color:#CDCECE\\\"></stop><stop offset=\\\"0.1647\\\" style=\\\"stop-color:#BCBEC0\\\"></stop><stop offset=\\\"0.7718\\\" style=\\\"stop-color:#B8BABC\\\"></stop><stop offset=\\\"0.8552\\\" style=\\\"stop-color:#B9BBBD\\\"></stop><stop offset=\\\"0.9385\\\" style=\\\"stop-color:#9EA3A6\\\"></stop><stop offset=\\\"0.9821\\\" style=\\\"stop-color:#A8A9A9\\\"></stop></linearGradient><path style=\\\"fill:url(#Calculate_Background_SVGID_00000053533803583117839820000012487386711408849567_);\\\" d=\\\"M10.5,0H9.2C6.7,0,4.7,2,4.7,4.4v246.2 c0,2.4,2,4.4,4.5,4.4h1.3V0z\\\"></path></g></g><g id=\\\"레이어_5\\\"></g><g id=\\\"문제화면판_x28_가로형_x29_\\\"></g><g id=\\\"시계\\\"></g></svg>\"","module.exports = \"<svg version=\\\"1.1\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"320px\\\" height=\\\"52px\\\" viewBox=\\\"0 0 320 52\\\" style=\\\"enable-background:new 0 0 320 52;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#D1D2D4;stroke:#231F20;stroke-width:1.98;stroke-linecap:round;stroke-miterlimit:10;} .st1{fill:none;stroke:#231F20;stroke-width:1.98;stroke-linecap:round;stroke-miterlimit:10;} </style><g class=\\\"basicElement\\\"><path class=\\\"st0\\\" d=\\\"M15.2,23.1L2,4v45l13.2-18.3L15.2,23.1z\\\"></path></g><g class=\\\"trElement\\\"><path class=\\\"st0\\\" d=\\\"M15.2,30.7 h96.3c0,0,16.3-5.1,0-7.5 l-96,0 z\\\"></path></g></svg>\"","module.exports = \"<svg version=\\\"1.1\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"52px\\\" height=\\\"320px\\\" viewBox=\\\"0 0 52 320\\\" style=\\\"enable-background:new 0 0 52 320;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#D1D2D4;stroke:#231F20;stroke-width:1.98;stroke-linecap:round;stroke-miterlimit:10 transform:rotate(90);} .st1{fill:none;stroke:#231F20;stroke-width:1.98;stroke-linecap:round;stroke-miterlimit:10;} </style><g class=\\\"basicElement\\\" transform=\\\"translate(0,0) rotate(270)\\\"><path class=\\\"st0\\\" d=\\\"M15.2,23.1L2,4v45l13.2-18.3L15.2,23.1z\\\"></path></g><g class=\\\"trElement\\\" transform=\\\"translate(0,0) rotate(270)\\\"><path class=\\\"st0\\\" d=\\\"M15.2,30.7 h96.3c0,0,16.3-5.1,0-7.5 l-96,0 z\\\"></path></g></svg>\"","module.exports = \"<svg version=\\\"1.0\\\" id=\\\"Layer\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"385.6px\\\" height=\\\"339.7px\\\" viewBox=\\\"0 0 385.6 339.7\\\" style=\\\"enable-background:new 0 0 385.6 339.7;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#02A365;} .st1{fill:#00D994;} .st2{fill:#B459FF;} .st3{fill:#F9AF38;} .st4{fill:#FCD45A;} .st5{fill:#04909B;} .st6{fill:#01B5D6;} .st7{fill:#04B5C5;} .st8{fill:#FC8857;} .st9{fill:#FB639C;} .st10{fill:#8943C2;} .st11{fill:#FF4F5D;} .st12{fill:#CE4155;} .st13{fill:#FFCB00;} </style><g id=\\\"confetti\\\"><g><g><path class=\\\"st0\\\" d=\\\"M7.8,191.3c0,0,7.5-0.1,9.5,9.7c2,9.8,6.5,9.9,6.5,9.9l5-1.2c0,0,2.3,1.7,1.6-5.5 c-0.8-7.2-10.9-22.6-17.3-18.6C4.6,191,7.8,191.3,7.8,191.3z\\\"></path><path class=\\\"st1\\\" d=\\\"M15.6,185c0,0-5-0.3-10.9,2.1c-2.9,1.2-7.3,9.8-2.5,17.5c0,0,0.2,1.4,4,1.9c3.8,0.5,6.8,0.7,7.2-0.3 c0,0-2-1.7-2.6-5.1c-0.4-2.2-0.3-3.7,0.2-7.5C11.6,187.5,14,184.9,15.6,185z\\\"></path><path class=\\\"st1\\\" d=\\\"M29.9,209.7c0,0-0.7,2-8,1.7c-3.3-0.1-6.3-2.4-7-5.7c-0.2-1.1-0.4-2.5-0.5-4.1c-0.5-8.6,2.8-16,7-17.1 c8.4-2.2,12.2-1.7,13.9-1c0,0-6.3-1.2-9.3,7.6C22.6,201,26.1,210.9,29.9,209.7z\\\"></path></g></g><path class=\\\"st2\\\" d=\\\"M106.5,315.4c7.1-7.1,9.4-11.6,11-21.5c4.9,2.5,7.4,3.8,12.4,6.3c-1.6,9.9-3.9,14.5-11,21.5 C113.9,319.2,111.4,318,106.5,315.4z\\\"></path><g><g><path class=\\\"st3\\\" d=\\\"M317.7,309.4c-1.6-1.2-16,14.2-18.2,12.7l-5.3-4.1c1.2,1,15.9-14.3,18-12.8L317.7,309.4z\\\"></path><path class=\\\"st4\\\" d=\\\"M317.8,309.5c2,1.5-0.7,7.8-4.8,13.3l-5.4-4.2c4.1-5.6,7-11.7,4.9-13.3C312.4,305.3,316.8,308.7,317.8,309.5 z\\\"></path><path class=\\\"st3\\\" d=\\\"M307.9,301.9c-1.6-1.2-16,14.2-18.2,12.7l-5.3-4.1c1.2,1,15.9-14.3,18-12.8L307.9,301.9z\\\"></path><path class=\\\"st3\\\" d=\\\"M293.8,291.1c-3.6-2.8-21.5,1.9-25.8-1.4l-5.3-4.1c4.6,3.5,20.7-2.5,25.6,1.2L293.8,291.1z\\\"></path><path class=\\\"st4\\\" d=\\\"M307.9,301.9c0.9,0.7-0.4,4.4-4.5,10c-4.1,5.6-4.5,9.7-3.8,10.3c0,0-4.2-3.2-5.4-4.2 c-1.2-0.9-0.4-4.7,3.8-10.3c4.1-5.6,5.5-9.2,4.5-10C302.5,297.8,307,301.2,307.9,301.9z\\\"></path><path class=\\\"st4\\\" d=\\\"M293.4,290.8c1.7,1.3,1.5,5.4-0.8,12.1c-2.3,6.6-3.8,11-3,11.6c0,0-4.2-3.2-5.4-4.2c-1.2-0.9,0.6-5.1,3-11.6 c2.3-6.5,2.3-10.9,0.8-12.1C288,286.6,292.4,290.1,293.4,290.8z\\\"></path></g></g><g><path class=\\\"st5\\\" d=\\\"M57,271.2c7.5-3.5-11.3-18.1-11.2-26.5c-1.7,0.4-3.2,1.2-4.6,2.4c-5.8,5.5,8.2,17.7,11.1,24.9 C53.9,272.1,55.5,271.9,57,271.2z\\\"></path><path class=\\\"st6\\\" d=\\\"M18.5,268.7c0,0,2.2-2.1,4.6-1.7c7.5,0.8,18.6,14.2,28,9.9c0.3-0.2,0.6-0.3,0.9-0.6c0,0,0,0,0,0l6.1-5.8 c0,0-3.7,1.9-5.8,1.6c-0.1,0-0.1,0-0.2,0c-10.1-0.8-20.9-14.9-27.1-9.5c0,0,0,0,0,0L18.5,268.7z\\\"></path><path class=\\\"st6\\\" d=\\\"M40.9,247.4c0,0,2.8-2.3,4.9-2.7c0,0,0.1,0,0.1,0c8.2-1.8,19.1,4.9,19.1,4.9l6-5.7c0,0-15.7-9.7-23.5-2.7 c0,0,0,0,0,0L40.9,247.4z\\\"></path></g><polygon class=\\\"st7\\\" points=\\\"314.2,70.6 308.2,69.8 304.2,74.4 303,68.5 297.5,66.1 302.7,63.1 303.3,57.1 307.7,61.2 313.6,59.9 311.1,65.4 \\\"></polygon><polygon class=\\\"st7\\\" points=\\\"228.4,322.9 231.9,320.2 231.6,315.8 235.3,318.3 239.4,316.7 238.2,320.9 241,324.4 236.5,324.5 234.2,328.2 232.7,324.1 \\\"></polygon><path class=\\\"st8\\\" d=\\\"M314.9,266.9c7.3,0,7.3-11.4,0-11.4C307.6,255.5,307.6,266.9,314.9,266.9L314.9,266.9z\\\"></path><path class=\\\"st2\\\" d=\\\"M260.2,331.6c6.1,0,6.1-9.5,0-9.5C254.1,322.1,254.1,331.6,260.2,331.6L260.2,331.6z\\\"></path><path class=\\\"st1\\\" d=\\\"M53.7,139.3c6.1,0,6.1-9.5,0-9.5C47.6,129.8,47.6,139.3,53.7,139.3L53.7,139.3z\\\"></path><path class=\\\"st1\\\" d=\\\"M153.2,332.3c5.2,0,5.2-8.1,0-8.1C147.9,324.1,147.9,332.3,153.2,332.3L153.2,332.3z\\\"></path><polygon class=\\\"st9\\\" points=\\\"181,316.8 175.3,316.9 172.1,321.7 170.2,316.3 164.7,314.8 169.3,311.3 169,305.6 173.7,308.9 179,306.9 177.4,312.3 \\\"></polygon><polygon class=\\\"st4\\\" points=\\\"370.1,227.8 371.9,225.2 370.8,222.2 373.9,223.1 376.3,221.1 376.4,224.3 379.1,226.1 376.1,227.1 375.2,230.2 373.3,227.7 \\\"></polygon><polygon class=\\\"st9\\\" points=\\\"200.9,6 202.7,11.7 208.4,13.5 203.5,17 203.6,23 198.8,19.4 193.1,21.4 195,15.7 191.4,10.8 197.4,10.9 \\\"></polygon><path class=\\\"st7\\\" d=\\\"M6.1,250.6c2.9,0,5.4-2.5,5.4-5.4c0-2.9-2.5-5.4-5.4-5.4c-2.9,0-5.4,2.5-5.4,5.4 C0.7,248.1,3.2,250.6,6.1,250.6L6.1,250.6z\\\"></path><rect x=\\\"336.2\\\" y=\\\"275.6\\\" transform=\\\"matrix(0.7908 -0.6121 0.6121 0.7908 -103.687 268.9065)\\\" class=\\\"st1\\\" width=\\\"10.7\\\" height=\\\"21.1\\\"></rect><g><g><path class=\\\"st10\\\" d=\\\"M349.9,94.8c0,0-6,1.5-9.5-6c-3.5-7.5-7.1-6.8-7.1-6.8l-3.8,2c0,0-2.2-0.9-0.2,4.7 c2,5.6,13.1,16.1,17.5,11.7C352.5,94.4,349.9,94.8,349.9,94.8z\\\"></path><path class=\\\"st2\\\" d=\\\"M344.8,101.3c0,0,4.1-0.7,8.4-3.8c2.1-1.5,4-9.3-1.3-14.6c0,0-0.5-1.1-3.6-0.8c-3.2,0.3-5.6,0.7-5.8,1.6 c0,0,1.9,1,3.1,3.6c0.7,1.7,0.9,2.9,1.3,6.1C347.6,98.6,346.1,101.1,344.8,101.3z\\\"></path><path class=\\\"st2\\\" d=\\\"M328.5,84.2c0,0,0.2-1.7,6.1-2.9c2.7-0.5,5.5,0.7,6.7,3.2c0.4,0.9,0.8,1.9,1.2,3.2c2,6.9,0.8,13.4-2.4,15.1 c-6.3,3.4-9.5,3.7-11.1,3.5c0,0,5.3-0.3,6.1-7.9C336.1,89.8,331.4,82.5,328.5,84.2z\\\"></path></g></g><path class=\\\"st11\\\" d=\\\"M196.7,310.6c2.1,11.4,1.9,17.6-0.6,28.9c4.1,0.1,6.2,0.1,10.3,0.2c2.5-11.3,2.7-17.5,0.6-28.9 C202.9,310.7,200.8,310.7,196.7,310.6z\\\"></path><path class=\\\"st11\\\" d=\\\"M164.8,6c-4.9,10.1-8.5,14.9-17,22.3c3.2,2.4,4.8,3.6,8,6.1c8.5-7.4,12.1-12.2,17-22.3 C169.6,9.6,168,8.4,164.8,6z\\\"></path><g><path class=\\\"st10\\\" d=\\\"M41.3,96.9c5.5,5.5,12.2-15.9,19.6-18.6c-0.9-1.4-2.1-2.5-3.6-3.2c-6.7-3.3-12.9,13-18.3,17.9 C39.4,94.5,40.1,95.8,41.3,96.9z\\\"></path><path class=\\\"st2\\\" d=\\\"M30.8,62.3c0,0,2.5,1.2,3,3.4c1.8,6.9-6.4,21,0.5,27.9c0.3,0.3,0.5,0.4,0.8,0.6c0,0,0,0,0,0l7.1,3.5 c0,0-2.9-2.6-3.3-4.6c0-0.1,0-0.1-0.1-0.2c-2.6-9.1,6.3-23.3-0.5-26.9c0,0,0,0,0,0L30.8,62.3z\\\"></path><path class=\\\"st2\\\" d=\\\"M56.9,75c0,0,2.9,1.7,4,3.4c0,0,0,0.1,0.1,0.1c4.3,6.6,2,18.4,2,18.4l6.9,3.4c0,0,3.4-17-5.4-21.6 c0,0,0,0,0,0L56.9,75z\\\"></path></g><g><path class=\\\"st12\\\" d=\\\"M367.8,188.6c7.6-1.8-7.1-18.7-5.5-26.4c-1.6,0.1-3.2,0.5-4.6,1.4c-6.3,4,4.3,17.8,5.6,25 C364.8,188.9,366.2,188.9,367.8,188.6z\\\"></path><path class=\\\"st11\\\" d=\\\"M332.8,179.2c0,0,2.4-1.5,4.5-0.7c6.8,2.1,14.5,16.5,24,14.3c0.3-0.1,0.6-0.2,0.9-0.3c0,0,0,0,0,0l6.7-4.2 c0,0-3.8,1-5.6,0.4c-0.1,0-0.1,0-0.2,0c-9.1-2.6-16.5-17.6-23.2-13.8c0,0,0,0,0,0L332.8,179.2z\\\"></path><path class=\\\"st11\\\" d=\\\"M357.3,163.7c0,0,3-1.6,5-1.6c0,0,0.1,0,0.1,0c7.9-0.2,16.7,8,16.7,8l6.5-4.1c0,0-12.7-11.8-21.2-6.8 c0,0,0,0,0,0L357.3,163.7z\\\"></path></g><path class=\\\"st4\\\" d=\\\"M32.5,139.7c-11.1,6.8-17.6,9.2-30.4,11.2c1.6,4.3,2.4,6.5,4,10.9c12.9-2,19.3-4.4,30.4-11.2 C34.9,146.2,34.1,144.1,32.5,139.7z\\\"></path><path class=\\\"st6\\\" d=\\\"M70.5,31.4C73,40,75.6,43.8,82.7,49.2c-4.1,2.8-6.1,4.2-10.2,7c-7.1-5.4-9.7-9.2-12.3-17.7 C64.3,35.7,66.4,34.3,70.5,31.4z\\\"></path><path class=\\\"st11\\\" d=\\\"M284.8,36.8c-0.5-7.5-2-11-6.8-16.8c3.9-1.6,5.8-2.4,9.6-3.9c4.8,5.7,6.3,9.3,6.8,16.8 C290.6,34.4,288.6,35.2,284.8,36.8z\\\"></path><path class=\\\"st2\\\" d=\\\"M132.3,6.8c-9.5,8.4-13.6,13.8-19.1,25.3c-3.6-2.7-5.4-4.1-9-6.8c5.5-11.5,9.6-16.9,19.1-25.3 C126.9,2.7,128.7,4.1,132.3,6.8z\\\"></path><polygon class=\\\"st1\\\" points=\\\"76.6,291.6 76.3,287.8 73,285.8 76.6,284.4 77.5,280.6 80,283.6 83.8,283.3 81.7,286.5 83.2,290.1 79.5,289.1 \\\"></polygon><polygon class=\\\"st7\\\" points=\\\"12.7,113.8 15.7,116.9 19.9,116.2 17.9,120 19.9,123.8 15.7,123.1 12.7,126.2 12,121.9 8.2,120 12,118.1 \\\"></polygon><polygon class=\\\"st8\\\" points=\\\"341.9,203.5 345.2,208.1 350.9,207.9 347.6,212.5 349.5,217.9 344.1,216.1 339.6,219.6 339.5,213.9 334.9,210.7 340.3,208.9 \\\"></polygon><polygon class=\\\"st8\\\" points=\\\"101.3,278.1 104.7,282.7 110.4,282.5 107,287.1 108.9,292.4 103.5,290.7 99,294.2 99,288.5 94.3,285.3 99.7,283.5 \\\"></polygon><path class=\\\"st8\\\" d=\\\"M264,45.8c0-0.2,0-0.3,0-0.5c0-2.2-1.8-4-4-4c-2.2,0-4,1.8-4,4c0,0.2,0,0.3,0,0.5c0,2.2,1.8,4,4,4 C262.2,49.7,264,47.9,264,45.8L264,45.8z\\\"></path><path class=\\\"st6\\\" d=\\\"M353.1,142.8c-7.6,0.4-11.3,1.8-17.3,6.6c-1.5-4-2.3-6-3.8-9.9c6-4.8,9.6-6.2,17.3-6.6 C350.8,136.8,351.6,138.8,353.1,142.8z\\\"></path><path class=\\\"st13\\\" d=\\\"M367.1,127.9c4.9,2.7,7.7,3.2,13.2,2.5c-0.6,3-0.9,4.5-1.4,7.6c-5.5,0.7-8.3,0.2-13.2-2.5 C366.2,132.4,366.5,130.9,367.1,127.9z\\\"></path><path class=\\\"st11\\\" d=\\\"M338.1,228.7c3.6,5.1,6.2,7.1,12.1,9.1c-2.1,2.8-3.1,4.2-5.2,7c-5.9-2-8.5-4-12.1-9.1 C334.9,232.9,336,231.5,338.1,228.7z\\\"></path><path class=\\\"st11\\\" d=\\\"M55.7,204.9c-3,3.6-3.8,5.8-4.1,10.4c-2.4-0.9-3.6-1.4-6-2.4c0.3-4.6,1.2-6.9,4.1-10.4 C52.1,203.5,53.3,203.9,55.7,204.9z\\\"></path><path class=\\\"st6\\\" d=\\\"M235.7,12c-0.3,6.7,0.6,10,4.3,15.6c-3.6,1-5.4,1.5-9,2.5c-3.7-5.6-4.6-8.9-4.3-15.6 C230.4,13.5,232.2,13,235.7,12z\\\"></path></g></svg>\""],"sourceRoot":""}