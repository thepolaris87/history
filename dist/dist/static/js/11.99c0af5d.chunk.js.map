{"version":3,"sources":["webpack:///./src/modules/DM000011.js","webpack:///./src/utils/util.js","webpack:///./src/assets/sounds/LS00000301.mp3","webpack:///./src/assets/sounds/LS00000300.mp3","webpack:///./src/components/D1feedback.js","webpack:///./src/assets/images/LI00000013.svg","webpack:///./src/assets/images/LI00000009.svg"],"names":["DM000011","canvas","SOL","SVG","p","g","callback","point","getPointInScatterForm","area","x","y","width","height","neighborhood","pointNum","rect","addClass","forEach","el","cx","cy","circle","c1","attr","fill","click","D1feedback","bool","scale","c2","feedback","getUniquArray","arr","filter","i","indexOf","get2dimArray","n","newArray","q","Math","floor","r","getTransposeArray","tempArr","map","push","length","getPointInMatrixForm","startPoint","rows","columns","gap","reverse","center","offset","j","index","points","isPointInsideBBox","bbox","abs","repeat","getRandomNumber","boundingBox","x2","y2","some","bbox2","bbox1","console","error","wait","delay","Promise","resolve","setTimeout","getRandomArrayElement","shuffle","slice","min","max","random","getRandomNumberArray","isUnique","randArr","uniqueArr","getSumArray","reduce","acc","num","getSimultaneousEquationConstant","x1","y1","a","b","convertToPathStr","line","polygon","_rest","rest","Array","isArray","array","copyArray","k","makeArrayNumber","startNum","endNum","rangeNum","isSameArray","saveImage","svg","document","createElement","data","XMLSerializer","serializeToString","blob","Blob","type","img","Image","url","URL","createObjectURL","src","onload","getContext","drawImage","revokeObjectURL","uri","toDataURL","replace","log","href","download","calculateAnswer","sign","ans","rotation","retouchTime","preventTouchRect","opacity","Number","icon","feedbackWrong","feedbackRight","iconNode","loadFragment","key","node","getTBox","iconSize","getAttribute","trans","localSound","LS00000301","LS00000300","sound","loadLocalSound","transform","Snap","appendTo","controller","addUserAction","retouchTimeout","remove","play","once","clearTimeout","module","exports"],"mappings":"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","file":"static/js/11.99c0af5d.chunk.js","sourcesContent":["import Snap from 'sol-common/snap';\nimport { feedback, SOL } from 'sol-common/util';\nimport { getPointInScatterForm } from '../utils/util';\nimport D1feedback from '../components/D1feedback';\n\nexport default function DM000011({ canvas = SOL.SVG, ...p }) {\n    const g = canvas;\n    const callback = p.callback;\n    let count = 0;\n\n    const point = getPointInScatterForm({\n        area: { x: 100, y: 100, width: 300, height: 300 },\n        neighborhood: { width: 60, height: 60 },\n        pointNum: 5\n    });\n    g.rect(100, 100, 300, 300).addClass('fno s02');\n    point.forEach(el => {\n        const { cx, cy, width } = el;\n        g.circle(cx, cy, width / 2);\n    });\n\n    const c1 = g\n        .circle(650, 200, 40)\n        .attr({ fill: 'blue' })\n        .click(async () => {\n            await D1feedback({ el: c1, bool: true, scale: 0.8 });\n            // feedback({ canvas: g, el: c1, bool: true });\n\n            callback();\n        });\n    const c2 = g\n        .circle(650, 300, 40)\n        .attr({ fill: 'red' })\n        .click(() => {\n            feedback({ canvas: g, el: c2, bool: false });\n        });\n\n    const start = () => {};\n\n    start();\n}\n","import Snap from 'sol-common/snap';\n\nexport const getSVGPoint = event => {\n    const svg = document.querySelector('#frame2d');\n    const pt = svg.createSVGPoint();\n    pt.x = event.clientX;\n    pt.y = event.clientY;\n    return pt.matrixTransform(svg.getScreenCTM().inverse());\n};\nexport const getUniquArray = arr => arr.filter((el, i) => arr.indexOf(el) === i);\nexport const get2dimArray = (arr, n) => {\n    const newArray = [];\n    arr.forEach((el, i) => {\n        const q = Math.floor(i / n);\n        const r = i % n;\n        if (r === 0) newArray[q] = [];\n        newArray[q][r] = el;\n    });\n    return newArray;\n};\nexport const getTransposeArray = arr => {\n    const newArray = [];\n    for (let i = 0; i < arr[0].length; i++) {\n        const tempArr = arr.map(el => el[i]);\n        newArray.push(tempArr);\n    }\n    return newArray;\n};\n\nexport const getClassNames = element => element.node.className.baseVal;\n\nexport const getPointInMatrixForm = ({ startPoint = { x: 0, y: 0 }, rows, columns, gap = { x: 0, y: 0 }, reverse = false, center = true }) => {\n    const point = [];\n    const offset = { x: center ? -gap.x * 0.5 * (columns - 1) : 0, y: center ? -gap.y * 0.5 * (rows - 1) : 0 };\n\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < columns; j++) {\n            const index = i * columns + j;\n            const [x, y] = [startPoint.x + gap.x * j + offset.x, startPoint.y + offset.y + (reverse ? -gap.y * i : gap.y * i)];\n            point[index] = { x, y };\n        }\n    }\n    return point;\n};\nexport const getPointInScatterForm = ({ area, pointNum, neighborhood }) => {\n    const points = [];\n    const isPointInsideBBox = (bbox, x, y) => Math.abs(bbox.cx - x) <= bbox.width / 2 && Math.abs(bbox.cy - y) <= bbox.height / 2;\n    const isBBoxIntersect = (bbox1, bbox2) =>\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2);\n\n    const limit = 1000;\n    let n = 0;\n\n    for (let index = 0; index < pointNum; index++) {\n        let repeat = true;\n        while (repeat && n < limit) {\n            const cx = getRandomNumber(area.x + neighborhood.width / 2, area.x + area.width - neighborhood.width / 2);\n            const cy = getRandomNumber(area.y + neighborhood.height / 2, area.y + area.height - neighborhood.height / 2);\n            const boundingBox = {\n                x: cx - neighborhood.width / 2,\n                x2: cx + neighborhood.width / 2,\n                cx,\n                y: cy - neighborhood.height / 2,\n                y2: cy + neighborhood.height / 2,\n                cy,\n                width: neighborhood.width,\n                height: neighborhood.height\n            };\n            const isOverlap = points.some(el => isBBoxIntersect(el, boundingBox));\n            if (!isOverlap) {\n                points.push(boundingBox);\n                repeat = false;\n            }\n            n += 1;\n        }\n    }\n\n    if (n === limit) console.error('CAN NOT GENERATE!!!');\n    return points;\n};\n\nexport const getCloseElement = (targetElement, elements) =>\n    elements.reduce((a, b) => {\n        const currentPoint = targetElement.getBBox().cx;\n        const beforeDx = Math.abs(a.getBBox().cx - currentPoint);\n        const currentDx = Math.abs(b.getBBox().cx - currentPoint);\n        return beforeDx > currentDx ? b : a;\n    }, elements[0]);\n\nexport const wait = (delay = 300) => new Promise(resolve => setTimeout(resolve, delay));\n\nexport const removeArrayElement = (arr, element) => arr.filter(el => el !== element);\nexport const getRandomArrayElement = (arr, n) => {\n    const newArray = shuffle(arr).slice(0, n);\n    while (newArray.length < n) {\n        newArray.push(shuffle(arr)[0]);\n    }\n    return newArray;\n};\nexport const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const getRandomNumberArray = (min, max, n, isUnique = true) => {\n    let randArr = [];\n    let uniqueArr = [];\n    if (isUnique) {\n        while (uniqueArr.length !== n) {\n            for (let index = 0; index < n; index++) {\n                randArr[index] = getRandomNumber(min, max);\n            }\n            uniqueArr = getUniquArray(randArr);\n        }\n    } else {\n        for (let index = 0; index < n; index++) {\n            randArr[index] = getRandomNumber(min, max);\n        }\n    }\n\n    return randArr;\n};\nexport const getSumArray = (arr) => arr.reduce((acc, num) => acc + num);\n\nexport const getSimultaneousEquationConstant = ([x1, y1], [x2, y2]) => {\n    const a = (y2 - y1) / (x2 - x1);\n    const b = y2 - a * x2;\n    return { a, b };\n};\n\nexport const convertToPathStr = {\n    line: ({ x1 = 0, y1 = 0, x2 = 0, y2 = 0 }) => 'M' + [x1, y1] + ' L' + [x2, y2],\n    rect: ({ x = 0, y = 0, width = 0, height = 0 }) => 'M' + [x, y] + ' l' + [0, height] + ' l' + [width, 0] + ' l' + [0, -height] + ' l' + [-width, 0],\n    circle: ({ cx = 0, cy = 0, r = 0 }) => 'M' + [cx + r, cy - r] + 'm' + [-r, 0] + 'a' + [r, r, 0, 1, 1, 0, r * 2] + 'a' + [r, r, 0, 1, 1, 0, -(r * 2)],\n    polygon: (..._rest) => {\n        const rest = Array.isArray(_rest[0]) ? _rest[0] : _rest;\n        return rest.reduce((a, b, i) => {\n            if (i === 0) return (a += b + ',');\n            else if (i === 1) return (a += b + ' ');\n            else if (i % 2 === 0) return (a += 'L' + b + ',');\n            else return (a += b + ' ');\n        }, 'M');\n    }\n};\n\nexport const shuffle = array => {\n    const copyArray = array.map(el => el);\n    for (let i = copyArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const k = copyArray[i];\n        copyArray[i] = copyArray[j];\n        copyArray[j] = k;\n    }\n    return copyArray;\n};\n\nexport const makeArrayNumber = ({ startNum = 1, endNum }) => {\n    const rangeNum = [];\n    for (let i = startNum; i < endNum + 1; i++) {\n        rangeNum.push(i);\n    }\n    return rangeNum;\n};\n\nexport const isSameArray = (a, b) => {\n    let n;\n    if (a.length === b.length) {\n        n = 0;\n        a.forEach((el, i) => {\n            if (el === b[i]) n += 1;\n        });\n    }\n    return n === a.length;\n};\n\nexport const saveImage = svg => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 800;\n    canvas.height = 800;\n    const data = new XMLSerializer().serializeToString(svg);\n    const blob = new Blob([data], { type: 'image/svg+xml' });\n    const img = new Image();\n    const url = URL.createObjectURL(blob);\n    img.src = url;\n\n    img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        canvas.getContext('2d')?.drawImage(img, 0, 0);\n        URL.revokeObjectURL(url);\n        const uri = canvas.toDataURL('image/png').replace('image/png', 'octet/stream');\n        console.log(uri);\n        const a = document.createElement('a');\n        a.href = uri;\n        a.download = 'myPhoto.png';\n        a.click();\n        URL.revokeObjectURL(uri);\n    };\n};\n\nexport const calculateAnswer = (num, sign) => {\n    let ans;\n    switch (sign) {\n        case '+':\n            ans = 0;\n            num.forEach(el => {\n                ans = ans + el;\n            });\n            break;\n        case '-':\n            num.forEach((el, i) => {\n                ans = i === 0 ? el : ans + el;\n            });\n            break;\n        case '*':\n            ans = 1;\n            num.forEach(el => {\n                ans = ans * el;\n            });\n            break;\n        case '/':\n            ans = {};\n            ans.q = Math.floor(num[0] / num[1]);\n            ans.r = num[0] % num[1];\n            break;\n    }\n    return ans;\n};\n","export default __webpack_public_path__ + \"static/media/LS00000301.mp3?d696a4b2\";","export default __webpack_public_path__ + \"static/media/LS00000300.mp3?688e36a7\";","import { loadLocalSound, loadFragment } from 'sol-common';\nimport Snap from 'sol-common/snap';\nimport { SOL } from 'sol-common/util';\nimport feedbackRight from '../assets/images/LI00000013.svg';\nimport feedbackWrong from '../assets/images/LI00000009.svg';\nimport LS00000301 from '../assets/sounds/LS00000301.mp3';\nimport LS00000300 from '../assets/sounds/LS00000300.mp3';\n\nexport default function D1feedback({ canvas = SOL.SVG.g(), el, bool, scale = 1, gap = [0, 0], rotation = 0, retouchTime = 300 }) {\n    return new Promise(resolve => {\n        const preventTouchRect = SOL.SVG.rect(0, 0, 800, 500).attr({ opacity: '0' }); // 추가 터치 방지\n        const index = Number(bool);\n        // 아이콘        \n        const icon = [feedbackWrong, feedbackRight][index];\n        const { node: iconNode } = loadFragment({ src: icon, key: 'feedback' + (index + 1), type: 'svg' });        \n        const { x2, y } = el.getTBox();\n        const iconSize = [iconNode.getAttribute('width'), iconNode.getAttribute('height')].map(el => el * scale);\n        const trans = [x2 - iconSize[0] / 2 + gap[0], y - iconSize[1] + gap[1]];\n        \n        // 사운드\n        const localSound = [LS00000301, LS00000300][index];\n        const sound = loadLocalSound(localSound);\n\n        // 아이콘 그리기\n        canvas.transform('t' + trans + 'r' + rotation + 's' + scale);\n        Snap(iconNode).appendTo(canvas);\n\n        // setUserAction\n        SOL.controller.addUserAction(index);\n\n        const retouchTimeout = setTimeout(() => preventTouchRect.remove(), retouchTime);\n        // 사운드 재생\n        sound.play();\n        sound.once('end', () => {\n            preventTouchRect && preventTouchRect.remove();\n            retouchTimeout && clearTimeout(retouchTimeout);\n            canvas.remove();\n            resolve();\n        });\n    });\n}\n","module.exports = \"<svg version=\\\"1.1\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"43\\\" height=\\\"43\\\" viewBox=\\\"0 0 43 43\\\" style=\\\"enable-background:new 0 0 43 43;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:#23C274;} .st1{fill:none;stroke:#FFFFFF;stroke-width:5;stroke-linecap:round;stroke-miterlimit:10;} </style><g><path class=\\\"st0\\\" d=\\\"M0.5,8.8v16.8c0,3.8,2.8,7,6.4,7.4v7.3c0,0.6,0.4,1.1,1,1.3c0,0.1,0.3,0.1,0.4,0.1c0.4,0,0.7-0.1,1-0.4 l8.3-8.3h17.3c4,0,7.4-3.3,7.4-7.4V8.7c0-4-3.3-7.4-7.4-7.4H7.8C3.8,1.4,0.5,4.7,0.5,8.8z\\\"></path><circle class=\\\"st1\\\" cx=\\\"21.5\\\" cy=\\\"17.1\\\" r=\\\"9.3\\\"></circle></g></svg>\"","module.exports = \"<svg version=\\\"1.1\\\" id=\\\"레이어_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"43\\\" height=\\\"43\\\" viewBox=\\\"0 0 43 43\\\" style=\\\"enable-background:new 0 0 43 43;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\"> .st0{fill:none;stroke:#FFFFFF;stroke-width:5;stroke-linecap:round;stroke-miterlimit:10;} .st1{fill:#F74E6D;} </style><path class=\\\"st1\\\" d=\\\"M0.6,8.8v16.7c0,3.7,2.8,6.8,6.4,7.3v7.3c0,0.6,0.3,1.1,0.9,1.3c0.2,0,0.4,0.1,0.6,0.1c0.4,0,0.7-0.1,1-0.4 l8.2-8.2H35c4,0,7.3-3.3,7.3-7.3V8.8c0-4-3.3-7.3-7.3-7.3H7.9C3.9,1.4,0.6,4.7,0.6,8.8z\\\"></path><g><line class=\\\"st0\\\" x1=\\\"14.4\\\" y1=\\\"9.6\\\" x2=\\\"29.5\\\" y2=\\\"24.7\\\"></line><line class=\\\"st0\\\" x1=\\\"29.5\\\" y1=\\\"9.6\\\" x2=\\\"14.4\\\" y2=\\\"24.7\\\"></line></g></svg>\""],"sourceRoot":""}